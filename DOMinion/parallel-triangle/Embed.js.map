{"version":3,"file":"Embed.js","sources":["../../../dominion/node_modules/unreachable/src/unreachable.js","../../../dominion/src/List.js","../../../dominion/src/Diff/EditDistance.js","../../../dominion/src/Diff.js","../../../dominion/src/Patch.js","../../../dominion/node_modules/result.flow/src/Ok.js","../../../dominion/node_modules/result.flow/src/Error.js","../../../dominion/node_modules/result.flow/src/Result.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Error.js","../../../dominion/node_modules/decoder.flow/src/Decoder/String.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Boolean.js","../../../dominion/node_modules/integer.flow/src/Integer.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Integer.js","../../../dominion/node_modules/float.flow/src/Float.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Float.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Optional.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Field.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Record.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Form.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Index.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Array.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Accessor.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Dictionary.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Either.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Null.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Undefined.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Ok.js","../../../dominion/node_modules/decoder.flow/src/Decoder/And.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Match.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Decoder.js","../../../dominion/node_modules/decoder.flow/src/Decoder/Maybe.js","../../../dominion/node_modules/decoder.flow/src/Decoder.js","../../../dominion/src/Patch/DOM.js","../../../dominion/node_modules/dictionary.flow/src/Dictionary.js","../../../dominion/src/DOMinion.js","../../../dominion/src/Format/FlatBuffer/Error.js","../../../dominion/src/Format/FlatBuffer/JSON.fbs/JSON.js","../../../dominion/src/Format/FlatBuffer/Decoder.fbs/Decoder.js","../../../dominion/src/Format/FlatBuffer/ChangeLog.fbs/ChangeLog.js","../../../dominion/src/Format/FlatBuffer/JSON.fbs.js","../../../dominion/src/Format/FlatBuffer/Decoder.fbs.js","../../../dominion/src/Format/FlatBuffer/ChangeLog.fbs/Op.js","../../../dominion/src/Format/FlatBuffer/ChangeLog.fbs/Change.js","../../../dominion/src/Format/FlatBuffer/ChangeLog.fbs.js","../../../dominion/src/Format/FlatBuffer/Encoder.js","../../../dominion/src/Format/FlatBuffer/Decoder.js","../../../dominion/src/Format/FlatBuffer.js","../../src/Process.js","../../src/parallel-triangle/Embed.js"],"sourcesContent":["/* @flow */\n\nexport const unreachable = (value: empty): empty => {\n  const format = JSON.stringify(value)\n  throw new TypeError(`Internal error: Encountered impossible value: ${format}`)\n}\n\nexport default unreachable\n","/* @flow */\n\ninterface Empty<a> {\n  isEmpty: true;\n  length: 0;\n  push(item: a): List<a>;\n  toArray(): Array<a>;\n}\n\ninterface Linked<a> {\n  isEmpty: false;\n  length: number;\n  head: a;\n  tail: List<a>;\n  push(item: a): List<a>;\n  toArray(): Array<a>;\n}\n\nexport type List<a> = Empty<a> | Linked<a>\n\nclass EmptyList<a> implements Empty<a> {\n  length = 0\n  isEmpty = true\n  toArray(): a[] {\n    return nil\n  }\n  push(head: a): Linked<a> {\n    return new LinkedList(head, this)\n  }\n}\n\nclass LinkedList<a> implements Linked<a> {\n  head: a\n  tail: List<a>\n  length: number\n  isEmpty = false\n  constructor(head: a, tail: List<a>) {\n    this.head = head\n    this.tail = tail\n    this.length = this.tail.length + 1\n  }\n  push(head: a): List<a> {\n    return new LinkedList(head, this)\n  }\n  toArray(): a[] {\n    const array = []\n    let node = this\n    while (node.isEmpty === false) {\n      array.push(node.head)\n      node = node.tail\n    }\n    return array\n  }\n}\n\nconst nil: any[] = Object.freeze([])\nconst emptyList: List<any> = new EmptyList()\n\nexport const empty = <a>(): List<a> => emptyList\nexport const singleton = <a>(head: a): List<a> =>\n  new LinkedList(head, emptyList)\nexport const push = <a>(head: a, tail: List<a>): List<a> =>\n  new LinkedList(head, tail)\n","// @flow\n\nimport { empty, singleton, type List } from \"../List\"\nimport unreachable from \"unreachable\"\n\nexport const Retain = \"Retain\"\nexport const Delete = \"Delete\"\n\ntype Edit<a> = a | typeof Retain | typeof Delete\n\n// We don't want to copy arrays all the time, aren't mutating lists, and\n// only need O(1) prepend and length, we can get away with a custom singly\n// linked list implementation.\n\n// Abstract out the table in case I want to edit the implementation to\n// arrays of arrays or something.\n\nexport class Table<a> {\n  cells: { [string]: Cell<a> }\n  last: { [string]: number }\n  next: { [string]: a }\n  constructor() {\n    this.cells = (Object.create(null): Object)\n    this.last = (Object.create(null): Object)\n    this.next = (Object.create(null): Object)\n  }\n  static init(last: Array<[string, a]>, next: Array<[string, a]>): Table<a> {\n    const table = new this()\n    let n = last.length\n    let m = next.length\n    let i = 0\n    let j = 0\n\n    table.put(i, j, new Cell(empty()))\n\n    for (i = 1; i <= m; i += 1) {\n      const [key, node] = next[i - 1]\n      table.next[key] = node\n      table.put(i, 0, table.get(i - 1, 0).insert(key))\n    }\n\n    for (j = 1; j <= n; j += 1) {\n      const [key, node] = last[j - 1]\n      table.last[key] = j - 1\n      table.put(0, j, table.get(0, j - 1).delete(key))\n    }\n\n    return table\n  }\n  static create(last: Array<[string, a]>, next: Array<[string, a]>): Table<a> {\n    const n = last.length\n    const m = next.length\n\n    let table = Table.init(last, next)\n    let i = 0\n    let j = 0\n\n    for (i = 1; i <= m; i += 1) {\n      for (j = 1; j <= n; j += 1) {\n        table = chooseCell(\n          table,\n          i,\n          j,\n          last,\n          next,\n          <a>(\n            direction: Direction,\n            table: Table<a>,\n            edits: Cell<a>,\n            last: Array<[string, a]>,\n            next: Array<[string, a]>\n          ): Table<a> => {\n            switch (direction) {\n              case \"Left\": {\n                return table.put(i, j, edits.insert(next[i - 1][0]))\n              }\n              case \"Up\": {\n                return table.put(i, j, edits.delete(last[j - 1][0]))\n              }\n              case \"Diagonal\": {\n                if (last[j - 1][0] === next[i - 1][0]) {\n                  return table.put(i, j, edits.retain(last[j - 1][0]))\n                } else {\n                  return table.put(\n                    i,\n                    j,\n                    edits.delete(last[j - 1][0]).insert(next[i - 1][0])\n                  )\n                }\n              }\n              default:\n                return unreachable(direction)\n            }\n          }\n        )\n      }\n    }\n\n    return table\n  }\n  put(x: number, y: number, cell: Cell<a>): Table<a> {\n    this.cells[`${x},${y}`] = cell\n    return this\n  }\n  get(x: number, y: number): Cell<a> {\n    const cell = this.cells[`${x},${y}`]\n    if (cell) {\n      return cell\n    } else {\n      return (this.cells[`${x},${y}`] = new Cell(empty()))\n    }\n  }\n}\n\nclass Cell<a> {\n  edits: List<Edit<string>>\n  length: number\n  constructor(edits: List<Edit<string>>) {\n    this.edits = edits\n    this.length = edits.length\n  }\n  insert(key: string): Cell<a> {\n    return new Cell(this.edits.push(key))\n  }\n  delete(key: string): Cell<a> {\n    return new Cell(this.edits.push(Delete))\n  }\n  retain(key: string): Cell<a> {\n    const { edits } = this\n    return new Cell(edits.push(Retain))\n  }\n  toArray(): Edit<string>[] {\n    return this.edits.toArray().reverse()\n  }\n}\n\ntype Direction = \"Up\" | \"Left\" | \"Diagonal\"\n\nconst chooseCell = <a>(\n  table: Table<a>,\n  x: number,\n  y: number,\n  last: Array<[string, a]>,\n  next: Array<[string, a]>,\n  edit: <a>(\n    Direction,\n    Table<a>,\n    Cell<a>,\n    Array<[string, a]>,\n    Array<[string, a]>\n  ) => Table<a>\n): Table<a> => {\n  let edits = table.get(x, y - 1)\n  let min = edits.length\n  let direction: Direction = \"Up\"\n\n  if (table.get(x - 1, y).length < min) {\n    edits = table.get(x - 1, y)\n    min = edits.length\n    direction = \"Left\"\n  }\n\n  if (table.get(x - 1, y - 1).length < min) {\n    edits = table.get(x - 1, y - 1)\n    min = edits.length\n    direction = \"Diagonal\"\n  }\n\n  return edit(direction, table, edits, last, next)\n}\n\n// Constructor for operations (which are a stream of edits). Uses\n// variation of Levenshtein Distance.\nexport const editDistance = <a>(\n  last: Array<[string, a]>,\n  next: Array<[string, a]>\n): Cell<a> => Table.create(last, next).get(next.length, last.length)\n","/* @flow */\n\nimport type {\n  Node,\n  Text,\n  Comment,\n  Element,\n  Thunk,\n  Tagged,\n  Indexed,\n  Fragment,\n  UnindexedElement,\n  IndexedElement,\n  IndexedFragment,\n  UnindexedFragment,\n  IndexedChildren,\n  UnindexedChildren,\n  Properties,\n  Attributes,\n  StyleRules,\n  Listener,\n  Listeners\n} from \"./DOM/Node\"\nimport type { Encoder, ChangeList, Result } from \"./Log\"\nimport { nodeType } from \"./DOM/Node\"\nimport Diff from \"./Diff/Diff\"\nimport unreachable from \"unreachable\"\nimport { Table, Retain, Delete } from \"./Diff/EditDistance\"\n\nconst empty: Array<any> = Object.freeze([])\nconst blank: Object = Object.freeze(Object.create(null))\n\nclass Changes<a> implements ChangeList {\n  last: Node<a>\n  next: Node<a>\n  constructor(last: Node<a>, next: Node<a>) {\n    this.last = last\n    this.next = next\n  }\n  encode<buffer>(changeLog: Encoder<buffer>, init: buffer): Result<buffer> {\n    return diffNode(this.last, this.next, new Diff(init, changeLog, 1, []))\n      .buffer\n  }\n}\n\nexport const diff = <a>(last: Node<a>, next: Node<a>): ChangeList =>\n  new Changes(last, next)\n\nexport default diff\n\nconst removeFragment = <a, x>(node: Fragment<a>, log: Diff<x>): Diff<x> => {\n  const { children } = node\n  let index = 0\n  while (index >= 0) {\n    const child = children[index]\n    if (child == null) {\n      index = -1\n    } else {\n      index++\n      log = Diff.removeNextSibling(log)\n    }\n  }\n  return log\n}\n\nconst insertText = <a, x>(node: Text<a>, log: Diff<x>): Diff<x> =>\n  Diff.insertText(log, node.data)\n\nconst insertComment = <a, x>(node: Comment<a>, log: Diff<x>): Diff<x> =>\n  Diff.insertComment(log, node.data)\n\nconst insertElementNode = <a, x>(node: Element<a>, log: Diff<x>): Diff<x> => {\n  const { localName, namespaceURI } = node\n  const out =\n    namespaceURI == null\n      ? Diff.insertElement(log, localName)\n      : Diff.insertElementNS(log, namespaceURI, localName)\n  return out\n}\n\nconst insertIndexedElement = <a, x>(\n  node: IndexedElement<a>,\n  log: Diff<x>\n): Diff<x> =>\n  Diff.selectSibling(\n    populateIndexedElement(\n      node,\n      setSettings(node, Diff.selectSibling(insertElementNode(node, log), 1))\n    ),\n    -1\n  )\n\nconst insertUnindexedElement = <a, x>(\n  node: UnindexedElement<a>,\n  log: Diff<x>\n): Diff<x> =>\n  Diff.selectSibling(\n    populateUnindexedElement(\n      node,\n      setSettings(node, Diff.selectSibling(insertElementNode(node, log), 1))\n    ),\n    -1\n  )\n\nconst populateIndexedElement = <a, x>(\n  node: IndexedElement<a>,\n  log: Diff<x>\n): Diff<x> =>\n  Diff.selectParent(\n    insertIndexedChildren(node.children, Diff.selectChildren(log))\n  )\n\nconst populateUnindexedElement = <a, x>(\n  node: UnindexedElement<a>,\n  log: Diff<x>\n): Diff<x> =>\n  Diff.selectParent(\n    insertUnindexedChildren(node.children, Diff.selectChildren(log))\n  )\n\nconst insertIndexedFragment = <a, x>(\n  node: IndexedFragment<a>,\n  log: Diff<x>\n): Diff<x> => insertIndexedChildren(node.children, log)\n\nconst insertUnindexedFragment = <a, x>(\n  node: UnindexedFragment<a>,\n  log: Diff<x>\n): Diff<x> => insertUnindexedChildren(node.children, log)\n\nconst insertIndexedChildren = <a, x>(\n  children: IndexedChildren<a>,\n  log: Diff<x>\n): Diff<x> => diffIndexedChildren(empty, children, log)\n\nconst insertUnindexedChildren = <a, x>(\n  children: UnindexedChildren<a>,\n  log: Diff<x>\n): Diff<x> => diffUnindexedChildren(empty, children, log)\n\nconst insertThunk = <a, x>(thunk: Thunk<a>, log: Diff<x>): Diff<x> =>\n  insertNode(thunk.force(), log)\n\nconst insertTagged = <inner, outer, x>(\n  tagged: Tagged<outer, inner>,\n  log: Diff<x>\n): Diff<x> => insertNode(tagged.node, log)\n\nconst replaceWithText = <a, x>(node: Text<a>, log: Diff<x>): Diff<x> =>\n  Diff.replaceWithText(log, node.data)\n\nconst replaceWithComment = <a, x>(node: Comment<a>, log: Diff<x>): Diff<x> =>\n  Diff.replaceWithComment(log, node.data)\n\nconst replaceWithElementNode = <a, x>(\n  node: Element<a>,\n  log: Diff<x>\n): Diff<x> => {\n  const { localName, namespaceURI } = node\n  const out =\n    namespaceURI == null\n      ? Diff.replaceWithElement(log, localName)\n      : Diff.replaceWithElementNS(log, namespaceURI, localName)\n  return out\n}\n\nconst replaceWithUnindexedElement = <a, x>(\n  node: UnindexedElement<a>,\n  log: Diff<x>\n): Diff<x> =>\n  populateUnindexedElement(\n    node,\n    setSettings(node, replaceWithElementNode(node, log))\n  )\n\nconst replaceWithIndexedElement = <a, x>(\n  node: IndexedElement<a>,\n  log: Diff<x>\n): Diff<x> =>\n  populateIndexedElement(\n    node,\n    setSettings(node, replaceWithElementNode(node, log))\n  )\n\nconst replaceWithThunk = <a, x>(thunk: Thunk<a>, log: Diff<x>): Diff<x> =>\n  replaceWithNode(thunk.force(), log)\n\nconst replaceWithTagged = <a, x>(tagged: Tagged<a>, log: Diff<x>): Diff<x> =>\n  replaceWithNode(tagged.node, log)\n\nconst replaceWithIndexedFragment = <a, x>(\n  node: IndexedFragment<a>,\n  log: Diff<x>\n): Diff<x> =>\n  insertIndexedFragment(\n    node,\n    Diff.removeNextSibling(Diff.selectSibling(log, -1))\n  )\n\nconst replaceWithUnindexedFragment = <a, x>(\n  node: UnindexedFragment<a>,\n  log: Diff<x>\n): Diff<x> =>\n  insertUnindexedFragment(\n    node,\n    Diff.removeNextSibling(Diff.selectSibling(log, -1))\n  )\n\nconst replaceWithNode = <a, x>(node: Node<a>, log: Diff<x>): Diff<x> => {\n  switch (node.nodeType) {\n    case nodeType.TEXT_NODE: {\n      return replaceWithText(node, log)\n    }\n    case nodeType.COMMENT_NODE: {\n      return replaceWithComment(node, log)\n    }\n    case nodeType.ELEMENT_NODE: {\n      return replaceWithUnindexedElement(node, log)\n    }\n    case nodeType.INDEXED_ELEMENT_NODE: {\n      return replaceWithIndexedElement(node, log)\n    }\n    case nodeType.THUNK_NODE: {\n      return replaceWithThunk(node, log)\n    }\n    case nodeType.TAGGED_ELEMENT_NODE: {\n      return replaceWithTagged(node, log)\n    }\n    case nodeType.INDEXED_FRAGMENT_NODE: {\n      return replaceWithIndexedFragment(node, log)\n    }\n    case nodeType.UNINDEXED_FRAGMENT_NODE: {\n      return replaceWithUnindexedFragment(node, log)\n    }\n    default: {\n      return unreachable(node)\n    }\n  }\n}\n\nconst insertNode = <a, x>(node: Node<a>, log: Diff<x>): Diff<x> => {\n  switch (node.nodeType) {\n    case nodeType.TEXT_NODE: {\n      return Diff.insertText(log, node.data)\n    }\n    case nodeType.COMMENT_NODE: {\n      return Diff.insertComment(log, node.data)\n    }\n    case nodeType.ELEMENT_NODE: {\n      return insertUnindexedElement(node, log)\n    }\n    case nodeType.INDEXED_ELEMENT_NODE: {\n      return insertIndexedElement(node, log)\n    }\n    case nodeType.THUNK_NODE: {\n      return insertThunk(node, log)\n    }\n    case nodeType.TAGGED_ELEMENT_NODE: {\n      return insertTagged(node, log)\n    }\n    case nodeType.INDEXED_FRAGMENT_NODE: {\n      return insertIndexedFragment(node, log)\n    }\n    case nodeType.UNINDEXED_FRAGMENT_NODE: {\n      return insertUnindexedFragment(node, log)\n    }\n    default: {\n      return unreachable(node)\n    }\n  }\n}\n\nconst diffThunk = <a, x>(\n  last: Thunk<a>,\n  next: Thunk<a>,\n  log: Diff<x>\n): Diff<x> => {\n  const { args: lastArgs, render: lastRender } = last\n  const { args: nextArgs, render: nextRender } = next\n  const equal =\n    lastRender === nextRender &&\n    lastArgs.length === nextArgs.length &&\n    lastArgs[0] === nextArgs[0] &&\n    lastArgs[1] === nextArgs[1] &&\n    lastArgs[2] === nextArgs[2] &&\n    lastArgs[3] === nextArgs[3] &&\n    lastArgs[4] === nextArgs[4] &&\n    lastArgs[5] === nextArgs[5] &&\n    lastArgs[6] === nextArgs[6] &&\n    lastArgs[7] === nextArgs[7] &&\n    lastArgs[8] === nextArgs[8]\n\n  if (equal) {\n    next.node = last.node\n    return log\n  } else {\n    return diffNode(last.force(), next.force(), log)\n  }\n}\n\nconst diffTagged = <message, tagged, x>(\n  last: Tagged<message, tagged>,\n  next: Tagged<message, tagged>,\n  log: Diff<x>\n): Diff<x> => {\n  return diffNode(last.node, next.node, log)\n}\n\nconst diffNode = <a, x>(\n  last: Node<a>,\n  next: Node<a>,\n  log: Diff<x>\n): Diff<x> => {\n  if (last === next) {\n    return log\n  } else {\n    switch (next.nodeType) {\n      case nodeType.TEXT_NODE: {\n        switch (last.nodeType) {\n          case nodeType.TEXT_NODE:\n            return diffText(last, next, log)\n          case nodeType.INDEXED_FRAGMENT_NODE:\n            return insertText(next, removeFragment(last, log))\n          case nodeType.UNINDEXED_FRAGMENT_NODE:\n            return insertText(next, removeFragment(last, log))\n          default:\n            return replaceWithText(next, log)\n        }\n      }\n      case nodeType.COMMENT_NODE: {\n        switch (last.nodeType) {\n          case nodeType.COMMENT_NODE:\n            return diffComment(last, next, log)\n          case nodeType.INDEXED_FRAGMENT_NODE:\n            return insertComment(next, removeFragment(last, log))\n          case nodeType.UNINDEXED_FRAGMENT_NODE:\n            return insertComment(next, removeFragment(last, log))\n          default:\n            return replaceWithComment(next, log)\n        }\n      }\n      case nodeType.ELEMENT_NODE: {\n        switch (last.nodeType) {\n          case nodeType.ELEMENT_NODE:\n            return diffUnindexedElement(last, next, log)\n          case nodeType.INDEXED_FRAGMENT_NODE:\n            return insertUnindexedElement(next, removeFragment(last, log))\n          case nodeType.UNINDEXED_FRAGMENT_NODE:\n            return insertUnindexedElement(next, removeFragment(last, log))\n          default:\n            return replaceWithUnindexedElement(next, log)\n        }\n      }\n      case nodeType.INDEXED_ELEMENT_NODE: {\n        switch (last.nodeType) {\n          case nodeType.INDEXED_ELEMENT_NODE:\n            return diffIndexedElement(last, next, log)\n          case nodeType.INDEXED_FRAGMENT_NODE:\n            return insertIndexedElement(next, removeFragment(last, log))\n          case nodeType.UNINDEXED_FRAGMENT_NODE:\n            return insertIndexedElement(next, removeFragment(last, log))\n          default:\n            return replaceWithIndexedElement(next, log)\n        }\n      }\n      case nodeType.THUNK_NODE: {\n        switch (last.nodeType) {\n          case nodeType.THUNK_NODE:\n            return diffThunk(last, next, log)\n          case nodeType.INDEXED_FRAGMENT_NODE:\n            return insertThunk(next, removeFragment(last, log))\n          case nodeType.UNINDEXED_FRAGMENT_NODE:\n            return insertThunk(next, removeFragment(last, log))\n          default:\n            return replaceWithThunk(next, log)\n        }\n      }\n      case nodeType.TAGGED_ELEMENT_NODE: {\n        switch (last.nodeType) {\n          case nodeType.TAGGED_ELEMENT_NODE:\n            return diffTagged(last, next, log)\n          case nodeType.INDEXED_FRAGMENT_NODE:\n            return insertTagged(next, removeFragment(last, log))\n          case nodeType.UNINDEXED_FRAGMENT_NODE:\n            return insertTagged(next, removeFragment(last, log))\n          default:\n            return replaceWithTagged(next, log)\n        }\n      }\n      case nodeType.INDEXED_FRAGMENT_NODE: {\n        switch (last.nodeType) {\n          case nodeType.INDEXED_FRAGMENT_NODE:\n            return diffIndexedFragment(last, next, log)\n          case nodeType.UNINDEXED_FRAGMENT_NODE:\n            return insertIndexedFragment(next, removeFragment(last, log))\n          default:\n            return replaceWithIndexedFragment(next, log)\n        }\n      }\n      case nodeType.UNINDEXED_FRAGMENT_NODE: {\n        switch (last.nodeType) {\n          case nodeType.UNINDEXED_FRAGMENT_NODE:\n            return diffUnindexedFragment(last, next, log)\n          case nodeType.INDEXED_FRAGMENT_NODE:\n            return insertUnindexedFragment(next, removeFragment(last, log))\n          default:\n            return replaceWithUnindexedFragment(next, log)\n        }\n      }\n      default: {\n        return unreachable(next)\n      }\n    }\n  }\n}\n\nconst diffText = <a, x>(\n  last: Text<a>,\n  next: Text<a>,\n  log: Diff<x>\n): Diff<x> => {\n  if (last == null) {\n    return insertText(next, log)\n  } else if (last.data === next.data) {\n    return log\n  } else {\n    return diffTextData(last.data, next.data, log)\n  }\n}\n\nconst diffComment = <a, x>(\n  last: Comment<a>,\n  next: Comment<a>,\n  log: Diff<x>\n): Diff<x> => {\n  if (last == null) {\n    return insertComment(next, log)\n  } else if (last.data === next.data) {\n    return log\n  } else {\n    return diffTextData(last.data, next.data, log)\n  }\n}\n\nconst diffTextData = <x>(last: string, next: string, log: Diff<x>): Diff<x> => {\n  const nextLength = next.length\n  const lastLength = last.length\n  if (nextLength <= 6) {\n    return Diff.setTextData(log, next)\n  } else if (lastLength > nextLength) {\n    const index = last.indexOf(next)\n    if (index === -1) {\n      return Diff.setTextData(log, next)\n    } else {\n      return Diff.editTextData(\n        log,\n        index,\n        lastLength - index - nextLength,\n        \"\",\n        \"\"\n      )\n    }\n  } else {\n    const index = next.indexOf(last)\n    if (index === -1) {\n      return Diff.setTextData(log, next)\n    } else {\n      return Diff.editTextData(\n        log,\n        0,\n        0,\n        next.substr(0, index),\n        next.substr(index + last.length)\n      )\n    }\n  }\n}\n\nconst diffUnindexedElement = <a, x>(\n  last: UnindexedElement<a>,\n  next: UnindexedElement<a>,\n  log: Diff<x>\n): Diff<x> => {\n  if (\n    next.localName === last.localName &&\n    next.namespaceURI === last.namespaceURI\n  ) {\n    return Diff.selectParent(\n      diffUnindexedChildren(\n        last.children,\n        next.children,\n        Diff.selectChildren(diffSettings(last, next, log))\n      )\n    )\n  } else {\n    return replaceWithUnindexedElement(next, log)\n  }\n}\n\nconst diffUnindexedFragment = <a, x>(\n  last: UnindexedFragment<a>,\n  next: UnindexedFragment<a>,\n  log: Diff<x>\n): Diff<x> => diffUnindexedChildren(last.children, next.children, log)\n\nconst diffUnindexedChildren = <a, x>(\n  last: UnindexedChildren<a>,\n  next: UnindexedChildren<a>,\n  log: Diff<x>\n): Diff<x> => {\n  let index = 0\n  while (index >= 0) {\n    const lastChild = last[index]\n    const nextChild = next[index]\n\n    // If last and next versions contain a child for the given index, just\n    // diff them and move on.\n    if (lastChild != null && nextChild != null) {\n      log = diffNode(lastChild, nextChild, Diff.selectSibling(log, 1))\n      index += 1\n      // If child is present in next version but not in the last version\n      // insert it and select it.\n    } else if (nextChild != null) {\n      log = Diff.selectSibling(insertNode(nextChild, log), 1)\n      index += 1\n      // If child is present in last version but isn't present in new version\n      // remove child\n    } else if (lastChild != null) {\n      log = Diff.removeNextSibling(log)\n      index += 1\n    } else {\n      index = -1\n    }\n  }\n\n  return log\n}\n\nconst diffIndexedElement = <a, x>(\n  last: IndexedElement<a>,\n  next: IndexedElement<a>,\n  log: Diff<x>\n): Diff<x> => {\n  if (\n    next.localName === last.localName &&\n    next.namespaceURI === next.namespaceURI\n  ) {\n    return Diff.selectParent(\n      diffIndexedChildren(\n        last.children,\n        next.children,\n        Diff.selectChildren(diffSettings(last, next, log))\n      )\n    )\n  } else {\n    return replaceWithIndexedElement(next, log)\n  }\n}\n\nconst diffIndexedFragment = <a, x>(\n  last: IndexedFragment<a>,\n  next: IndexedFragment<a>,\n  log: Diff<x>\n): Diff<x> => diffIndexedChildren(last.children, next.children, log)\n\nconst push = <a>(x: a, xs: ?(a[])): a[] => {\n  if (xs != null) {\n    xs.push(x)\n    return xs\n  } else {\n    return [x]\n  }\n}\n\ntype Insert<a> = { kind: \"insert\", node: Node<a> }\ntype DiffStash<a> = { kind: \"diff\", last: Node<a>, next: Node<a> | null }\n\ntype QOP<a> = Insert<a> | DiffStash<a>\n\nconst diffIndexedChildren = <a, x>(\n  last: IndexedChildren<a>,\n  next: IndexedChildren<a>,\n  diff: Diff<x>\n): Diff<x> => {\n  const table = Table.create(last, next)\n  const edits = table.get(next.length, last.length).toArray()\n  const stash = {}\n  const shifted = {}\n\n  let index = 0\n  for (let edit of edits) {\n    switch (edit) {\n      case Delete: {\n        const key = last[index][0]\n        if (table.next[key] == null) {\n          diff == Diff.removeNextSibling(diff)\n        } else if (shifted[key] == null) {\n          stash[key] = diff.address\n          diff = Diff.stashNextSibling(diff, diff.address)\n        }\n        index++\n        break\n      }\n      case Retain: {\n        const [key, node] = last[index]\n        diff = diffNode(node, table.next[key], Diff.selectSibling(diff, 1))\n        index++\n        break\n      }\n      default: {\n        const key = edit\n        if (table.last[key] == null) {\n          diff = insertNode(table.next[key], diff)\n          diff = Diff.selectSibling(diff, 1)\n        } else {\n          if (stash[key] == null) {\n            shifted[key] = true\n            diff = Diff.shiftSiblings(diff, table.last[key] - index)\n            diff = Diff.selectSibling(diff, 1)\n          } else {\n            diff = Diff.insertStashedNode(diff, stash[key])\n            diff = Diff.selectSibling(diff, 1)\n          }\n        }\n      }\n    }\n  }\n\n  return diff\n}\n\n\nconst setSettings = <a, x>(node: Element<a>, log: Diff<x>): Diff<x> => {\n  const v1 = log\n  const v2 = diffProperties(blank, node.properties, v1)\n  const v3 = diffAttributes(blank, node.attributes, v2)\n  const v4 = diffStyle(blank, node.style, v3)\n  const v5 = diffListeners(blank, node.listeners, v4)\n  return v5\n}\n\nconst diffSettings = <a, x>(\n  last: Element<a>,\n  next: Element<a>,\n  log: Diff<x>\n): Diff<x> => {\n  const v1 = log\n  const v2 = diffProperties(last.properties, next.properties, v1)\n  const v3 = diffAttributes(last.attributes, next.attributes, v2)\n  const v4 = diffStyle(last.style, next.style, v3)\n  const v5 = diffListeners(last.listeners, next.listeners, v4)\n  return v5\n}\n\nconst diffProperties = <x>(\n  last: Properties,\n  next: Properties,\n  log: Diff<x>\n): Diff<x> => {\n  for (let name in last) {\n    if (!(name in next)) {\n      log = Diff.deleteProperty(log, name)\n    }\n  }\n\n  for (let name in next) {\n    const value = next[name]\n    if (last[name] !== value) {\n      if (value === undefined) {\n        log = Diff.deleteProperty(log, name)\n      } else {\n        log = Diff.assignProperty(log, name, value)\n      }\n    }\n  }\n\n  return log\n}\n\nconst diffAttributes = <x>(\n  last: Attributes,\n  next: Attributes,\n  log: Diff<x>\n): Diff<x> => {\n  for (let key in last) {\n    if (!(key in next)) {\n      const attribute = last[key]\n      if (attribute != null) {\n        const { name, namespaceURI } = attribute\n        if (namespaceURI == null) {\n          log = Diff.removeAttribute(log, name)\n        } else {\n          log = Diff.removeAttributeNS(log, namespaceURI, name)\n        }\n      }\n    }\n  }\n\n  for (let key in next) {\n    const attribute = next[key]\n    if (attribute != null) {\n      const { namespaceURI, name, value } = attribute\n      const x = last[key]\n      if (x == null || x.value !== value) {\n        if (namespaceURI == null) {\n          if (value == null) {\n            log = Diff.removeAttribute(log, name)\n          } else {\n            log = Diff.setAttribute(log, name, value)\n          }\n        } else {\n          if (value == null) {\n            log = Diff.removeAttributeNS(log, namespaceURI, name)\n          } else {\n            log = Diff.setAttributeNS(log, namespaceURI, name, value)\n          }\n        }\n      }\n    }\n  }\n\n  return log\n}\n\nconst diffStyle = <x>(\n  last: StyleRules,\n  next: StyleRules,\n  log: Diff<x>\n): Diff<x> => {\n  let styles = null\n\n  for (let name in last) {\n    if (name !== \"settingType\") {\n      if (!(name in next) && last[name] != null) {\n        log = Diff.removeStyleRule(log, name)\n      }\n    }\n  }\n\n  for (let name in next) {\n    if (name != \"settingType\") {\n      const value = next[name]\n      const lastValue = last[name]\n      if (lastValue !== value) {\n        if (value == null) {\n          if (lastValue != null) {\n            log = Diff.removeStyleRule(log, name)\n          }\n        } else {\n          log = Diff.setStyleRule(log, name, value)\n        }\n      }\n    }\n  }\n\n  return log\n}\n\nconst isEqualListeners = <a>(last: Listener<a>, next: Listener<a>): boolean => {\n  return (\n    last.type === next.type &&\n    last.capture === next.capture &&\n    JSON.stringify(last.decoder) === JSON.stringify(next.decoder)\n  )\n}\n\nconst diffListeners = <x, a>(\n  last: Listeners<a>,\n  next: Listeners<a>,\n  log: Diff<x>\n): Diff<x> => {\n  for (let name in last) {\n    if (!(name in next)) {\n      const listener = last[name]\n      if (listener) {\n        const { type, capture, decoder } = listener\n        log = Diff.removeEventDecoder(log, type, decoder, capture)\n      }\n    }\n  }\n\n  for (let name in next) {\n    const nextListener = next[name]\n    const lastListener = last[name]\n\n    const [remove, add] =\n      lastListener && !nextListener\n        ? [lastListener, null]\n        : !lastListener && nextListener\n          ? [null, nextListener]\n          : lastListener &&\n            nextListener &&\n            isEqualListeners(lastListener, nextListener)\n            ? [null, null]\n            : [lastListener, nextListener]\n\n    if (remove) {\n      const { type, capture, decoder } = remove\n      log = Diff.removeEventDecoder(log, type, decoder, capture)\n    }\n    if (add) {\n      const { type, capture, decoder } = add\n      log = Diff.addEventDecoder(log, type, decoder, capture)\n    }\n  }\n\n  return log\n}\n","/* @flow */\n\nimport type {\n  Decode,\n  Archive,\n  Encoder,\n  DecoderError,\n  ChangeList,\n  Result\n} from \"./Log\"\n\nexport const patch = <a>(\n  archive: Archive<a>,\n  changeList: ChangeList\n): Result<a> => archive.patch(changeList)\n","/* @flow */\n\nimport type { Maybe } from \"maybe.flow\"\nimport type { Result } from \"./Result/Result\"\n\n/**\n * Represents succeeded result and contains result `value`.\n * @param a type of the `value` for this result.\n */\nexport default class Ok<a, x = *> {\n  /**\n   * Sentinel property for diferentitating between `Ok` and `Error` results.\n   */\n  isOk: true = true\n\n  value: a\n  /**\n   * @param value Success value of this result.\n   */\n  constructor(value: a) {\n    this.value = value\n  }\n  map<b>(f: (value: a) => b): Result<x, b> {\n    return new Ok(f(this.value))\n  }\n  format<y>(f: (error: x) => y): Result<y, a> {\n    return this\n  }\n  chain<b>(next: (value: a) => Result<x, b>): Result<x, b> {\n    return next(this.value)\n  }\n  capture<y>(next: (error: x) => Result<y, a>): Result<y, a> {\n    return this\n  }\n  recover(f: (error: x) => a): Result<x, a> {\n    return this\n  }\n  and<b>(result: Result<x, b>): Result<x, b> {\n    return result\n  }\n  or<y>(result: Result<y, a>): Result<y, a> {\n    return this\n  }\n  toValue(fallback: a): a {\n    return this.value\n  }\n  toMaybe(): Maybe<a> {\n    return this.value\n  }\n}\n","/* @flow */\n\nimport type { Maybe } from \"maybe.flow\"\nimport type { Result } from \"./Result/Result\"\nimport Ok from \"./Ok\"\n\n/**\n * Represents failer result and contains result `error`.\n * @param x type of the `error` value for failed result.\n */\nexport default class Error<x, a = *> {\n  /**\n   * Sentinel property for diferentitating between `Ok` and `Error` results.\n   */\n  isOk: false = false\n  error: x\n  /**\n   * @param error Error value of this result.\n   */\n  constructor(error: x) {\n    this.error = error\n  }\n  map<b>(f: (value: a) => b): Result<x, b> {\n    return this\n  }\n  format<y>(f: (error: x) => y): Result<y, a> {\n    return new Error(f(this.error))\n  }\n  chain<b>(next: (value: a) => Result<x, b>): Result<x, b> {\n    return this\n  }\n  capture<y>(next: (error: x) => Result<y, a>): Result<y, a> {\n    return next(this.error)\n  }\n  recover(f: (error: x) => a): Result<x, a> {\n    return new Ok(f(this.error))\n  }\n  and<b>(result: Result<x, b>): Result<x, b> {\n    return this\n  }\n  or<y>(result: Result<y, a>): Result<y, a> {\n    return result\n  }\n  toValue(fallback: a): a {\n    return fallback\n  }\n  toMaybe(): Maybe<a> {\n    return null\n  }\n}\n","/* @flow */\n\n/**\n * Library for representing the `Result` of a computation that may fail. Which\n * is a more type friendly way to handle errors than exceptions.\n */\n\nimport type { Maybe } from \"maybe.flow\"\nimport type { Result } from \"./Result/Result\"\nimport Ok from \"./Ok\"\nimport Error from \"./Error\"\n\nexport type { Result }\n\nexport const ok = <x, a>(value: a): Result<x, a> => new Ok(value)\n\nexport const error = <x, a>(error: x): Result<x, a> => new Error(error)\n\nexport const fromMaybe = <x, a>(error: x, value: Maybe<a>): Result<x, a> => {\n  const result = value != null ? new Ok(value) : new Error(error)\n  return result\n}\n\nexport const chain = <x, a, b>(\n  f: (value: a) => Result<x, b>,\n  result: Result<x, a>\n): Result<x, b> => {\n  if (result.isOk) {\n    return f(result.value)\n  } else {\n    return result\n  }\n}\n\nexport const capture = <x, y, a>(\n  f: (error: x) => Result<y, a>,\n  result: Result<x, a>\n): Result<y, a> => (result.isOk ? result : f(result.error))\n\nexport const recover = <x, a>(\n  f: (error: x) => a,\n  result: Result<x, a>\n): Result<x, a> => (result.isOk ? result : new Ok(f(result.error)))\n\nexport const and = <x, a, b>(\n  left: Result<x, a>,\n  right: Result<x, b>\n): Result<x, b> => (left.isOk ? right : left)\n\nexport const or = <x, y, a>(\n  left: Result<x, a>,\n  right: Result<y, a>\n): Result<y, a> => (left.isOk ? left : right)\n\nexport const map = <x, a, b>(\n  f: (value: a) => b,\n  result: Result<x, a>\n): Result<x, b> => (result.isOk ? new Ok(f(result.value)) : result)\n\nexport const format = <x, y, a>(\n  f: (error: x) => y,\n  result: Result<x, a>\n): Result<y, a> => (result.isOk ? result : new Error(f(result.error)))\n\nexport const toValue = <x, a>(result: Result<x, a>, fallback: a): a =>\n  result.isOk ? result.value : fallback\n\nexport const toMaybe = <x, a>(result: Result<x, a>): Maybe<a> =>\n  result.isOk ? result.value : null\n","/* @flow */\n\nconst anArticle = /^(a|e[^u]|i|o|u)/i\n\nexport interface ErrorDecoder {\n  type: \"Error\";\n  +message: string;\n}\n\nexport class Error implements ErrorDecoder {\n  +message: string\n  description: string\n  name: string = \"Error\"\n  type = \"Error\"\n  static decode<a>(decoder: ErrorDecoder, input: mixed): Error {\n    if (decoder instanceof Error) {\n      return decoder\n    } else {\n      return new Error(decoder.message)\n    }\n  }\n  constructor(description: string = \"\") {\n    if (description !== \"\") {\n      this.description = description\n    }\n  }\n  describe(context: string) {\n    return `${this.where(context)}${this.description}`\n  }\n  where(context: string): string {\n    const result = context == `` ? `` : ` at ${context}`\n\n    return result\n  }\n  toJSON(): ErrorDecoder {\n    return {\n      type: \"Error\",\n      message: this.message\n    }\n  }\n}\n\n// Flow cannot safely type getter and setter properties, so using them is an\n// error by default. It is possible to set a setting to allow them but then\n// every signle user (direct or intderect) will have to enable it for themselfs\n// and may even shoot themselvs in the foot. There for instead we just trick\n// flow into thinking it's a regular property, that way computation of the\n// error messages is deferred until it's being used. For details see:\n// https://flow.org/en/docs/config/options/#toc-unsafe-enable-getters-and-setters-boolean\nObject.defineProperties(\n  Error.prototype,\n  ({\n    message: {\n      enumerable: true,\n      configurable: true,\n      get() {\n        const value = this.describe(\"\")\n        Object.defineProperty(this, \"message\", {\n          enumerable: true,\n          configurable: false,\n          writable: false,\n          value\n        })\n        return value\n      }\n    }\n  }: Object)\n)\n\nconst articleFor = word => (anArticle.test(word) ? \"an\" : \"a\")\nconst serialize = (value: mixed): string => {\n  switch (typeof value) {\n    case \"boolean\":\n      return `${String(value)}`\n    case \"string\":\n      return JSON.stringify(value)\n    case \"number\":\n      return `${value}`\n    case \"undefined\":\n      return \"undefined\"\n    case (\"symbol\": any):\n      return (value: any).toString()\n    case \"function\": {\n      try {\n        return `${value.toString()}`\n      } catch (_) {\n        return `function() {/*...*/}`\n      }\n    }\n    case \"object\":\n    default: {\n      if (value === null) {\n        return `null`\n      } else {\n        try {\n          const json = JSON.stringify(value)\n          switch (json.charAt(0)) {\n            case \"{\":\n              return json\n            case \"[\":\n              return json\n            case \"t\":\n              return `new Boolean(true)`\n            case \"f\":\n              return `new Boolean(false)`\n            case '\"':\n              return `new String(${json})`\n            default:\n              return `new Number(${json})`\n          }\n        } catch (_) {\n          return `{/*...*/}`\n        }\n      }\n    }\n  }\n}\n\nexport class TypeError extends Error {\n  name = \"TypeError\"\n  expect: string\n  actual: mixed\n  article: string\n  constructor(\n    expect: string,\n    actual: mixed,\n    article: string = articleFor(expect)\n  ) {\n    super()\n    this.actual = actual\n    this.expect = expect\n    this.article = article\n  }\n  describe(context: string): string {\n    const where = this.where(context)\n    const actual = serialize(this.actual)\n    const expect = `${this.article} ${this.expect}`\n\n    return `Expecting ${expect}${where} but instead got: \\`${actual}\\``\n  }\n}\n\nexport class MissmatchError extends Error {\n  expect: mixed\n  actual: mixed\n  constructor(actual: mixed, expect: mixed) {\n    super()\n    this.actual = actual\n    this.expect = expect\n  }\n  describe(context: string): string {\n    const where = this.where(context)\n    const actual = serialize(this.actual)\n    const expect = serialize(this.expect)\n\n    return `Expecting \\`${expect}\\`${where} but instead got: \\`${actual}\\``\n  }\n}\n\nexport class ThrownError extends Error {\n  name = \"ThrowError\"\n  exception: { message: string }\n  constructor(exception: { message: string }) {\n    super()\n    this.exception = exception\n  }\n  describe(context: string): string {\n    return `An exception was thrown by ${context}: ${this.exception.message}`\n  }\n}\n\nexport default Error\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { TypeError } from \"./Error\"\n\nconst StringConstructor = \"\".constructor\n\nexport interface StringDecoder<+a = string> {\n  type: \"String\";\n}\n\nexport default class String implements StringDecoder<string> {\n  type: \"String\" = \"String\"\n  static decode(input: mixed): Decode<string> {\n    if (typeof input === \"string\") {\n      return input\n    } else if (input instanceof StringConstructor) {\n      return `${input}`\n    } else {\n      return new TypeError(\"String\", input)\n    }\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { TypeError } from \"./Error\"\n\nexport interface BooleanDecoder<+a = boolean> {\n  type: \"Boolean\";\n}\n\nexport default class Boolean implements BooleanDecoder<boolean> {\n  type: \"Boolean\" = \"Boolean\"\n  static decode(input: mixed): Decode<boolean> {\n    if (input === true) {\n      return true\n    } else if (input === false) {\n      return false\n    } else {\n      return new TypeError(\"Boolean\", input)\n    }\n  }\n}\n","/* @flow */\n\nexport opaque type integer: number = number\n\nexport const parseInteger = (input: string): ?integer => {\n  const size = input.length\n  if (size === 0) {\n    return null\n  } else {\n    const ch = input[0]\n    if (ch === \"0\" && input[1] === \"x\") {\n      for (let i = 2; i < size; ++i) {\n        const ch = input[i]\n        if (\n          (\"0\" <= ch && ch <= \"9\") ||\n          (\"A\" <= ch && ch <= \"F\") ||\n          (\"a\" <= ch && ch <= \"f\")\n        ) {\n          continue\n        }\n        return null\n      }\n\n      return parseInt(input, 16)\n    }\n\n    if (ch > \"9\" || (ch < \"0\" && ((ch !== \"-\" && ch !== \"+\") || size === 1))) {\n      return null\n    }\n\n    for (let i = 1; i < size; ++i) {\n      const ch = input[i]\n      if (ch < \"0\" || \"9\" < ch) {\n        return null\n      }\n    }\n\n    return parseInt(input, 10)\n  }\n}\n\nconst toInteger = (value: number): integer => {\n  switch (value) {\n    case +Infinity:\n      return Number.MAX_SAFE_INTEGER\n    case -Infinity:\n      return Number.MIN_SAFE_INTEGER\n    case value:\n      return value\n    default:\n      return 0\n  }\n}\n\nexport const round = (value: number): integer => toInteger(Math.round(value))\n\nexport const floor = (value: number): integer => toInteger(Math.floor(value))\n\nexport const ceiling = (value: number): integer => toInteger(Math.ceil(value))\n\nexport const truncate = (value: number): integer => value | 0\n\nexport const div = (a: integer, b: integer): integer => (a / b) | 0\n\nexport const rem = (a: integer, b: integer): integer => a % b\n\nexport const mod = (a: integer, b: integer): integer => {\n  if (b === 0) {\n    throw new TypeError(\"Cannot perform mod 0. Division by zero error.\")\n  }\n  const r = a % b\n  const m = a === 0 ? 0 : b > 0 ? (a >= 0 ? r : r + b) : -mod(-a, -b)\n\n  return m === b ? 0 : m\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport type { integer } from \"integer.flow\"\nimport { truncate } from \"integer.flow\"\nimport { TypeError } from \"./Error\"\n\nexport type { integer }\n\nexport interface IntegerDecoder<+a = integer> {\n  type: \"Integer\";\n}\n\nexport default class Integer implements IntegerDecoder<integer> {\n  type = \"Integer\"\n  static decode(input: mixed): Decode<integer> {\n    // Note that if `Number.isInteger(x)` returns `true` we know that `x` is an\n    // integer number, but flow can not infer that, there for we trick flow into\n    // thinking we also perform typeof input === \"number\" so it can narrow down\n    // type to a number.\n    if (Number.isInteger(input) && typeof input === \"number\") {\n      return (truncate(input): any)\n    } else {\n      return new TypeError(\"Integer\", input)\n    }\n  }\n}\n","/* @flow */\n\nexport { isNaN, isFinite } from \"./Number\"\n\nexport opaque type float: number = number\n\nexport const parseFloat = (input: string): ?float => {\n  switch (input) {\n    case \"\":\n      return null\n    default: {\n      if (/[\\sxbo]/.test(input)) {\n        return null\n      } else {\n        const n = +input\n        switch (n) {\n          case Infinity:\n            return null\n          case -Infinity:\n            return null\n          // Faster isNaN check\n          case n:\n            return n\n          default:\n            return null\n        }\n      }\n    }\n  }\n}\n\nexport const toFloat = (value: number): float => value\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport type { float } from \"float.flow\"\nimport { TypeError } from \"./Error\"\nimport { toFloat } from \"float.flow\"\n\nexport type { float }\n\nexport interface FloatDecoder<+a = float> {\n  type: \"Float\";\n}\n\nexport default class Float implements FloatDecoder<float> {\n  type = \"Float\"\n  static decode(input: mixed): Decode<float> {\n    // Note that if `Number.isFinite(x)` returns `true` we know that `x` is a\n    // finite number, but flow can't infer it there for we trick flow into\n    // thinking that we also check typeof input === \"number\" so it will narrow\n    // the type down to number\n    if (Number.isFinite(input) && typeof input === \"number\") {\n      return (toFloat(input): any)\n    } else {\n      return new TypeError(\"Float\", input)\n    }\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { Error } from \"./Error\"\nimport * as Variant from \"./Decoder\"\n\nexport interface OptionalDecoder<a = *, +optional = ?a> {\n  type: \"Optional\";\n  optional: Decoder<a>;\n}\n\nexport default class Optional<a> implements OptionalDecoder<a> {\n  type: \"Optional\" = \"Optional\"\n  optional: Decoder<a>\n  static decode<a>(decoder: Decoder<a>, input: mixed): Decode<?a> {\n    const value = Variant.decode(decoder, input)\n    if (value instanceof Error) {\n      if (input == null) {\n        return null\n      } else {\n        return value\n      }\n    } else {\n      return value\n    }\n  }\n  constructor(decoder: Decoder<a>) {\n    this.optional = decoder\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { TypeError, ThrownError, Error } from \"./Error\"\nimport * as Variant from \"./Decoder\"\n\nexport class FieldError extends Error {\n  name = \"FieldError\"\n  field: string\n  problem: Error\n  constructor(field: string, problem: Error) {\n    super()\n    this.field = field\n    this.problem = problem\n  }\n  describe(context: string): string {\n    const where = context === \"\" ? \"input\" : context\n    return this.problem.describe(`${where}[\"${this.field}\"]`)\n  }\n}\n\nexport interface FieldDecoder<+a> {\n  type: \"Field\";\n  name: string;\n  field: Decoder<a>;\n}\n\nexport default class Field<a> implements FieldDecoder<a> {\n  type: \"Field\" = \"Field\"\n  name: string\n  field: Decoder<a>\n  constructor(name: string, field: Decoder<a>) {\n    this.name = name\n    this.field = field\n  }\n  static decode(name: string, field: Decoder<a>, input: mixed): Decode<a> {\n    switch (typeof input) {\n      case \"function\":\n      case \"object\": {\n        if (input === null) {\n          break\n        } else {\n          try {\n            const value = Variant.decode(field, input[name])\n            if (value instanceof Error) {\n              if (name in (input: Object)) {\n                return new FieldError(name, value)\n              } else {\n                break\n              }\n            } else {\n              return value\n            }\n          } catch (error) {\n            return new FieldError(name, new ThrownError(error))\n          }\n        }\n      }\n    }\n    return new TypeError(`object with a field named '${name}'`, input)\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { Error, TypeError, ThrownError } from \"./Error\"\nimport { FieldError } from \"./Field\"\nimport * as Variant from \"./Decoder\"\n\nexport type Record<a> = Decoder<$Exact<$ObjMap<a, <b>(Decoder<b>) => b>>>\nexport type Fields<a> = $ObjMap<a, <b>(b) => Decoder<b>> & {\n  [string]: Decoder<*>\n}\n\nexport interface RecordDecoder<+a> {\n  type: \"Record\";\n  fields: Fields<a>;\n}\n\nexport default class RecordReader<a> implements RecordDecoder<a> {\n  type: \"Record\" = \"Record\"\n  fields: Fields<a>\n  constructor(fields: Fields<a>) {\n    this.fields = fields\n  }\n  static decode<a: {}>(fields: Fields<a>, input: mixed): Decode<a> {\n    if (typeof input === \"object\" && input !== null) {\n      const result: Object = {}\n      for (let key of Object.keys(fields)) {\n        try {\n          const value = Variant.decode(fields[key], input[key])\n          if (value instanceof Error) {\n            return new FieldError(key, value)\n          } else {\n            result[key] = value\n          }\n        } catch (error) {\n          return new FieldError(key, new ThrownError(error))\n        }\n      }\n      return result\n    } else {\n      return new TypeError(\"object\", input)\n    }\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport Error from \"./Error\"\nimport * as Variant from \"./Decoder\"\nimport type { Record, Fields } from \"./Record\"\n\nexport interface FormDecoder<+a> {\n  type: \"Form\";\n  form: Fields<a>;\n}\n\nexport default class Form<a: {}> implements FormDecoder<a> {\n  type: \"Form\" = \"Form\"\n  form: Fields<a>\n  constructor(form: Fields<a>) {\n    this.form = form\n  }\n  static decode<a: {}>(form: Fields<a>, input: mixed): Decode<a> {\n    const record: Object = {}\n    for (let key of Object.keys(form)) {\n      const value = Variant.decode(form[key], input)\n      if (value instanceof Error) {\n        return value\n      } else {\n        record[key] = value\n      }\n    }\n    return record\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { Error, TypeError, ThrownError } from \"./Error\"\nimport * as Variant from \"./Decoder\"\n\nexport class IndexError extends Error {\n  name = \"IndexError\"\n  index: number\n  problem: Error\n  constructor(index: number, problem: Error) {\n    super()\n    this.index = index\n    this.problem = problem\n  }\n  describe(context: string): string {\n    const where = context === \"\" ? \"input\" : context\n    return this.problem.describe(`${where}[${this.index}]`)\n  }\n}\n\nexport interface IndexDecoder<+a> {\n  type: \"Index\";\n  index: number;\n  member: Decoder<a>;\n}\n\nexport default class Index<a> implements IndexDecoder<a> {\n  type: \"Index\" = \"Index\"\n  index: number\n  member: Decoder<a>\n  constructor(index: number, member: Decoder<a>) {\n    this.index = index\n    this.member = member\n  }\n  static decode(index: number, member: Decoder<a>, input: mixed): Decode<a> {\n    if (!Array.isArray(input)) {\n      return new TypeError(\"array\", input)\n    } else if (index >= input.length) {\n      return new TypeError(`longer (>=${index + 1}) array`, input)\n    } else {\n      try {\n        const value = Variant.decode(member, input[index])\n        if (value instanceof Error) {\n          return new IndexError(index, value)\n        } else {\n          return value\n        }\n      } catch (error) {\n        return new IndexError(index, new ThrownError(error))\n      }\n    }\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { TypeError, Error } from \"./Error\"\nimport { IndexError } from \"./Index\"\nimport * as Variant from \"./Decoder\"\n\nexport interface ArrayDecoder<a, +array = a[]> {\n  type: \"Array\";\n  array: Decoder<a>;\n}\n\nexport default class Array<a> implements ArrayDecoder<a> {\n  type: \"Array\" = \"Array\"\n  array: Decoder<a>\n  static isArray = [].constructor.isArray\n  constructor(decoder: Decoder<a>) {\n    this.array = decoder\n  }\n  static decode<a>(decoder: Decoder<a>, input: mixed): a[] | Error {\n    if (Array.isArray(input)) {\n      let index = 0\n      const array = []\n      for (let element of ((input: any): mixed[])) {\n        const value = Variant.decode(decoder, element)\n        if (value instanceof Error) {\n          return new IndexError(index, value)\n        } else {\n          array[index] = value\n        }\n        index++\n      }\n      return array\n    } else {\n      return new TypeError(\"Array\", input)\n    }\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { TypeError, ThrownError, Error } from \"./Error\"\nimport { FieldError } from \"./Field\"\nimport * as Variant from \"./Decoder\"\n\nexport class AccessorError extends Error {\n  name = \"AccessorError\"\n  accessor: string\n  problem: Error\n  constructor(accessor: string, problem: Error) {\n    super()\n    this.accessor = accessor\n    this.problem = problem\n  }\n  describe(context: string): string {\n    const where = context === \"\" ? \"input\" : context\n    return this.problem.describe(`${where}[\"${this.accessor}\"]()`)\n  }\n}\n\nexport interface AccessorDecoder<+a> {\n  type: \"Accessor\";\n  name: string;\n  accessor: Decoder<a>;\n}\n\nexport default class Accessor<a> implements AccessorDecoder<a> {\n  type: \"Accessor\" = \"Accessor\"\n  name: string\n  accessor: Decoder<a>\n  constructor(name: string, decoder: Decoder<a>) {\n    this.name = name\n    this.accessor = decoder\n  }\n  static decode(name: string, accessor: Decoder<a>, input: mixed): Decode<a> {\n    if (typeof input === \"object\" && input != null && name in input) {\n      const object: Object = input\n      try {\n        if (typeof object[name] === \"function\") {\n          const value = Variant.decode(accessor, object[name]())\n          if (value instanceof Error) {\n            return new AccessorError(name, value)\n          } else {\n            return value\n          }\n        } else {\n          return new FieldError(name, new TypeError(\"function\", object[name]))\n        }\n      } catch (error) {\n        return new AccessorError(name, new ThrownError(error))\n      }\n    } else {\n      return new TypeError(`object with a method named '${name}'`, input)\n    }\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { TypeError, ThrownError, Error } from \"./Error\"\nimport { FieldError } from \"./Field\"\nimport * as Variant from \"./Decoder\"\n\nexport type Dictionary<a> = { [string]: a }\n\nexport interface DictionaryDecoder<a = *, +dict = Dictionary<a>> {\n  type: \"Dictionary\";\n  dictionary: Decoder<a>;\n}\n\nexport default class DictionaryReader<a> implements DictionaryDecoder<a> {\n  type: \"Dictionary\" = \"Dictionary\"\n  dictionary: Decoder<a>\n  constructor(decoder: Decoder<a>) {\n    this.dictionary = decoder\n  }\n  static decode<a>(decoder: Decoder<a>, input: mixed): Decode<Dictionary<a>> {\n    if (typeof input !== \"object\" || input === null || Array.isArray(input)) {\n      return new TypeError(\"object\", input)\n    } else {\n      const dictionary: Dictionary<a> = (Object.create(null): Object)\n      for (let key in input) {\n        try {\n          const value = Variant.decode(decoder, input[key])\n          if (value instanceof Error) {\n            return new FieldError(key, value)\n          } else {\n            dictionary[key] = value\n          }\n        } catch (error) {\n          return new FieldError(key, new ThrownError(error))\n        }\n      }\n      return dictionary\n    }\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { Error } from \"./Error\"\nimport * as Variant from \"./Decoder\"\n\nexport class EitherError extends Error {\n  name = \"EitherError\"\n  problems: Error[]\n  constructor(problems: Error[]) {\n    super()\n    this.problems = problems\n  }\n  describe(context: string): string {\n    const { problems } = this\n    const descriptions = problems\n      .map(problem => problem.describe(context))\n      .join(\"\\n\")\n    const where = this.where(context)\n\n    return `Ran into the following problems${where}:\\n\\n${descriptions}`\n  }\n}\n\nexport interface EitherDecoder<+a> {\n  type: \"Either\";\n  either: Array<Decoder<a>>;\n}\n\nexport default class Either<a> implements EitherDecoder<a> {\n  type: \"Either\" = \"Either\"\n  either: Array<Decoder<a>>\n  constructor(decoders: Array<Decoder<a>>) {\n    this.either = decoders\n  }\n  static decode<a>(either: Decoder<a>[], input: mixed): Decode<a> {\n    let problems = null\n    for (let decoder of either) {\n      const value = Variant.decode(decoder, input)\n      if (value instanceof Error) {\n        problems = problems == null ? [value] : (problems.push(value), problems)\n      } else {\n        return value\n      }\n    }\n\n    return new EitherError(problems || [])\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { TypeError } from \"./Error\"\n\nexport interface NullDecoder<+a> {\n  type: \"Null\";\n  Null: a;\n}\n\nexport default class Null<a> implements NullDecoder<a> {\n  type: \"Null\" = \"Null\"\n  Null: a\n  constructor(Null: a) {\n    this.Null = Null\n  }\n  static decode(Null: a, input: mixed): Decode<a> {\n    if (input === null) {\n      return Null\n    } else {\n      return new TypeError(\"null\", input)\n    }\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { TypeError } from \"./Error\"\n\nexport interface UndefinedDecoder<+a> {\n  type: \"Undefined\";\n  Undefined: a;\n}\n\nexport default class Undefined<a> implements UndefinedDecoder<a> {\n  type: \"Undefined\" = \"Undefined\"\n  Undefined: a\n  constructor(Undefined: a) {\n    this.Undefined = Undefined\n  }\n  static decode(Undefined: a, input: mixed): Decode<a> {\n    if (input === undefined) {\n      return Undefined\n    } else {\n      return new TypeError(\"undefined\", input)\n    }\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\n\nexport interface OkDecoder<+a> {\n  type: \"Ok\";\n  value: a;\n}\n\nexport default class Ok<a> implements OkDecoder<a> {\n  type: \"Ok\" = \"Ok\"\n  value: a\n  static decode(value: a, input: mixed): Decode<a> {\n    return value\n  }\n  constructor(value: a) {\n    this.value = value\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport * as Variant from \"./Decoder\"\nimport { Error } from \"./Error\"\n\nexport interface AndDecoder<+a, +b> {\n  type: \"And\";\n  left: Decoder<a>;\n  right: Decoder<b>;\n}\n\nexport default class And<a, b> implements AndDecoder<a, b> {\n  type: \"And\" = \"And\"\n  left: Decoder<a>\n  right: Decoder<b>\n  constructor(left: Decoder<a>, right: Decoder<b>) {\n    this.left = left\n    this.right = right\n  }\n  static decode<a, b>(\n    left: Decoder<a>,\n    right: Decoder<b>,\n    input: mixed\n  ): Decode<b> {\n    const result = Variant.decode(left, input)\n    if (result instanceof Error) {\n      return result\n    } else {\n      return Variant.decode(right, input)\n    }\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { MissmatchError } from \"./Error\"\n\nexport interface MatchDecoder<+a> {\n  type: \"Match\";\n  match: a;\n}\n\nconst matches = <a>(actual: a, expected: a): boolean => {\n  if (actual === expected) {\n    return true\n  } else {\n    if (\n      actual &&\n      typeof actual === \"object\" &&\n      expected &&\n      typeof expected === \"object\"\n    ) {\n      if (Array.isArray(expected)) {\n        if (Array.isArray(actual)) {\n          const count = expected.length\n          let index = 0\n          let isMatch = count <= actual.length\n          while (isMatch && index < count) {\n            isMatch = matches(actual[index], expected[index])\n            index++\n          }\n          return isMatch\n        } else {\n          return false\n        }\n      } else {\n        for (const key in expected) {\n          if (Object.prototype.hasOwnProperty.call(expected, key)) {\n            if (!matches(actual[key], expected[key])) {\n              return false\n            }\n          }\n        }\n        return true\n      }\n    } else {\n      return false\n    }\n  }\n}\n\nexport default class Match<a> implements MatchDecoder<a> {\n  type: \"Match\" = \"Match\"\n  match: a\n  constructor(match: a) {\n    this.match = match\n  }\n  static decode<a>(match: a, input: mixed): Decode<a> {\n    if (matches(input, match)) {\n      return match\n    } else {\n      return new MissmatchError(input, match)\n    }\n  }\n}\n","/* @flow */\n\nimport type { RecordDecoder } from \"./Record\"\nimport type { FormDecoder } from \"./Form\"\nimport type { AccessorDecoder } from \"./Accessor\"\nimport type { EitherDecoder } from \"./Either\"\nimport type { ErrorDecoder } from \"./Error\"\nimport type { FieldDecoder } from \"./Field\"\nimport type { IndexDecoder } from \"./Index\"\nimport type { NullDecoder } from \"./Null\"\nimport type { UndefinedDecoder } from \"./Undefined\"\nimport type { OkDecoder } from \"./Ok\"\n\nimport type { FloatDecoder, float } from \"./Float\"\nimport type { IntegerDecoder, integer } from \"./Integer\"\nimport type { StringDecoder } from \"./String\"\nimport type { BooleanDecoder } from \"./Boolean\"\nimport type { MaybeDecoder } from \"./Maybe\"\nimport type { OptionalDecoder } from \"./Optional\"\nimport type { ArrayDecoder } from \"./Array\"\nimport type { DictionaryDecoder } from \"./Dictionary\"\nimport type { MatchDecoder } from \"./Match\"\nimport type { AndDecoder } from \"./And\"\n\nexport type Decode<a> = a | Error\n\nexport type Decoder<+a> =\n  | AccessorDecoder<a>\n  | EitherDecoder<a>\n  | ErrorDecoder\n  | OkDecoder<a>\n  | FieldDecoder<a>\n  | IndexDecoder<a>\n  | NullDecoder<a>\n  | UndefinedDecoder<a>\n  | BooleanDecoder<a>\n  | FloatDecoder<a>\n  | IntegerDecoder<a>\n  | StringDecoder<a>\n  | OptionalDecoder<*, a>\n  | MaybeDecoder<*, a>\n  | ArrayDecoder<*, a>\n  | DictionaryDecoder<*, a>\n  | RecordDecoder<a>\n  | FormDecoder<a>\n  | AndDecoder<*, a>\n  | MatchDecoder<a>\n\nimport Float from \"./Float\"\nimport Integer from \"./Integer\"\nimport String from \"./String\"\nimport Boolean from \"./Boolean\"\nimport Maybe from \"./Maybe\"\nimport Optional from \"./Optional\"\nimport Record from \"./Record\"\nimport Form from \"./Form\"\nimport Array from \"./Array\"\nimport Accessor from \"./Accessor\"\nimport Dictionary from \"./Dictionary\"\nimport Either from \"./Either\"\nimport Field from \"./Field\"\nimport Null from \"./Null\"\nimport Undefined from \"./Undefined\"\nimport Ok from \"./Ok\"\nimport Index from \"./Index\"\nimport Error from \"./Error\"\nimport And from \"./And\"\nimport Match from \"./Match\"\nimport unreachable from \"unreachable\"\n\nexport const decode = <a>(decoder: Decoder<a>, input: mixed): Decode<a> => {\n  switch (decoder.type) {\n    case \"Accessor\": {\n      return Accessor.decode(decoder.name, decoder.accessor, input)\n    }\n    case \"Either\": {\n      return Either.decode(decoder.either, input)\n    }\n    case \"Array\": {\n      return (Array.decode(decoder.array, input): any)\n    }\n    case \"Dictionary\": {\n      return (Dictionary.decode(decoder.dictionary, input): any)\n    }\n    case \"Maybe\": {\n      return (Maybe.decode(decoder.maybe, input): any)\n    }\n    case \"Optional\": {\n      return (Optional.decode(decoder.optional, input): any)\n    }\n    case \"Float\": {\n      return (Float.decode(input): any)\n    }\n    case \"Integer\": {\n      return (Integer.decode(input): any)\n    }\n    case \"String\": {\n      return (String.decode(input): any)\n    }\n    case \"Boolean\": {\n      return (Boolean.decode(input): any)\n    }\n    case \"Record\": {\n      return (Record.decode((decoder.fields: any), input): any)\n    }\n    case \"Form\": {\n      return (Form.decode((decoder.form: any), input): any)\n    }\n    case \"Error\": {\n      return Error.decode(decoder, input)\n    }\n    case \"Ok\": {\n      return Ok.decode(decoder.value, input)\n    }\n    case \"Field\": {\n      return Field.decode(decoder.name, decoder.field, input)\n    }\n    case \"Index\": {\n      return Index.decode(decoder.index, decoder.member, input)\n    }\n    case \"Null\": {\n      return Null.decode(decoder.Null, input)\n    }\n    case \"Undefined\": {\n      return Undefined.decode(decoder.Undefined, input)\n    }\n    case \"Match\": {\n      return Match.decode(decoder.match, input)\n    }\n    case \"And\": {\n      return And.decode(decoder.left, decoder.right, input)\n    }\n    default: {\n      return unreachable(decoder)\n    }\n  }\n}\n","/* @flow */\n\nimport type { Decoder, Decode } from \"./Decoder\"\nimport { Error } from \"./Error\"\nimport * as Variant from \"./Decoder\"\n\nexport interface MaybeDecoder<a = *, +maybe = ?a> {\n  type: \"Maybe\";\n  maybe: Decoder<a>;\n}\n\nexport default class Maybe<a> implements MaybeDecoder<a> {\n  type: \"Maybe\" = \"Maybe\"\n  maybe: Decoder<a>\n  static decode<a>(decoder: Decoder<a>, input: mixed): Decode<?a> {\n    const value = Variant.decode(decoder, input)\n    if (value instanceof Error) {\n      if (input == null) {\n        return value\n      } else {\n        return null\n      }\n    } else {\n      return value\n    }\n  }\n  constructor(decoder: Decoder<a>) {\n    this.maybe = decoder\n  }\n}\n","/* @flow */\n\nimport type { Decode, Decoder } from \"./Decoder/Decoder\"\nimport type { float } from \"./Decoder/Float\"\nimport type { integer } from \"./Decoder/Integer\"\nimport type { Dictionary } from \"./Decoder/Dictionary\"\nimport type { Record, Fields } from \"./Decoder/Record\"\n\nimport StringDecoder from \"./Decoder/String\"\nimport BooleanDecoder from \"./Decoder/Boolean\"\nimport IntegerDecoder from \"./Decoder/Integer\"\nimport FloatDecoder from \"./Decoder/Float\"\nimport Maybe from \"./Decoder/Maybe\"\nimport Optional from \"./Decoder/Optional\"\nimport RecordDecoder from \"./Decoder/Record\"\nimport Form from \"./Decoder/Form\"\nimport ArrayDecoder from \"./Decoder/Array\"\nimport Accessor from \"./Decoder/Accessor\"\nimport DictionaryDecoder from \"./Decoder/Dictionary\"\nimport Either from \"./Decoder/Either\"\nimport Field from \"./Decoder/Field\"\nimport Null from \"./Decoder/Null\"\nimport Undefined from \"./Decoder/Undefined\"\nimport Ok from \"./Decoder/Ok\"\nimport Index from \"./Decoder/Index\"\nimport Match from \"./Decoder/Match\"\nimport And from \"./Decoder/And\"\nimport Error from \"./Decoder/Error\"\n\nimport * as Variant from \"./Decoder/Decoder\"\nimport * as result from \"result.flow\"\n\nexport type Result<a> = result.Result<Error, a>\nexport type {\n  Decoder,\n  Decode,\n  float,\n  integer,\n  Record,\n  Fields,\n  Dictionary,\n  Error\n}\n\nclass ParseError extends Error {\n  name = \"ParseError\"\n  error: { message: string }\n  constructor(error: { message: string }) {\n    super()\n    this.error = error\n  }\n  describe(context: string): string {\n    return `Parse error: ${this.error.message}`\n  }\n}\n\n/**\n * Parses given `input` string into a JSON value and then runs given\n * `Decoder<a>` on it. Returns `Result` with `Result.Error<Decoder.ParseError>`\n * if the string is not well-formed JSON or `Result.Error<Decoder.Error>` if\n * the value can't be decoded with a given `Decoder<a>`. If operation is\n * successfull returns `Result.Ok<a>`.\n */\nexport const parse = <a>(decoder: Decoder<a>, input: string): Result<a> => {\n  try {\n    return decode(decoder, JSON.parse(input))\n  } catch (error) {\n    return result.error(new ParseError(error))\n  }\n}\n\n/**\n * Runs given `Decoder<a>` on a given JSON value. Returns `Result` that either\n * contains `Decoder.Error` if value can't be decoded with a given decoder or\n * a `Result.Ok<a>`.\n */\nexport const decode = <a>(decoder: Decoder<a>, json: mixed): Result<a> => {\n  const value = Variant.decode(decoder, json)\n  if (value instanceof Error) {\n    return result.error(value)\n  } else {\n    return result.ok(value)\n  }\n}\n\nexport const String: Decoder<string> = new StringDecoder()\n\nexport const Boolean: Decoder<boolean> = new BooleanDecoder()\n\nexport const Float: Decoder<float> = new FloatDecoder()\n\nexport const Integer: Decoder<integer> = new IntegerDecoder()\n\nexport const ok = <a>(value: a): Decoder<a> => new Ok(value)\n\nexport const error = <a>(reason: string): Decoder<a> => new Error(reason)\n\nexport const field = <a>(name: string, decoder: Decoder<a>): Decoder<a> =>\n  new Field(name, decoder)\n\nexport const at = <a>(path: string[], decoder: Decoder<a>): Decoder<a> =>\n  path.reduceRight((decoder: Decoder<a>, name) => field(name, decoder), decoder)\n\nexport const index = <a>(index: number, decoder: Decoder<a>): Decoder<a> =>\n  new Index(index, decoder)\n\nexport const accessor = <a>(name: string, decoder: Decoder<a>): Decoder<a> =>\n  new Accessor(name, decoder)\n\nexport const either = <a>(...decoders: Decoder<a>[]): Decoder<a> =>\n  new Either(decoders)\n\nexport const or = either\n\nexport const and = <a, b>(left: Decoder<a>, right: Decoder<b>): Decoder<b> =>\n  new And(left, right)\n\nexport const maybe = <a>(decoder: Decoder<a>): Decoder<?a> =>\n  (new Maybe(decoder): Decoder<?a>)\n\nexport const array = <a>(decoder: Decoder<a>): Decoder<a[]> =>\n  (new ArrayDecoder(decoder): Decoder<a[]>)\n\nexport const dictionary = <a>(decoder: Decoder<a>): Decoder<Dictionary<a>> =>\n  (new DictionaryDecoder(decoder): Decoder<Dictionary<a>>)\n\nexport const form = <a: {}>(fields: a): Record<a> =>\n  (new Form(fields): Record<a>)\n\nexport const record = <a: {}>(fields: a): Record<a> =>\n  (new RecordDecoder(fields): Record<a>)\n\nexport const optional = <a>(decoder: Decoder<a>): Decoder<?a> =>\n  (new Optional(decoder): Decoder<?a>)\n\nexport const annul = <a>(value: a): Decoder<a> => new Null(value)\n\nexport const avoid = <a>(value: a): Decoder<a> => new Undefined(value)\n\nexport const match = <a>(value: a): Decoder<a> => new Match(value)\n","/* @flow */\n\nimport type {\n  Encoder,\n  Archive,\n  ChangeList,\n  DecoderError,\n  Result,\n  EventDecoder\n} from \"../Log\"\nimport { ok, error } from \"result.flow\"\nimport { nodeType } from \"../DOM/Node\"\nimport unreachable from \"unreachable\"\nimport * as Decoder from \"decoder.flow\"\n\nconst empty = Object.freeze([])\n\nconst ELEMENT_NODE = 1\nconst TEXT_NODE = 3\nconst COMMENT_NODE = 8\n\nconst insertNode = (\n  target: Node,\n  childrenSelected: boolean,\n  node: Node\n): Node => {\n  if (childrenSelected) {\n    return target.insertBefore(node, target.firstChild)\n  } else {\n    const parent = target.parentNode\n    if (parent == null) {\n      throw Error(\"Inavalid state. Unable to add a sibling to an orphand node\")\n    }\n\n    return parent.insertBefore(node, target.nextSibling)\n  }\n}\n\nconst removeNode = (target: Node): Node => {\n  const parent = target.parentNode\n  if (parent == null) {\n    throw Error(\"Unable to remove orphand node\")\n  } else {\n    return parent.removeChild(target)\n  }\n}\n\nconst replaceNode = (state: DOMPatch, node: Node): DOMPatch => {\n  if (state.childrenSelected) {\n    throw Error(\n      \"Invalid state. Unable to replace node when children are seleted\"\n    )\n  }\n  const parent = state.target.parentNode\n  if (parent == null) {\n    throw Error(\"Ivarid state. Unable to replace an orphand node\")\n  }\n\n  parent.replaceChild(node, state.target)\n  state.target = node\n  return state\n}\n\nconst getTextDataUpdateTarget = (\n  selectChildren: boolean,\n  target: Node\n): Text | Comment => {\n  if (selectChildren) {\n    throw Error(\"Unable to edit text data when children are selected\")\n  }\n  switch (target.nodeType) {\n    case TEXT_NODE:\n      return (target: any)\n    case COMMENT_NODE: {\n      return (target: any)\n    }\n    default: {\n      throw Error(\n        \"Unable to edit text data as neither Text nor Comment node is selected\"\n      )\n    }\n  }\n}\n\nconst getUpdateTargetElement = (\n  selectChildren: boolean,\n  target: Node\n): Element => {\n  if (selectChildren) {\n    throw new Error(\"Unable to update node when children are selected.\")\n  } else if (target.nodeType === ELEMENT_NODE) {\n    return (target: any)\n  } else {\n    throw new Error(\n      \"Unable to update element when text or comment node is selected\"\n    )\n  }\n}\n\nconst getTargetStyle = (\n  selectChildren: boolean,\n  target: Node\n): CSSStyleDeclaration & { [string]: string } => {\n  if (selectChildren) {\n    throw new Error(\"Unable to update node when children are selected.\")\n  } else if (target.style) {\n    return (target: any).style\n  } else {\n    throw new Error(\"Target node does not support styling\")\n  }\n}\n\nconst getStashedNode = (stash: { [number]: Node }, address: number): Node => {\n  const node = stash[address]\n  if (node == null) {\n    throw Error(`Unable to find stashed node with address #${address}`)\n  } else {\n    return node\n  }\n}\n\ntype Stash = { [number]: Node }\n\nexport default class DOMPatch {\n  target: Node\n  childrenSelected: boolean\n  stash: Stash\n  mailbox: { send: (Object, event: Event) => void }\n  reset(\n    target: Node,\n    childrenSelected: boolean,\n    stash: Stash,\n    mailbox: { send: (Object, event: Event) => void }\n  ) {\n    this.target = target\n    this.childrenSelected = childrenSelected\n    this.stash = stash\n    this.mailbox = mailbox\n  }\n\n  static selectChildren(state: DOMPatch): DOMPatch {\n    if (state.childrenSelected) {\n      throw Error(\n        \"Inavlid state: Unable to select children as they are already selected\"\n      )\n    } else {\n      state.childrenSelected = true\n      return state\n    }\n  }\n  static selectSibling(state: DOMPatch, offset: number): DOMPatch {\n    const { target, childrenSelected } = state\n    let select = null\n    if (childrenSelected) {\n      state.childrenSelected = false\n      select = target.childNodes[offset - 1]\n    } else {\n      select = target\n      while (select && offset--) {\n        select = select.nextSibling\n      }\n    }\n\n    if (select == null) {\n      throw Error(\n        \"sibling selection has failed, sibling being selected does not exist\"\n      )\n    } else {\n      state.target = select\n      state.childrenSelected = false\n      return state\n    }\n  }\n  static selectParent(state: DOMPatch): DOMPatch {\n    if (state.childrenSelected) {\n      state.childrenSelected = false\n      return state\n    } else {\n      const target = state.target.parentNode\n      if (target == null) {\n        throw Error(\"Can not select parent of orphand node\")\n      } else {\n        state.target = target\n        return state\n      }\n    }\n  }\n  static removeNextSibling(state: DOMPatch): DOMPatch {\n    const { childrenSelected, target } = state\n    const [parent, next] = childrenSelected\n      ? [target, target.firstChild]\n      : [target.parentNode, target.nextSibling]\n\n    if (next == null) {\n      throw Error(\"Can not remove next sibling as it does not exist\")\n    } else if (parent == null) {\n      throw Error(\"Can not remove next sibling as it has not parent\")\n    } else {\n      parent.removeChild(next)\n      return state\n    }\n  }\n\n  static insertText(state: DOMPatch, data: string): DOMPatch {\n    insertNode(\n      state.target,\n      state.childrenSelected,\n      state.target.ownerDocument.createTextNode(data)\n    )\n    return state\n  }\n  static insertComment(state: DOMPatch, data: string): DOMPatch {\n    insertNode(\n      state.target,\n      state.childrenSelected,\n      state.target.ownerDocument.createComment(data)\n    )\n    return state\n  }\n  static insertElement(state: DOMPatch, localName: string): DOMPatch {\n    insertNode(\n      state.target,\n      state.childrenSelected,\n      state.target.ownerDocument.createElement(localName)\n    )\n    return state\n  }\n  static insertElementNS(\n    state: DOMPatch,\n    namespaceURI: string,\n    localName: string\n  ): DOMPatch {\n    insertNode(\n      state.target,\n      state.childrenSelected,\n      state.target.ownerDocument.createElementNS(namespaceURI, localName)\n    )\n    return state\n  }\n  static insertStashedNode(state: DOMPatch, address: number): DOMPatch {\n    insertNode(\n      state.target,\n      state.childrenSelected,\n      getStashedNode(state.stash, address)\n    )\n    return state\n  }\n\n  static replaceWithText(state: DOMPatch, data: string): DOMPatch {\n    return replaceNode(state, state.target.ownerDocument.createTextNode(data))\n  }\n  static replaceWithComment(state: DOMPatch, data: string): DOMPatch {\n    return replaceNode(state, state.target.ownerDocument.createComment(data))\n  }\n  static replaceWithElement(state: DOMPatch, localName: string): DOMPatch {\n    return replaceNode(\n      state,\n      state.target.ownerDocument.createElement(localName)\n    )\n  }\n  static replaceWithElementNS(\n    state: DOMPatch,\n    namespaceURI: string,\n    localName: string\n  ): DOMPatch {\n    return replaceNode(\n      state,\n      state.target.ownerDocument.createElementNS(namespaceURI, localName)\n    )\n  }\n  static replaceWithStashedNode(state: DOMPatch, address: number): DOMPatch {\n    const node = state.stash[address]\n    if (node == null) {\n      throw Error(`Unable to find stashed node with address #${address}`)\n    }\n    return replaceNode(state, node)\n  }\n\n  static editTextData(\n    state: DOMPatch,\n    start: number,\n    end: number,\n    prefix: string,\n    suffix: string\n  ): DOMPatch {\n    const node = getTextDataUpdateTarget(state.childrenSelected, state.target)\n    const { data } = node\n    const content = data.substring(start, data.length - end)\n    node.data = `${prefix}${content}${suffix}`\n    return state\n  }\n  static setTextData(state: DOMPatch, data: string): DOMPatch {\n    const node = getTextDataUpdateTarget(state.childrenSelected, state.target)\n    node.data = data\n    return state\n  }\n  static setAttribute(state: DOMPatch, name: string, value: string): DOMPatch {\n    const node = getUpdateTargetElement(state.childrenSelected, state.target)\n    node.setAttribute(name, value)\n    return state\n  }\n  static removeAttribute(state: DOMPatch, name: string): DOMPatch {\n    const node = getUpdateTargetElement(state.childrenSelected, state.target)\n    node.removeAttribute(name)\n    return state\n  }\n  static setAttributeNS(\n    state: DOMPatch,\n    namespaceURI: string,\n    name: string,\n    value: string\n  ): DOMPatch {\n    const node = getUpdateTargetElement(state.childrenSelected, state.target)\n    node.setAttributeNS(namespaceURI, name, value)\n    return state\n  }\n  static removeAttributeNS(\n    state: DOMPatch,\n    namespaceURI: string,\n    name: string\n  ): DOMPatch {\n    const node = getUpdateTargetElement(state.childrenSelected, state.target)\n    node.removeAttributeNS(namespaceURI, name)\n    return state\n  }\n  static assignProperty(\n    state: DOMPatch,\n    name: string,\n    value: string | number | boolean | null\n  ): DOMPatch {\n    const node: Object = getUpdateTargetElement(\n      state.childrenSelected,\n      state.target\n    )\n    node[name] = value\n    return state\n  }\n  static deleteProperty(state: DOMPatch, name: string): DOMPatch {\n    const node: Object = getUpdateTargetElement(\n      state.childrenSelected,\n      state.target\n    )\n    delete node[name]\n    return state\n  }\n  static setStyleRule(state: DOMPatch, name: string, value: string): DOMPatch {\n    const style = getTargetStyle(state.childrenSelected, state.target)\n    style[name] = value\n    return state\n  }\n  static removeStyleRule(state: DOMPatch, name: string): DOMPatch {\n    const style = getTargetStyle(state.childrenSelected, state.target)\n    style[name] = \"\"\n    return state\n  }\n  static addEventDecoder(\n    state: DOMPatch,\n    type: string,\n    decoder: EventDecoder,\n    capture: boolean\n  ): DOMPatch {\n    const node: Object = getUpdateTargetElement(\n      state.childrenSelected,\n      state.target\n    )\n    const host = node.DOMinion || (node.DOMinion = new DOMinion())\n    host.addEventDecoder(node, state.mailbox, type, decoder, capture)\n    return state\n  }\n  static removeEventDecoder(\n    state: DOMPatch,\n    type: string,\n    decoder: EventDecoder,\n    capture: boolean\n  ): DOMPatch {\n    const node: Object = getUpdateTargetElement(\n      state.childrenSelected,\n      state.target\n    )\n    const host = node.DOMinion || (node.DOMinion = new DOMinion())\n    host.removeEventDecoder(node, state.mailbox, type, decoder, capture)\n    return state\n  }\n\n  static stashNextSibling(state: DOMPatch, address: number): DOMPatch {\n    const next = state.childrenSelected\n      ? state.target.firstChild\n      : state.target.nextSibling\n\n    if (next == null) {\n      throw Error(\"Unable to stash next sibling as there is not one\")\n    } else {\n      state.stash[address] = next\n      removeNode(next)\n      return state\n    }\n  }\n  static discardStashedNode(state: DOMPatch, address: number): DOMPatch {\n    delete state.stash[address]\n    return state\n  }\n\n  static shiftSiblings(state: DOMPatch, count: number): DOMPatch {\n    const { target, childrenSelected } = state\n    let select = null\n    if (childrenSelected) {\n      select = target.childNodes[count]\n    } else {\n      let offset = count\n      select = target.nextSibling\n      while (select && offset--) {\n        select = select.nextSibling\n      }\n    }\n\n    if (select == null) {\n      throw Error(`Not enough siblings ${count} to shift them`)\n    } else {\n      insertNode(target, childrenSelected, select)\n    }\n    return state\n  }\n\n  static archive<node: Node>(\n    target: node,\n    receive?: (Object, Event) => void = DOMArchive.receive\n  ): Archive<node> {\n    return new DOMArchive(target, receive)\n  }\n}\n\nconst CAPTURING_PHASE = 1\n\ninterface Mailbox {\n  address?: number;\n  send(Object, Event): void;\n}\n\nclass DOMinion {\n  decoders: { [string]: { [number]: {mailbox:Mailbox, decoder:EventDecoder} } }\n  address: number = 0\n  constructor() {\n    this.decoders = (Object.create(null): Object)\n  }\n  static handleEvent(event: Event) {\n    const { currentTarget, type, eventPhase } = event\n    const node: Object = currentTarget\n    const host = node.DOMinion\n    const capture = event.eventPhase === CAPTURING_PHASE\n    if (host) {\n      const hash = `${event.type}${capture ? \"!\" : \"^\"}`\n      const decoders = host.decoders[hash]\n      if (decoders) {\n        for (let address in decoders) {\n          const handler = decoders[address]\n          if (handler) {\n            const {decoder, mailbox} = handler\n            const detail = Decoder.decode(decoder, event)\n            mailbox.send(detail, event)\n          } else {\n            delete decoders[address]\n          }\n        }\n        return null\n      }\n    }\n    currentTarget.removeEventListener(type, DOMinion.handleEvent, capture)\n  }\n  addEventDecoder(\n    target: Node,\n    mailbox: Mailbox,\n    type: string,\n    decoder: EventDecoder,\n    capture: boolean\n  ) {\n    const hash = `${type}${capture ? \"!\" : \"^\"}`\n    const decoders = this.decoders[hash] || (this.decoders[hash] = (Object.create(null): Object))\n    const address = mailbox.address || (mailbox.address = ++this.address)\n    decoders[address] = {mailbox, decoder}\n    target.addEventListener(type, DOMinion.handleEvent, capture)\n  }\n  removeEventDecoder(\n    target: Node,\n    mailbox: Mailbox,\n    type: string,\n    decoder: EventDecoder,\n    capture: boolean\n  ) {\n    const hash = `${type}${capture ? \"!\" : \"^\"}`\n    const decoders = this.decoders[hash]\n    if (decoders != null) {\n      const address = mailbox.address || (mailbox.address = ++this.address)\n      delete decoders[address]\n    }\n  }\n}\n\nclass DOMArchive<node: Node> {\n  static receive = (message, event) => {}\n  target: node\n  mailbox: { send: (Object, Event) => void }\n  cursor: DOMPatch = new DOMPatch()\n  constructor(\n    target: node,\n    receive: (Object, Event) => void = DOMArchive.receive\n  ) {\n    this.target = target\n    this.mailbox = { send: receive }\n  }\n  patch(changeList: ChangeList): Result<node> {\n    this.cursor.reset(this.target, false, {}, this.mailbox)\n    const result = changeList.encode(DOMPatch, this.cursor)\n    if (result instanceof DOMPatch) {\n      return this.target\n    } else {\n      return result\n    }\n  }\n}\n","/* @flow */\n\nimport type { Maybe } from \"maybe.flow\"\n\n/**\n * Library provides APIs to work with a dictionary mapping of unique string\n * keys to values.\n */\n\n/**\n * Dictionary of keys and values. `Dict<User>` is a dictionary that lets\n * you look up a `User` by a `string` key (such as user names).\n */\nexport type Dict<a> = {\n  [key: string]: Maybe<a>,\n  // `value?` property is here to workaround a bug in flow. For details see:\n  // https://github.com/facebook/flow/issues/4371\n  value?: a\n}\n\n/**\n * Dictionary class used across the library to create `Dict` instances.\n */\nconst Dictionary: Class<Dictionary> = function Dictionary(): void {}\nDictionary.prototype = Object.freeze(Object.create(null))\n\n/**\n * Creates an empty dictionary.\n *\n * ```js\n * const v0 = Dictionary.empty()\n * v0 // => ({}:Dict<*>)\n * const v1 = Dictionary.set('Jack', 1, v0)\n * v1 // => ({\"Jack\": 1}:Dict<number>)\n * const v2 = Dictionary.set('Jane', 'Jane', v1)\n * v2 // => ({\"Jack\": 1, \"Jane\": \"Jane\"}:Dict<number|string>)\n * ```\n *\n * Notice that type of values dictionary holds is open and get's extended based\n * on usage, this is actualy very useful in practice. That being said sometimes\n * you'd want to put bounds to what dictionary holds ahead you could do it in\n * multiple ways:\n * \n * ##### Anotate binding\n * \n * ```js\n * const v3:Dict<number> = Dictionary.empty()\n * v3 // => ({}:Dict<number>)\n * const v4 = Dictionary.set('Jack', 1, v3)\n * v4 // => ({\"Jack\": 1}:Dict<number>)\n * const v5 = Dictionary.set('Jane', 'Jane', v1)\n * ```\n * \n * ##### Enclose in typed function\n * ```js\n * const enumerate = (...keys:string[]):Dict<number> => {\n *   let dict = empty()\n *   let index = 0\n *   for (let key of keys) {\n *     dict = set(key, index++, dict)\n *   }\n *   return dict\n * }\n * ```\n */\nexport const empty = <a>(): Dict<a> => new Dictionary()\n\n/**\n * Create a dictionary with one entry of given key, value pair.\n *\n * ```js\n * Dictionary.singleton('Zoe', 15) // => ({Zoe: 15}:Dict<number>)\n * Dictionary.singleton('a', {foo:\"bar\"}) // => ({a: {foo:\"bar\"}}:Dict<{foo:string}>)\n * ```\n * \n * Note that as with `empty` returned dictionary has open type for values.\n */\nexport const singleton = <a>(key: string, value: a): Dict<a> => {\n  const result = new Dictionary()\n  result[key] = value\n  return result\n}\n\n/**\n * Create a dictionary from iterable of `[key, value]` pairs\n *\n * ```js\n * Dictionary.fromEntries([\n *    ['Zoe', 17],\n *    ['Sandro', 18]\n * ]) // => ({Zoe: 17, Sandro: 18}:Dict<number>)\n *\n * Dictionary\n *  .fromEntries((db:Map<string, User>)).entries()) // => ({...}:Dict<User>)\n * ```\n */\nexport const fromEntries = <a>(entries: Iterable<Entry<a>>): Dict<a> => {\n  let result = empty()\n  for (let [key, value] of entries) {\n    result[key] = value\n  }\n  return result\n}\n\n/**\n * Insert an entry under the given key with a gievn value into a dictionary.\n * Replaces value of the entry if there was one under that key.\n *\n * ```js\n * const v0 = Dictionary.fromEntries([[\"a\", 1]])\n * v0 // => ({a:1}:Dict<number>)\n *\n * // Add\n * const v1 = Dictionary.set(\"b\", 2, v0)\n * v1 // => ({a:1, b:2}:Dict<number>)\n *\n * // Replace\n * const v2 = Dictionary.set(\"b\", 15, v1)\n * v2 // => ({a:1, b:15}:Dict<number>)\n * ```\n */\nexport const set = <a>(key: string, value: a, dict: Dict<a>): Dict<a> => (\n  (dict[key] = value),\n  dict\n)\n\ntype Updater<a> = Mapper<Maybe<a>, Maybe<a>>\n\n/**\n * Updates the entry in the dictionary for a given key with a provided\n * `updater` function. If updader returns `Maybe.nothing` entry is\n * removed from the dictionory otherwise it's value is swapped with\n * returned value.\n *\n * ```js\n * const v0 = Dictionary.fromEntries([[\"a\", 1], [\"b\", 2]])\n * v0 // => ({a:1, b:2}:Dict<number>)\n *\n * const inc = (v: ?number): ?number => (v == null ? 0 : v + 1)\n *\n * // Add\n * const v1 = Dictionary.update(\"c\", inc, v0)\n * v1 // => ({a:1, b:2, c:0}:Dict<number>)\n *\n * // Modify\n * const v2 = Dictionary.update(\"b\", inc, v1)\n * v2 // => ({a:1, b:3, c:0}:Dict<number>)\n *\n * // Delete\n * const v3 = Dictionary.update(\"b\", _ => null, v2)\n * v3 // => ({a:1, c:0}:Dict<number>)\n *\n * const v4 = Dictionary.update(\"c\", _ => undefined, v3)\n * v4 // => ({a:1}:Dict<number>)\n *\n * // NoOp\n * const v5 = Dictionary.update(\"d\", _ => null, v4)\n * v5 // => ({a: 1}:Dict<number>)\n * ```\n */\nexport const update = <a>(\n  key: string,\n  updater: Updater<a>,\n  dict: Dict<a>\n): Dict<a> => {\n  const value = updater(dict[key])\n  if (value == null) {\n    delete dict[key]\n    return dict\n  } else {\n    dict[key] = value\n    return dict\n  }\n}\n\n/**\n * Remove an entry for the given key from a dictionary. If there is no entry\n * for the given key no changes are made.\n *\n * ```js\n * const before = Dictionary.fromEntries([[\"a\", 1], [\"b\", 2]])\n * before // => ({a: 1, b:2}:Dict<number>)\n * const after = Dictionary.remove(\"a\", before)\n * after // => ({b:2}:Dict<number>)\n * Dictionary.remove(\"c\", after) // => ({b:2}:Dict<number>)\n * ```\n */\nexport const remove = <a>(key: string, dict: Dict<a>): Dict<a> => (\n  delete dict[key],\n  dict\n)\n\n/**\n * Determine if there is an entry with a given key is in a dictionary.\n *\n * ```js\n * const dict = Dictionary.singleton(\"a\", 1)\n *\n * Dictionary.has(\"a\", dict) // => true\n * Dictionary.has(\"b\", dict) // => false\n * ```\n */\nexport const has = <a>(key: string, dict: Dict<a>): boolean => key in dict\n\n/**\n * Returns value for the give key in the given dictionary or a default passed-in\n * as a third argument if dictionary has no entry for the give key\n *\n * ```js\n * const animals = Dictionary.fromEntries([[\"Tom\", \"Cat\"], [\"Jerry\", \"Mouse\"]])\n *\n * Dictionary.get(\"Jerry\", animals) // => (\"Mouse\":string|void)\n * Dictionary.get(\"Tom\", animals, null) // => (\"Cat\":string|null)\n * Dictionary.get(\"Tom\", animals, \"\") // => (\"Cat\":string)\n * Dictionary.get(\"Spike\", animals, null) // => (null:string|null)\n * Dictionary.get(\"Spike\", animals, \"\") // => (\"\":string|null)\n * ```\n */\nexport const get = <a>(key: string, dict: Dict<a>, fallback: a): a => {\n  const value = dict[key]\n  if (value != null) {\n    return value\n  } else {\n    return fallback\n  }\n}\n\nexport type Entry<a> = [string, a]\n\n/**\n * Returns an iterable of dictionary `[key, value]` pairs using `for of`\n *\n * ```js\n * const dict = Dictionary.singleton('Car', {color:'blue'})\n *\n * for (let [key, value] of Dictionary.entries(dict)) {\n *    // ...\n * }\n * ```\n */\nexport function* entries<a>(dict: Dict<a>): Iterable<Entry<a>> {\n  for (let key in dict) {\n    const value = dict[key]\n    if (value != null) {\n      yield [key, value]\n    }\n  }\n}\n\n/**\n * Returns an iterable of dictionary keys that can be iterated over using\n * `for of`\n *\n * ```js\n * const dict = Dictionary.singleton('Bicycle', {color:'red'})\n *\n * for (let key of Dictionary.keys(dict)) {\n *    // ...\n * }\n * ```\n */\nexport function* keys<a>(dict: Dict<a>): Iterable<string> {\n  for (let key in dict) {\n    yield key\n  }\n}\n\n/**\n * Returns an iterable of dictionary values that can be iterated over using `for of`\n *\n * ```js\n * const dict = Dictionary.singleton('Horse', {color:'black'})\n *\n * for (let value of Dictionary.values(dict)) {\n *    // ...\n * }\n * ```\n */\nexport function* values<a>(dict: Dict<a>): Iterable<a> {\n  for (let key in dict) {\n    const value = dict[key]\n    if (value != null) {\n      yield value\n    }\n  }\n}\n\ntype Mapper<a, b> = a => b\n\n/**\n * Maps dictionary entries using given function\n *\n * ```js\n * const before = Dictionary.fromEntries([[\"a\", 1], [\"b\", 2]])\n * before // => ({a: 1, b: 2}:Dict<number>)\n *\n * const after = Dictionary.map(([k, v]) =>\n *                               [k.toUpperCase(), String(v + 5)], before)\n * after // => ({A:\"6\", B:\"7\"}:Dict<string>)\n * ```\n */\nexport const map = <a, b>(\n  f: Mapper<Entry<a>, Entry<b>>,\n  dict: Dict<a>\n): Dict<b> => {\n  let mapped = empty()\n  for (let key in dict) {\n    const value = dict[key]\n    if (value != null) {\n      const [newKey, newValue] = f([key, value])\n      mapped[newKey] = newValue\n    }\n  }\n  return mapped\n}\n\ntype Predicate<a> = (input: a) => boolean\n\n/**\n * Keep a dictionary entries that satisfy provided predicate.\n *\n * ```js\n * const before = Dictionary.fromEntries([[\"a\", -1], [\"b\", 2]])\n * before // => ({a: -1, b: 2}:Dict<number>)\n *\n * const after = Dictionary.filter(([_k, v]) => v > 0, before)\n * after // => ({b: 2}:Dict<number>)\n * ```\n */\nexport const filter = <a>(p: Predicate<Entry<a>>, dict: Dict<a>): Dict<a> => {\n  let filtered = empty()\n  for (let key in dict) {\n    const value = dict[key]\n    if (value != null) {\n      if (p([key, value])) {\n        filtered[key] = value\n      }\n    }\n  }\n  return filtered\n}\n\n/**\n * Partition a dictionary according to a predicate. The first dictionary\n * contains all entries which satisfy the predicate, and the second contains\n * the rest.\n *\n * ```js\n * const all = Dictionary.fromEntries([[\"a\", -1], [\"b\", 2]])\n * all // => ({a: -1, b: 2}:Dict<number>)\n *\n * const [positive, negative] = Dictionary.partition(([_k, v]) => v > 0, all)\n * positive // => ({b: 2}:Dict<number>)\n * negative // => ({a: -1}:Dict<number>)\n * ```\n */\nexport const partition = <a>(\n  p: Predicate<Entry<a>>,\n  dict: Dict<a>\n): [Dict<a>, Dict<a>] => {\n  let filtered = empty()\n  let rest = empty()\n  for (let key in dict) {\n    const value = dict[key]\n    if (value != null) {\n      if (p([key, value])) {\n        filtered[key] = value\n      } else {\n        rest[key] = value\n      }\n    }\n  }\n  return [filtered, rest]\n}\n\n/**\n * Combine two dictionaries. If there is a collision, preference is given to\n * the first dictionary.\n *\n * ```js\n * const left = Dictionary.fromEntries([[\"a\", 1], [\"b\", 2]])\n * left // => ({a:1, b:2}:Dict<number>)\n *\n * const right = Dictionary.fromEntries([[\"b\", 18], [\"c\", 9]])\n * right // => ({b:18, c:9}:Dict<number>)\n *\n * const union = Dictionary.union(left, right)\n * union // => ({a:1, b:2, c:9}:Dict<number>)\n * ```\n */\nexport const union = <a>(left: Dict<a>, right: Dict<a>): Dict<a> => {\n  let union = empty()\n  for (let key in left) {\n    union[key] = left[key]\n  }\n\n  for (let key in right) {\n    if (!(key in union)) {\n      union[key] = right[key]\n    }\n  }\n\n  return union\n}\n\n/**\n * Keep a entries from left dictionary when right dictionary has entries for\n * the same key.\n *\n * ```js\n * const left = Dictionary.fromEntries([[\"a\", 1], [\"b\", 2]])\n * left // => ({a:1, b:2}:Dict<number>)\n *\n * const right = Dictionary.fromEntries([[\"b\", 18], [\"c\", 9]])\n * right // => ({b:18, c:9}:Dict<number>)\n *\n * const intersect = Dictionary.intersect(left, right)\n * intersect // => ({b:2}:Dict<number>)\n * ```\n */\nexport const intersect = <a>(left: Dict<a>, right: Dict<a>): Dict<a> => {\n  let intersect = empty()\n  for (let key in left) {\n    if (key in right) {\n      intersect[key] = left[key]\n    }\n  }\n  return intersect\n}\n\n/**\n * Keep a entries from left dictionary only if right dictionary does not have\n * entry for that key.\n *\n * ```js\n * const left = Dictionary.fromEntries([[\"a\", 1], [\"b\", 2]])\n * left // => ({a:1, b:2}:Dict<number>)\n * const right = Dictionary.fromEntries([[\"b\", 18], [\"c\", 9]])\n * right // => ({b:18, c:9}:Dict<number>)\n * const delta = Dictionary.diff(left, right)\n * delta // => ({a:1}:Dict<number>)\n * ```\n */\nexport const diff = <a>(left: Dict<a>, right: Dict<a>): Dict<a> => {\n  let result = empty()\n  for (let key in left) {\n    if (!(key in right)) {\n      result[key] = left[key]\n    }\n  }\n  return result\n}\n\nexport type Accumulator<chunk, result> = (input: chunk, state: result) => result\n\n/**\n * The most general way of combining two dictionaries. You provide three\n * accumulators for when a given key appears:\n *\n * - Only in the left dictionary.\n * - In both dictionaries.\n * - Only in the right dictionary.\n *\n * You then traverse all the keys from lowest to highest, building up whatever\n * you want.\n *\n * ```js\n * Dictionary.merge(\n *   ([key, left], log):string[] =>\n *      [...log, `- ${key} : ${left}`],\n *   ([key, [left, right]], log):string[] =>\n *      [...log, `= ${key} : ${left} -> ${right}`],\n *   ([key, right], log):string[] =>\n *      [...log, `+ ${key} : ${right}`],\n *   Dictionary.fromEntries([[\"a\", 1], [\"b\", 2]]),\n *   Dictionary.fromEntries([[\"b\", 18], [\"c\", 9]]),\n *   []\n * ) // => ['- a : 1', '= b : 2 -> 18', '+ c : 9']\n * ```\n */\nexport const merge = <a, b, result>(\n  accumulateLeft: Accumulator<Entry<a>, result>,\n  accumulateBoth: Accumulator<Entry<[a, b]>, result>,\n  accumulateRight: Accumulator<Entry<b>, result>,\n  left: Dict<a>,\n  right: Dict<b>,\n  init: result\n): result => {\n  let state = init\n  for (let key in left) {\n    const leftValue = left[key]\n    if (leftValue != null) {\n      const rightValue = right[key]\n      if (rightValue != null) {\n        state = accumulateBoth([key, [leftValue, rightValue]], state)\n      } else {\n        state = accumulateLeft([key, leftValue], state)\n      }\n    }\n  }\n\n  for (let key in right) {\n    const rightValue = right[key]\n    const leftValue = left[key]\n    if (rightValue != null && leftValue == null) {\n      state = accumulateRight([key, rightValue], state)\n    }\n  }\n\n  return state\n}\n","/* @flow */\n\nimport type {\n  Text,\n  Element,\n  UnindexedElement,\n  IndexedElement,\n  Indexed,\n  Thunk,\n  Tagged,\n  Comment,\n  Node,\n  Style,\n  StyleRules,\n  Properties,\n  Attributes,\n  ClassList,\n  Setting,\n  Attribute,\n  Property,\n  Listener,\n  Listeners\n} from \"./DOM/Node\"\nimport type { Decoder } from \"decoder.flow\"\nimport type { Dict } from \"dictionary.flow\"\nimport { nodeType, settingType } from \"./DOM/Node\"\nimport { diff } from \"./Diff\"\nimport { patch } from \"./Patch\"\nimport DOMPatch from \"./Patch/DOM\"\nimport * as Dictionary from \"dictionary.flow\"\nimport unreachable from \"unreachable\"\nexport type { Encoder, Decode, Archive, ChangeList, DecoderError } from \"./Log\"\n\nconst empty: Array<any> = Object.freeze([])\nconst blank: Dict<any> = Dictionary.empty()\n\nclass AttributeSetting implements Attribute {\n  settingType = settingType.attribute\n  namespaceURI: string | null\n  name: string\n  value: string | null\n  constructor(namespaceURI: string | null, name: string, value: string | null) {\n    this.namespaceURI = namespaceURI\n    this.name = name\n    this.value = value\n  }\n}\n\nclass PropertySetting implements Property {\n  settingType = settingType.property\n  name: string\n  value: string | number | boolean | null | void\n  constructor(name: string, value: string | number | boolean | null | void) {\n    this.name = name\n    this.value = value\n  }\n}\n\nclass ListenerSetting<message> implements Listener<message> {\n  settingType = settingType.listener\n  type: string\n  capture: boolean\n  decoder: Decoder<?message>\n  constructor(type: string, capture: boolean, decoder: Decoder<?message>) {\n    this.type = type\n    this.capture = capture\n    this.decoder = decoder\n  }\n}\n\nclass TextNode<message> implements Text<message> {\n  nodeType = nodeType.TEXT_NODE\n  data: string\n  constructor(data: string) {\n    this.data = data\n  }\n  toDebugString(): string {\n    return `#${this.data}`\n  }\n  map<tagged>(tag: message => tagged): Text<tagged> {\n    return (this: Text<any>)\n  }\n}\n\nclass CommentNode<message> implements Comment<message> {\n  nodeType = nodeType.COMMENT_NODE\n  data: string\n  constructor(data: string) {\n    this.data = data\n  }\n  toDebugString(): string {\n    return `<!-- ${this.data} -->`\n  }\n  map<tagged>(tag: message => tagged): Comment<tagged> {\n    return (this: Comment<any>)\n  }\n}\n\nclass TaggedNode<outer, inner> implements Tagged<outer, inner> {\n  nodeType = nodeType.TAGGED_ELEMENT_NODE\n  node: Node<inner>\n  tag: inner => outer\n  constructor(node: Node<inner>, tag: inner => outer) {\n    this.node = node\n    this.tag = tag\n  }\n  toDebugString(): string {\n    return `<tagged tag=${this.tag.toString()}>${this.node.toDebugString()}</tagged>`\n  }\n  map<tagged>(tag: outer => tagged): Node<tagged> {\n    return new TaggedNode(this, tag)\n  }\n}\n\nclass ElementNode<message> {\n  localName: string\n  namespaceURI: null | string\n  attributes: Attributes = blank\n  properties: Properties = blank\n  style: StyleRules = blank\n  listeners: Listeners<message> = blank\n  classList: ClassList\n  constructor(namespaceURI: null | string, localName: string) {\n    this.namespaceURI = namespaceURI\n    this.localName = localName\n  }\n  toDebugChildrenString(): string {\n    return \"\"\n  }\n  toDebugString(): string {\n    const { localName, namespaceURI } = this\n    const attributes = []\n\n    if (namespaceURI != null) {\n      attributes.push(`xmlns=\"${namespaceURI}\"`)\n    }\n\n    for (const key in this.attributes) {\n      const attribute = this.attributes[key]\n      if (attribute != null && attribute.value != null) {\n        attributes.push(`\"${attribute.name}\"=\"${attribute.value}\"`)\n      }\n    }\n\n    const properties = []\n    for (const key in this.properties) {\n      const value = this.properties[key]\n      if (value !== undefined) {\n        properties.push(`\\`property:${key}\\`=\\`${JSON.stringify(value)}\\``)\n      }\n    }\n\n    const rules = []\n    for (const name in this.style) {\n      if (name !== \"settingType\") {\n        const value = this.style[name]\n        if (value != null) {\n          rules.push(`${cammelCaseToDashDelimeted(name)}:${value}`)\n        }\n      }\n    }\n\n    const style = rules.length === 0 ? \"\" : ` style=\"${rules.join(\";\")}\"`\n\n    const settings = [...attributes, ...properties].join(\" \")\n    const details = settings === \"\" ? style : ` ${settings}${style}`\n\n    return `<${localName}${details}>${this.toDebugChildrenString()}</${\n      localName\n    }>`\n  }\n}\n\nconst cammelCaseToDashDelimeted = (input: string): string => {\n  let output = \"\"\n  for (let ch of input) {\n    if (ch.toUpperCase() == ch) {\n      output += `-${ch.toLowerCase()}`\n    } else {\n      output += ch\n    }\n  }\n  return output\n}\n\nconst setSettings = <message>(\n  element: Element<message>,\n  settings: Iterable<Setting<message>>\n) => {\n  for (const setting of settings) {\n    setSetting(element, setting)\n  }\n}\n\nconst set = <t>(name: string, value: t, dict: Dict<t>): Dict<t> =>\n  dict === blank\n    ? Dictionary.singleton(name, value)\n    : Dictionary.set(name, value, dict)\n\nconst setSetting = <message>(\n  element: Element<message>,\n  setting: Setting<message>\n): Element<message> => {\n  switch (setting.settingType) {\n    case settingType.attribute: {\n      const ns = setting.namespaceURI == null ? \"\" : `@${setting.namespaceURI}`\n      element.attributes = set(\n        `${setting.name}${ns}`,\n        setting,\n        element.attributes\n      )\n      return element\n    }\n    case settingType.property: {\n      element.properties = set(setting.name, setting.value, element.properties)\n      return element\n    }\n    case settingType.style: {\n      element.style =\n        element.style === blank\n          ? Object.assign((Object.create(null): Object), setting)\n          : Object.assign((element.style: Object), setting)\n      return element\n    }\n    case settingType.listener: {\n      const key = `${setting.type}${setting.capture ? \"Capture\" : \"\"}`\n      element.listeners = set(key, setting, element.listeners)\n\n      return element\n    }\n    default: {\n      return unreachable(setting)\n    }\n  }\n}\n\nclass UnindexedElementNode<message> extends ElementNode<message>\n  implements UnindexedElement<message> {\n  nodeType = nodeType.ELEMENT_NODE\n  children: Array<Node<message>>\n  toDebugChildrenString(): string {\n    return this.children.map(child => child.toDebugString()).join(\"\")\n  }\n  map<tagged>(tag: message => tagged): Node<tagged> {\n    return new TaggedNode(this, tag)\n  }\n}\n\nclass IndexedElementNode<message> extends ElementNode<message>\n  implements IndexedElement<message> {\n  nodeType = nodeType.INDEXED_ELEMENT_NODE\n  children: Array<Indexed<Node<message>>>\n\n  toDebugChildString([key, child]: Indexed<Node<message>>): string {\n    return `<element index='${key}'>${child.toDebugString()}</element>`\n  }\n  toDebugChildrenString(): string {\n    return this.children.map(this.toDebugChildString).join(\"\")\n  }\n  map<tagged>(tag: message => tagged): Node<tagged> {\n    return new TaggedNode(this, tag)\n  }\n}\n\nclass ThunkNode<message, params: Array<mixed>>\n  implements Thunk<message, params> {\n  node: ?Node<message>\n  args: params\n  nodeType = nodeType.THUNK_NODE\n  render: (...args: params) => Node<message>\n  force(): Node<message> {\n    if (this.node == null) {\n      return (this.node = this.render(...this.args))\n    } else {\n      return this.node\n    }\n  }\n  constructor(render: (...args: params) => Node<message>, args: params) {\n    this.render = render\n    this.args = args\n  }\n  toDebugString(): string {\n    return this.force().toDebugString()\n  }\n  map<tagged>(tag: message => tagged): Node<tagged> {\n    return new TaggedNode(this, tag)\n  }\n}\n\nexport const setAttribute = (name: string, value: ?string = \"\"): Attribute =>\n  new AttributeSetting(null, name, value == null ? null : value)\n\nexport const setAttributeNS = (\n  namespaceURI: string,\n  name: string,\n  value: ?string = \"\"\n): Attribute =>\n  new AttributeSetting(namespaceURI, name, value == null ? null : value)\n\nexport const property = (\n  name: string,\n  value?: string | number | boolean | null\n): Property => new PropertySetting(name, value)\n\nexport const on = <message>(\n  type: string,\n  decoder: Decoder<?message>,\n  capture: boolean = false\n): Listener<message> => new ListenerSetting(type, capture, decoder)\n\nexport const style = (rules: StyleRules): Style => {\n  const style: Style = (rules: Object)\n  style.settingType = settingType.style\n  return style\n}\n\nexport const createTextNode = <message>(data: string): Text<message> =>\n  new TextNode(data)\n\nexport const createComment = <message>(data: string): Comment<message> =>\n  new CommentNode(data)\n\nexport const createElement = <message>(\n  localName: string,\n  settings: Iterable<Setting<message>> = empty,\n  children: Node<message>[] = empty\n): UnindexedElement<message> => {\n  const element = new UnindexedElementNode(null, localName)\n  setSettings(element, settings)\n  element.children = children\n  return element\n}\n\nexport const createElementNS = <message>(\n  namespaceURI: string,\n  localName: string,\n  settings: Iterable<Setting<message>> = empty,\n  children: Node<message>[] = empty\n): UnindexedElement<message> => {\n  const element = new UnindexedElementNode(namespaceURI, localName)\n  setSettings(element, settings)\n  element.children = children\n  return element\n}\n\nexport const createIndexedElement = <message>(\n  localName: string,\n  settings: Iterable<Setting<message>> = empty,\n  children: Indexed<Node<message>>[] = empty\n): IndexedElement<message> => {\n  const element = new IndexedElementNode(null, localName)\n  setSettings(element, settings)\n  element.children = children\n  return element\n}\n\nexport const createIndexedElementNS = <message>(\n  namespaceURI: string,\n  localName: string,\n  settings: Iterable<Setting<message>> = empty,\n  children: Indexed<Node<message>>[] = empty\n): IndexedElement<message> => {\n  const element = new IndexedElementNode(namespaceURI, localName)\n  setSettings(element, settings)\n  element.children = children\n  return element\n}\n\nexport const createThunk = <message, params: Array<mixed>>(\n  view: (...params) => Node<message>,\n  ...args: params\n): Thunk<message> => new ThunkNode(view, args)\n\nexport const createHost = <message>(\n  settings: Iterable<Setting<message>> = empty,\n  children: Node<message>[] = empty\n): Element<message> => createElement(\"x-host\", settings, children)\n\nexport const mount = DOMPatch.archive\nexport { diff, patch, nodeType }\n\nexport type {\n  Text,\n  Element,\n  UnindexedElement,\n  IndexedElement,\n  Indexed,\n  Thunk,\n  Comment,\n  Node,\n  Style,\n  StyleRules,\n  Properties,\n  Attributes,\n  ClassList,\n  Setting,\n  Attribute,\n  Property,\n  Listener,\n  Listeners\n}\n","/* @flow */\n\nexport class DecoderError {\n  +format: (context?: string) => string\n  toString(): string {\n    return this.format()\n  }\n  isError = true\n}\n\nexport class FieldError<a> extends DecoderError {\n  kind: \"FieldError\" = \"FieldError\"\n  fieldName: string\n  table: Class<a> & { name: string }\n  constructor(fieldName: string, table: Class<a> & { name: string }) {\n    super()\n    this.table = table\n    this.fieldName = fieldName\n  }\n  format(context?: string): string {\n    const where = context == null ? \"\" : `at ${context}`\n    return `Faild to decode a field \"${this.fieldName}\" from \"${this.table\n      .name}\" table${where}`\n  }\n}\n\nexport class VariantError<a> extends DecoderError {\n  kind: \"VariantError\" = \"VariantError\"\n  table: Class<a> & { name: string }\n  options: { [string]: number }\n  option: number\n  constructor(\n    table: Class<a> & { name: string },\n    options: { [string]: number },\n    option: number\n  ) {\n    super()\n    this.table = table\n    this.options = options\n    this.option = option\n  }\n  format(context?: string): string {\n    const { options, option } = this\n    const where = context == null ? \"\" : `at ${context}`\n    let optionName = \"\"\n    for (let key in options) {\n      if (options[key] === option) {\n        optionName = key\n        break\n      }\n    }\n\n    return `Faild to decode a union \"${this.table\n      .name}\" as ${optionName}:${option}`\n  }\n}\n","// @flow\n\n// Transformed verison of fbs.ts\n// Replace import {flatbuffers} -> import * as flatbuffers\n// Comment out all `export namespace JSON{` and corresponding `}`\n// Rewrite enums to Type and value pairs.\n// Replace '<T extends' with '<T:'\n// Rewrite all overloads for string field methods.\n// Replace flatbuffers.Encoding with flatbuffers.EncodingValue\n\nimport * as flatbuffers from \"flatbuffers\"\n\n/**\n * @enum\n */\n// export namespace JSON{\nexport const JSONVariant = {\n  NONE: (0: 0),\n  Boolean: (1: 1),\n  Integer: (2: 2),\n  Float: (3: 3),\n  String: (4: 4),\n  JSONArray: (5: 5),\n  JSONObject: (6: 6)\n}\n//};\n\nexport type JSONType = $Values<typeof JSONVariant>\n\n/**\n * @constructor\n */\n// export namespace JSON{\nexport class JSONArray {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n   * @type {number}\n   */\n  bb_pos: number = 0\n  /**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {JSONArray}\n */\n  __init(i: number, bb: flatbuffers.ByteBuffer): self {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {JSONArray=} obj\n * @returns {JSONArray}\n */\n  static getRootAsJSONArray(bb: flatbuffers.ByteBuffer, obj?: self): self {\n    return (obj || new this.constructor()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n * @param {number} index\n * @param {Element=} obj\n * @returns {Element}\n */\n  elements(index: number, obj?: Element): Element | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? (obj || new Element()).__init(\n          this.bb.__indirect(\n            this.bb.__vector(this.bb_pos + offset) + index * 4\n          ),\n          this.bb\n        )\n      : null\n  }\n\n  /**\n * @returns {number}\n */\n  elementsLength(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n */\n  static startJSONArray(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} elementsOffset\n */\n  static addElements(\n    builder: flatbuffers.Builder,\n    elementsOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(0, elementsOffset, 0)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {JSONArray.<flatbuffers.Offset>} data\n * @returns {flatbuffers.Offset}\n */\n  static createElementsVector(\n    builder: flatbuffers.Builder,\n    data: flatbuffers.Offset[]\n  ): flatbuffers.Offset {\n    builder.startVector(4, data.length, 4)\n    for (var i = data.length - 1; i >= 0; i--) {\n      builder.addOffset(data[i])\n    }\n    return builder.endVector()\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {number} numElems\n */\n  static startElementsVector(builder: flatbuffers.Builder, numElems: number) {\n    builder.startVector(4, numElems, 4)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\n  static endJSONArray(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n//}\n/**\n * @constructor\n */\n// export namespace JSON{\nexport class JSONObject {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n   * @type {number}\n   */\n  bb_pos: number = 0\n  /**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {JSONObject}\n */\n  __init(i: number, bb: flatbuffers.ByteBuffer): JSONObject {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {JSONObject=} obj\n * @returns {JSONObject}\n */\n  static getRootAsJSONObject(\n    bb: flatbuffers.ByteBuffer,\n    obj?: JSONObject\n  ): JSONObject {\n    return (obj || new JSONObject()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n * @param {number} index\n * @param {Property=} obj\n * @returns {Property}\n */\n  properties(index: number, obj?: Property): Property | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? (obj || new Property()).__init(\n          this.bb.__indirect(\n            this.bb.__vector(this.bb_pos + offset) + index * 4\n          ),\n          this.bb\n        )\n      : null\n  }\n\n  /**\n * @returns {number}\n */\n  propertiesLength(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n */\n  static startJSONObject(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} propertiesOffset\n */\n  static addProperties(\n    builder: flatbuffers.Builder,\n    propertiesOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(0, propertiesOffset, 0)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {JSONArray.<flatbuffers.Offset>} data\n * @returns {flatbuffers.Offset}\n */\n  static createPropertiesVector(\n    builder: flatbuffers.Builder,\n    data: flatbuffers.Offset[]\n  ): flatbuffers.Offset {\n    builder.startVector(4, data.length, 4)\n    for (var i = data.length - 1; i >= 0; i--) {\n      builder.addOffset(data[i])\n    }\n    return builder.endVector()\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {number} numElems\n */\n  static startPropertiesVector(builder: flatbuffers.Builder, numElems: number) {\n    builder.startVector(4, numElems, 4)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\n  static endJSONObject(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n//}\n/**\n * @constructor\n */\n// export namespace JSON{\nexport class Property {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n   * @type {number}\n   */\n  bb_pos: number = 0\n  /**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Property}\n */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Property {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Property=} obj\n * @returns {Property}\n */\n  static getRootAsProperty(\n    bb: flatbuffers.ByteBuffer,\n    obj?: Property\n  ): Property {\n    return (obj || new Property()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n * @param {flatbuffers.EncodingValue=} optionalEncoding\n * @returns {string|Uint8Array|null}\n */\n  name(\n    optionalEncoding?: flatbuffers.EncodingValue\n  ):\n    | string\n    | null /*\nname(optionalEncoding:flatbuffers.EncodingValue):string|Uint8Array|null\nname(optionalEncoding?:any):string|Uint8Array|null*/ {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n * @returns {JSONType}\n */\n  valueType(): JSONType {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset\n      ? /** @type {JSONType} */ ((this.bb.readUint8(this.bb_pos + offset): any))\n      : JSONVariant.NONE\n  }\n\n  /**\n * @param {flatbuffers.Table} obj\n * @returns {?flatbuffers.Table}\n */\n  value<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 8)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n */\n  static startProperty(builder: flatbuffers.Builder) {\n    builder.startObject(3)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} nameOffset\n */\n  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, nameOffset, 0)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {JSONType} valueType\n */\n  static addValueType(builder: flatbuffers.Builder, valueType: JSONType) {\n    builder.addFieldInt8(1, valueType, JSONVariant.NONE)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} valueOffset\n */\n  static addValue(\n    builder: flatbuffers.Builder,\n    valueOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(2, valueOffset, 0)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\n  static endProperty(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n//}\n/**\n * @constructor\n */\n// export namespace JSON{\nexport class Element {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n   * @type {number}\n   */\n  bb_pos: number = 0\n  /**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Element}\n */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Element {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Element=} obj\n * @returns {Element}\n */\n  static getRootAsElement(bb: flatbuffers.ByteBuffer, obj?: Element): Element {\n    return (obj || new Element()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n * @returns {JSONType}\n */\n  valueType(): JSONType {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? /** @type {JSONType} */ ((this.bb.readUint8(this.bb_pos + offset): any))\n      : JSONVariant.NONE\n  }\n\n  /**\n * @param {flatbuffers.Table} obj\n * @returns {?flatbuffers.Table}\n */\n  value<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n */\n  static startElement(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {JSONType} valueType\n */\n  static addValueType(builder: flatbuffers.Builder, valueType: JSONType) {\n    builder.addFieldInt8(0, valueType, JSONVariant.NONE)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} valueOffset\n */\n  static addValue(\n    builder: flatbuffers.Builder,\n    valueOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, valueOffset, 0)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\n  static endElement(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n//}\n/**\n * @constructor\n */\n// export namespace JSON{\nexport class Boolean {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n   * @type {number}\n   */\n  bb_pos: number = 0\n  /**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Boolean}\n */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Boolean {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Boolean=} obj\n * @returns {Boolean}\n */\n  static getRootAsBoolean(bb: flatbuffers.ByteBuffer, obj?: Boolean): Boolean {\n    return (obj || new Boolean()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n * @returns {boolean}\n */\n  value(): boolean {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n */\n  static startBoolean(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {boolean} value\n */\n  static addValue(builder: flatbuffers.Builder, value: boolean) {\n    builder.addFieldInt8(0, +value, +false)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\n  static endBoolean(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n//}\n/**\n * @constructor\n */\n// export namespace JSON{\nexport class Integer {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n   * @type {number}\n   */\n  bb_pos: number = 0\n  /**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Integer}\n */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Integer {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Integer=} obj\n * @returns {Integer}\n */\n  static getRootAsInteger(bb: flatbuffers.ByteBuffer, obj?: Integer): Integer {\n    return (obj || new Integer()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n * @returns {number}\n */\n  value(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n */\n  static startInteger(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {number} value\n */\n  static addValue(builder: flatbuffers.Builder, value: number) {\n    builder.addFieldInt32(0, value, 0)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\n  static endInteger(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n//}\n/**\n * @constructor\n */\n// export namespace JSON{\nexport class String {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n   * @type {number}\n   */\n  bb_pos: number = 0\n  /**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {String}\n */\n  __init(i: number, bb: flatbuffers.ByteBuffer): String {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {String=} obj\n * @returns {String}\n */\n  static getRootAsString(bb: flatbuffers.ByteBuffer, obj?: String): String {\n    return (obj || new String()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n * @param {flatbuffers.EncodingValue=} optionalEncoding\n * @returns {string|Uint8Array|null}\n */\n  value(\n    optionalEncoding?: flatbuffers.EncodingValue\n  ):\n    | string\n    | null /*\nvalue(optionalEncoding:flatbuffers.EncodingValue):string|Uint8Array|null\nvalue(optionalEncoding?:any):string|Uint8Array|null*/ {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n */\n  static startString(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {flatbuffers.Offset} valueOffset\n */\n  static addValue(\n    builder: flatbuffers.Builder,\n    valueOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(0, valueOffset, 0)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\n  static endString(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n//}\n/**\n * @constructor\n */\n// export namespace JSON{\nexport class Float {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n   * @type {number}\n   */\n  bb_pos: number = 0\n  /**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Float}\n */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Float {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Float=} obj\n * @returns {Float}\n */\n  static getRootAsFloat(bb: flatbuffers.ByteBuffer, obj?: Float): Float {\n    return (obj || new Float()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n * @returns {number}\n */\n  value(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n */\n  static startFloat(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {number} value\n */\n  static addValue(builder: flatbuffers.Builder, value: number) {\n    builder.addFieldFloat32(0, value, 0.0)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\n  static endFloat(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n//}\n\nexport type JSON =\n  | null\n  | Boolean\n  | Integer\n  | Float\n  | String\n  | JSONArray\n  | JSONObject\n","// @flow\n\n// Transformed verison of fbs.ts\n// Replace import {flatbuffers} -> import * as flatbuffers\n// Comment out all `// export namespace Decoder{` and corresponding `}`\n// Rewrite enums to Type and value pairs.\n// Replace '<T extends' with '<T:'\n// Rewrite all overloads for string field methods.\n// Replace 'Decoder.Decoder.' with 'decoderType.'\n// Replace 'JSON.' with 'jsonType.'\n// Replace 'Value.' with 'valueType.'\n// Replace 'Decoder.' with ''\n// Replace all '/** @type {Decoder} */ (this.bb.readUint8(this.bb_pos + offset))' with `((this.bb.readUint8(this.bb_pos + offset):any):Decoder)`\n// Replace all `/** @type {Value} */ (this.bb.readInt8(this.bb_pos + offset))` with `((this.bb.readInt8(this.bb_pos + offset):any):Value)`\n// Replace all `/** @type {JSON} */ (this.bb.readUint8(this.bb_pos + offset))` with `((this.bb.readUint8(this.bb_pos + offset):any):JSON)`\n\nimport * as flatbuffers from \"flatbuffers\"\nimport * as JSON from \"../JSON.fbs/JSON\"\n\n/**\n * @enum\n */\n// // export namespace Decoder{\nexport const decoder = {\n  NONE: (0: 0),\n  Error: (1: 1),\n  Ok: (2: 2),\n  Boolean: (3: 3),\n  Accessor: (4: 4),\n  Either: (5: 5),\n  Field: (6: 6),\n  Index: (7: 7),\n  Null: (8: 8),\n  Undefined: (9: 9),\n  Optional: (10: 10),\n  Maybe: (11: 11),\n  Collection: (12: 12),\n  Dictionary: (13: 13),\n  Record: (14: 14),\n  Form: (15: 15),\n  String: (16: 16),\n  Integer: (17: 17),\n  Float: (18: 18),\n  And: (19: 19),\n  Match: (20: 20)\n}\n\nexport type Decoder = $Values<typeof decoder>\n// };\n\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Accessor {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Accessor}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Accessor {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Accessor=} obj\n   * @returns {Accessor}\n   */\n  static getRootAsAccessor(\n    bb: flatbuffers.ByteBuffer,\n    obj?: Accessor\n  ): Accessor {\n    return (obj || new Accessor()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.Encoding=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  name(optionalEncoding?: any): string | null {\n    //name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\n    //name(optionalEncoding?:any):string|Uint8Array|null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @returns {Decoder}\n   */\n  decoderType(): Decoder {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset\n      ? ((this.bb.readUint8(this.bb_pos + offset): any): Decoder)\n      : decoder.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  decoder<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 8)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startAccessor(builder: flatbuffers.Builder) {\n    builder.startObject(3)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} nameOffset\n   */\n  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, nameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Decoder} accessorType\n   */\n  static addDecoderType(builder: flatbuffers.Builder, accessorType: Decoder) {\n    builder.addFieldInt8(1, accessorType, decoder.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} accessorOffset\n   */\n  static addDecoder(\n    builder: flatbuffers.Builder,\n    accessorOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(2, accessorOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endAccessor(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Collection {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Collection}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Collection {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Collection=} obj\n   * @returns {Collection}\n   */\n  static getRootAsCollection(\n    bb: flatbuffers.ByteBuffer,\n    obj?: Collection\n  ): Collection {\n    return (obj || new Collection()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {Decoder}\n   */\n  decoderType(): Decoder {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? ((this.bb.readUint8(this.bb_pos + offset): any): Decoder)\n      : decoder.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  decoder<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startCollection(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Decoder} decoderType\n   */\n  static addDecoderType(builder: flatbuffers.Builder, decoderType: Decoder) {\n    builder.addFieldInt8(0, decoderType, decoder.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} decoderOffset\n   */\n  static addDecoder(\n    builder: flatbuffers.Builder,\n    decoderOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, decoderOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endCollection(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Boolean {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Boolean}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Boolean {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Boolean=} obj\n   * @returns {Boolean}\n   */\n  static getRootAsPrimitive(\n    bb: flatbuffers.ByteBuffer,\n    obj?: Boolean\n  ): Boolean {\n    return (obj || new Boolean()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startBoolean(builder: flatbuffers.Builder) {\n    builder.startObject(0)\n  }\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endBoolean(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Dictionary {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Dictionary}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Dictionary {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Dictionary=} obj\n   * @returns {Dictionary}\n   */\n  static getRootAsDictionary(\n    bb: flatbuffers.ByteBuffer,\n    obj?: Dictionary\n  ): Dictionary {\n    return (obj || new Dictionary()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {Decoder}\n   */\n  decoderType(): Decoder {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? ((this.bb.readUint8(this.bb_pos + offset): any): Decoder)\n      : decoder.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  decoder<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startDictionary(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Decoder} decoderType\n   */\n  static addDecoderType(builder: flatbuffers.Builder, decoderType: Decoder) {\n    builder.addFieldInt8(0, decoderType, decoder.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} decoderOffset\n   */\n  static addDecoder(\n    builder: flatbuffers.Builder,\n    decoderOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, decoderOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endDictionary(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Either {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Either}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Either {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Either=} obj\n   * @returns {Either}\n   */\n  static getRootAsEither(bb: flatbuffers.ByteBuffer, obj?: Either): Either {\n    return (obj || new Either()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {number} index\n   * @param {Variant=} obj\n   * @returns {Variant}\n   */\n  variants(index: number, obj?: Variant): Variant | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? (obj || new Variant()).__init(\n          this.bb.__indirect(\n            this.bb.__vector(this.bb_pos + offset) + index * 4\n          ),\n          this.bb\n        )\n      : null\n  }\n\n  /**\n   * @returns {number}\n   */\n  variantsLength(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startEither(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} variantsOffset\n   */\n  static addVariants(\n    builder: flatbuffers.Builder,\n    variantsOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(0, variantsOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Array.<flatbuffers.Offset>} data\n   * @returns {flatbuffers.Offset}\n   */\n  static createVariantsVector(\n    builder: flatbuffers.Builder,\n    data: flatbuffers.Offset[]\n  ): flatbuffers.Offset {\n    builder.startVector(4, data.length, 4)\n    for (var i = data.length - 1; i >= 0; i--) {\n      builder.addOffset(data[i])\n    }\n    return builder.endVector()\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} numElems\n   */\n  static startVariantsVector(builder: flatbuffers.Builder, numElems: number) {\n    builder.startVector(4, numElems, 4)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endEither(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Variant {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Variant}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Variant {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Variant=} obj\n   * @returns {Variant}\n   */\n  static getRootAsVariant(bb: flatbuffers.ByteBuffer, obj?: Variant): Variant {\n    return (obj || new Variant()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {Decoder}\n   */\n  decoderType(): Decoder {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? ((this.bb.readUint8(this.bb_pos + offset): any): Decoder)\n      : decoder.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  decoder<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startVariant(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Decoder} decoderType\n   */\n  static addDecoderType(builder: flatbuffers.Builder, decoderType: Decoder) {\n    builder.addFieldInt8(0, decoderType, decoder.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} decoderOffset\n   */\n  static addDecoder(\n    builder: flatbuffers.Builder,\n    decoderOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, decoderOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endVariant(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Error {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Error}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Error {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Error=} obj\n   * @returns {Error}\n   */\n  static getRootAsError(bb: flatbuffers.ByteBuffer, obj?: Error): Error {\n    return (obj || new Error()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.Encoding=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  message(optionalEncoding?: any): string | null {\n    //message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\n    //message(optionalEncoding?:any):string|Uint8Array|null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startError(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} messageOffset\n   */\n  static addMessage(\n    builder: flatbuffers.Builder,\n    messageOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(0, messageOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endError(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Ok {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Ok}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Ok {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Ok=} obj\n   * @returns {Ok}\n   */\n  static getRootAsOk(bb: flatbuffers.ByteBuffer, obj?: Ok): Ok {\n    return (obj || new Ok()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {JSON.JSONType}\n   */\n  valueType(): JSON.JSONType {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? ((this.bb.readUint8(this.bb_pos + offset): any): JSON.JSONType)\n      : JSON.JSONVariant.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  value<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startOk(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {JSON.JSONType} JSONType\n   */\n  static addValueType(builder: flatbuffers.Builder, valueType: JSON.JSONType) {\n    builder.addFieldInt8(0, valueType, JSON.JSONVariant.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} valueOffset\n   */\n  static addValue(\n    builder: flatbuffers.Builder,\n    valueOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, valueOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endOk(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Field {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Field}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Field=} obj\n   * @returns {Field}\n   */\n  static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n    return (obj || new Field()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.Encoding=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  name(optionalEncoding?: any): string | null {\n    //name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\n    //name(optionalEncoding?:any):string|Uint8Array|null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @returns {Decoder}\n   */\n  decoderType(): Decoder {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset\n      ? ((this.bb.readUint8(this.bb_pos + offset): any): Decoder)\n      : decoder.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  decoder<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 8)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startField(builder: flatbuffers.Builder) {\n    builder.startObject(3)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} nameOffset\n   */\n  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, nameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Decoder} decoderType\n   */\n  static addDecoderType(builder: flatbuffers.Builder, decoderType: Decoder) {\n    builder.addFieldInt8(1, decoderType, decoder.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} fieldOffset\n   */\n  static addDecoder(\n    builder: flatbuffers.Builder,\n    decoderOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(2, decoderOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Index {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Index}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Index {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Index=} obj\n   * @returns {Index}\n   */\n  static getRootAsIndex(bb: flatbuffers.ByteBuffer, obj?: Index): Index {\n    return (obj || new Index()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {number}\n   */\n  index(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0\n  }\n\n  /**\n   * @returns {Decoder}\n   */\n  decoderType(): Decoder {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset\n      ? ((this.bb.readUint8(this.bb_pos + offset): any): Decoder)\n      : decoder.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  decoder<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 8)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startIndex(builder: flatbuffers.Builder) {\n    builder.startObject(3)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} index\n   */\n  static addIndex(builder: flatbuffers.Builder, index: number) {\n    builder.addFieldInt32(0, index, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Decoder} memberType\n   */\n  static addDecoderType(builder: flatbuffers.Builder, decoderType: Decoder) {\n    builder.addFieldInt8(1, decoderType, decoder.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} memberOffset\n   */\n  static addDecoder(\n    builder: flatbuffers.Builder,\n    decoderOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(2, decoderOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endIndex(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Form {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Form}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Form {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Form=} obj\n   * @returns {Form}\n   */\n  static getRootAsForm(bb: flatbuffers.ByteBuffer, obj?: Form): Form {\n    return (obj || new Form()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {number} index\n   * @param {Field=} obj\n   * @returns {Field}\n   */\n  fields(index: number, obj?: Field): Field | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? (obj || new Field()).__init(\n          this.bb.__indirect(\n            this.bb.__vector(this.bb_pos + offset) + index * 4\n          ),\n          this.bb\n        )\n      : null\n  }\n\n  /**\n   * @returns {number}\n   */\n  fieldsLength(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startForm(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} fieldsOffset\n   */\n  static addFields(\n    builder: flatbuffers.Builder,\n    fieldsOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(0, fieldsOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Array.<flatbuffers.Offset>} data\n   * @returns {flatbuffers.Offset}\n   */\n  static createFormVector(\n    builder: flatbuffers.Builder,\n    data: flatbuffers.Offset[]\n  ): flatbuffers.Offset {\n    builder.startVector(4, data.length, 4)\n    for (var i = data.length - 1; i >= 0; i--) {\n      builder.addOffset(data[i])\n    }\n    return builder.endVector()\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} numElems\n   */\n  static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n    builder.startVector(4, numElems, 4)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endForm(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Record {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Record}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Record {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Record=} obj\n   * @returns {Record}\n   */\n  static getRootAsRecord(bb: flatbuffers.ByteBuffer, obj?: Record): Record {\n    return (obj || new Record()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {number} index\n   * @param {Field=} obj\n   * @returns {Field}\n   */\n  fields(index: number, obj?: Field): Field | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? (obj || new Field()).__init(\n          this.bb.__indirect(\n            this.bb.__vector(this.bb_pos + offset) + index * 4\n          ),\n          this.bb\n        )\n      : null\n  }\n\n  /**\n   * @returns {number}\n   */\n  fieldsLength(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startRecord(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} fieldsOffset\n   */\n  static addFields(\n    builder: flatbuffers.Builder,\n    fieldsOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(0, fieldsOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Array.<flatbuffers.Offset>} data\n   * @returns {flatbuffers.Offset}\n   */\n  static createFieldsVector(\n    builder: flatbuffers.Builder,\n    data: flatbuffers.Offset[]\n  ): flatbuffers.Offset {\n    builder.startVector(4, data.length, 4)\n    for (var i = data.length - 1; i >= 0; i--) {\n      builder.addOffset(data[i])\n    }\n    return builder.endVector()\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} numElems\n   */\n  static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n    builder.startVector(4, numElems, 4)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endRecord(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Maybe {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Maybe}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Maybe {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Maybe=} obj\n   * @returns {Maybe}\n   */\n  static getRootAsMaybe(bb: flatbuffers.ByteBuffer, obj?: Maybe): Maybe {\n    return (obj || new Maybe()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {Decoder}\n   */\n  decoderType(): Decoder {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? ((this.bb.readUint8(this.bb_pos + offset): any): Decoder)\n      : decoder.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  decoder<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startMaybe(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Decoder} decoderType\n   */\n  static addDecoderType(builder: flatbuffers.Builder, decoderType: Decoder) {\n    builder.addFieldInt8(0, decoderType, decoder.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} maybeOffset\n   */\n  static addDecoder(\n    builder: flatbuffers.Builder,\n    decoderOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, decoderOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endMaybe(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Null {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Null}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Null=} obj\n   * @returns {Null}\n   */\n  static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n    return (obj || new Null()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {JSON}\n   */\n  valueType(): JSON.JSONType {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? ((this.bb.readUint8(this.bb_pos + offset): any): JSON.JSONType)\n      : JSON.JSONVariant.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  value<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startNull(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {JSON} valueType\n   */\n  static addValueType(builder: flatbuffers.Builder, valueType: JSON.JSONType) {\n    builder.addFieldInt8(0, valueType, JSON.JSONVariant.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} valueOffset\n   */\n  static addValue(\n    builder: flatbuffers.Builder,\n    valueOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, valueOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Undefined {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Undefined}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Undefined {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Undefined=} obj\n   * @returns {Undefined}\n   */\n  static getRootAsUndefined(\n    bb: flatbuffers.ByteBuffer,\n    obj?: Undefined\n  ): Undefined {\n    return (obj || new Undefined()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {JSON}\n   */\n  valueType(): JSON.JSONType {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? ((this.bb.readUint8(this.bb_pos + offset): any): JSON.JSONType)\n      : JSON.JSONVariant.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  value<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startUndefined(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {JSON} valueType\n   */\n  static addValueType(builder: flatbuffers.Builder, valueType: JSON.JSONType) {\n    builder.addFieldInt8(0, valueType, JSON.JSONVariant.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} valueOffset\n   */\n  static addValue(\n    builder: flatbuffers.Builder,\n    valueOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, valueOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endUndefined(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  //}\n}\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Optional {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Optional}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Optional {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Optional=} obj\n   * @returns {Optional}\n   */\n  static getRootAsOptional(\n    bb: flatbuffers.ByteBuffer,\n    obj?: Optional\n  ): Optional {\n    return (obj || new Optional()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {Decoder}\n   */\n  decoderType(): Decoder {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? ((this.bb.readUint8(this.bb_pos + offset): any): Decoder)\n      : decoder.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  decoder<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startOptional(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Decoder} decoderType\n   */\n  static addDecoderType(builder: flatbuffers.Builder, decoderType: Decoder) {\n    builder.addFieldInt8(0, decoderType, decoder.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} optionalOffset\n   */\n  static addDecoder(\n    builder: flatbuffers.Builder,\n    decoderOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, decoderOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endOptional(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n// }\n\n/**\n * @constructor\n */\n// export namespace Decoder{\nexport class Integer {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n   * @type {number}\n   */\n  bb_pos: number = 0\n  /**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Integer}\n */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Integer {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Integer=} obj\n * @returns {Integer}\n */\n  static getRootAsInteger(bb: flatbuffers.ByteBuffer, obj?: Integer): Integer {\n    return (obj || new Integer()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n */\n  static startInteger(builder: flatbuffers.Builder) {\n    builder.startObject(0)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\n  static endInteger(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n// }\n/**\n * @constructor\n */\n// export namespace Decoder{\nexport class Float {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n   * @type {number}\n   */\n  bb_pos: number = 0\n  /**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {Float}\n */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Float {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {Float=} obj\n * @returns {Float}\n */\n  static getRootAsFloat(bb: flatbuffers.ByteBuffer, obj?: Float): Float {\n    return (obj || new Float()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n */\n  static startFloat(builder: flatbuffers.Builder) {\n    builder.startObject(0)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\n  static endFloat(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n// }\n/**\n * @constructor\n */\n// export namespace Decoder{\nexport class String {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n   * @type {number}\n   */\n  bb_pos: number = 0\n  /**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {String}\n */\n  __init(i: number, bb: flatbuffers.ByteBuffer): String {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {String=} obj\n * @returns {String}\n */\n  static getRootAsString(bb: flatbuffers.ByteBuffer, obj?: String): String {\n    return (obj || new String()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n */\n  static startString(builder: flatbuffers.Builder) {\n    builder.startObject(0)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\n  static endString(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n// }\n/**\n * @constructor\n */\n// export namespace Decoder{\nexport class And {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {And}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): And {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {And=} obj\n   * @returns {And}\n   */\n  static getRootAsAnd(bb: flatbuffers.ByteBuffer, obj?: And): And {\n    return (obj || new And()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {Decoder}\n   */\n  leftType(): Decoder {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? /** @type {Decoder} */ ((this.bb.readUint8(this.bb_pos + offset): any))\n      : decoder.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  left<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @returns {Decoder}\n   */\n  rightType(): Decoder {\n    var offset = this.bb.__offset(this.bb_pos, 8)\n    return offset\n      ? /** @type {Decoder} */ ((this.bb.readUint8(this.bb_pos + offset): any))\n      : decoder.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  right<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 10)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startAnd(builder: flatbuffers.Builder) {\n    builder.startObject(4)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Decoder} leftType\n   */\n  static addLeftType(builder: flatbuffers.Builder, leftType: Decoder) {\n    builder.addFieldInt8(0, leftType, decoder.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} leftOffset\n   */\n  static addLeft(builder: flatbuffers.Builder, leftOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(1, leftOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Decoder} rightType\n   */\n  static addRightType(builder: flatbuffers.Builder, rightType: Decoder) {\n    builder.addFieldInt8(2, rightType, decoder.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} rightOffset\n   */\n  static addRight(\n    builder: flatbuffers.Builder,\n    rightOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(3, rightOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endAnd(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n// }\n/**\n   * @constructor\n   */\n// export namespace Decoder{\nexport class Match {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Match}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Match {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Match=} obj\n   * @returns {Match}\n   */\n  static getRootAsMatch(bb: flatbuffers.ByteBuffer, obj?: Match): Match {\n    return (obj || new Match()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {JSON.JSON}\n   */\n  valueType(): JSON.JSONType {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? /** @type {JSON.JSON} */ ((this.bb.readUint8(\n          this.bb_pos + offset\n        ): any))\n      : JSON.JSONVariant.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  value<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startMatch(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {JSON.JSON} valueType\n   */\n  static addValueType(builder: flatbuffers.Builder, valueType: JSON.JSONType) {\n    builder.addFieldInt8(0, valueType, JSON.JSONVariant.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} valueOffset\n   */\n  static addValue(\n    builder: flatbuffers.Builder,\n    valueOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, valueOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endMatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n// }\n","/* @flow */\n\n// Transformed verison of DOMinion.fbs.ts\n\nimport * as flatbuffers from \"flatbuffers\"\nimport * as Decoder from \"../Decoder.fbs/Decoder\"\n\nexport const op = {\n  NONE: (0: 0),\n  SelectChildren: (1: 1),\n  SelectSibling: (2: 2),\n  SelectParent: (3: 3),\n  InsertComment: (4: 4),\n  InsertText: (5: 5),\n  InsertElement: (6: 6),\n  InsertStashedNode: (7: 7),\n  ReplaceWithComment: (8: 8),\n  ReplaceWithText: (9: 9),\n  ReplaceWithElement: (10: 10),\n  ReplaceWithStashedNode: (11: 11),\n  RemoveNextSibling: (12: 12),\n  SetTextData: (13: 13),\n  EditTextData: (14: 14),\n  SetAttribute: (15: 15),\n  RemoveAttribute: (16: 16),\n  AssignStringProperty: (17: 17),\n  AssignBooleanProperty: (18: 18),\n  AssignNumberProperty: (19: 19),\n  AssignNullProperty: (20: 20),\n  DeleteProperty: (21: 21),\n  SetStyleRule: (22: 22),\n  RemoveStyleRule: (23: 23),\n  StashNextSibling: (24: 24),\n  DiscardStashed: (25: 25),\n  ShiftSiblings: (26: 26),\n  AddEventListener: (27: 27),\n  RemoveEventListener: (28: 28)\n}\n\nexport type Op = $Values<typeof op>\n\n/**\n * @constructor\n */\n\nexport class StashNextSibling {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {StashNextSibling}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): StashNextSibling {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {StashNextSibling=} obj\n   * @returns {StashNextSibling}\n   */\n  static getRootAsStashNextSibling(\n    bb: flatbuffers.ByteBuffer,\n    obj?: StashNextSibling\n  ): StashNextSibling {\n    return (obj || new StashNextSibling()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {number}\n   */\n  address(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startStashNextSibling(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} address\n   */\n  static addAddress(builder: flatbuffers.Builder, address: number) {\n    builder.addFieldInt32(0, address, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endStashNextSibling(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n\nexport class ShiftSiblings {\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n   * @type {number}\n   */\n  bb_pos: number = 0\n  /**\n * @param {number} i\n * @param {flatbuffers.ByteBuffer} bb\n * @returns {ShiftSiblings}\n */\n  __init(i: number, bb: flatbuffers.ByteBuffer): ShiftSiblings {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n * @param {flatbuffers.ByteBuffer} bb\n * @param {ShiftSiblings=} obj\n * @returns {ShiftSiblings}\n */\n  static getRootAsShiftSiblings(\n    bb: flatbuffers.ByteBuffer,\n    obj?: ShiftSiblings\n  ): ShiftSiblings {\n    return (obj || new ShiftSiblings()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n * @returns {number}\n */\n  count(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n */\n  static startShiftSiblings(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @param {number} count\n */\n  static addCount(builder: flatbuffers.Builder, count: number) {\n    builder.addFieldInt32(0, count, 0)\n  }\n\n  /**\n * @param {flatbuffers.Builder} builder\n * @returns {flatbuffers.Offset}\n */\n  static endShiftSiblings(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n\n/**\n   * @constructor\n   */\nexport class DiscardStashed {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {DiscardStashed}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): DiscardStashed {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {DiscardStashed=} obj\n   * @returns {DiscardStashed}\n   */\n  static getRootAsDiscardStashed(\n    bb: flatbuffers.ByteBuffer,\n    obj?: DiscardStashed\n  ): DiscardStashed {\n    return (obj || new DiscardStashed()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {number}\n   */\n  address(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startDiscardStashed(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} address\n   */\n  static addAddress(builder: flatbuffers.Builder, address: number) {\n    builder.addFieldInt32(0, address, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endDiscardStashed(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class AssignStringProperty {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {AssignStringProperty}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): AssignStringProperty {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {AssignStringProperty=} obj\n   * @returns {AssignStringProperty}\n   */\n  static getRootAsAssignStringProperty(\n    bb: flatbuffers.ByteBuffer,\n    obj?: AssignStringProperty\n  ): AssignStringProperty {\n    return (obj || new AssignStringProperty()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  name(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  value(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startAssignStringProperty(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} nameOffset\n   */\n  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, nameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} valueOffset\n   */\n  static addValue(\n    builder: flatbuffers.Builder,\n    valueOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, valueOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endAssignStringProperty(\n    builder: flatbuffers.Builder\n  ): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class AssignBooleanProperty {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {AssignBooleanProperty}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): AssignBooleanProperty {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {AssignBooleanProperty=} obj\n   * @returns {AssignBooleanProperty}\n   */\n  static getRootAsAssignBooleanProperty(\n    bb: flatbuffers.ByteBuffer,\n    obj?: AssignBooleanProperty\n  ): AssignBooleanProperty {\n    return (obj || new AssignBooleanProperty()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  name(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  value(): boolean {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startAssignBooleanProperty(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} nameOffset\n   */\n  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, nameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {boolean} value\n   */\n  static addValue(builder: flatbuffers.Builder, value: boolean) {\n    builder.addFieldInt8(1, +value, +false)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endAssignBooleanProperty(\n    builder: flatbuffers.Builder\n  ): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class AssignNumberProperty {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {AssignNumberProperty}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): AssignNumberProperty {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {AssignNumberProperty=} obj\n   * @returns {AssignNumberProperty}\n   */\n  static getRootAsAssignNumberProperty(\n    bb: flatbuffers.ByteBuffer,\n    obj?: AssignNumberProperty\n  ): AssignNumberProperty {\n    return (obj || new AssignNumberProperty()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  name(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @returns {number}\n   */\n  value(): number {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startAssignNumberProperty(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} nameOffset\n   */\n  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, nameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} value\n   */\n  static addValue(builder: flatbuffers.Builder, value: number) {\n    builder.addFieldFloat64(1, value, 0.0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endAssignNumberProperty(\n    builder: flatbuffers.Builder\n  ): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class AssignNullProperty {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {AssignNullProperty}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): AssignNullProperty {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {AssignNullProperty=} obj\n   * @returns {AssignNullProperty}\n   */\n  static getRootAsAssignNullProperty(\n    bb: flatbuffers.ByteBuffer,\n    obj?: AssignNullProperty\n  ): AssignNullProperty {\n    return (obj || new AssignNullProperty()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  name(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startAssignNullProperty(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} nameOffset\n   */\n  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, nameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endAssignNullProperty(\n    builder: flatbuffers.Builder\n  ): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class DeleteProperty {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {DeleteProperty}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): DeleteProperty {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {DeleteProperty=} obj\n   * @returns {DeleteProperty}\n   */\n  static getRootAsDeleteProperty(\n    bb: flatbuffers.ByteBuffer,\n    obj?: DeleteProperty\n  ): DeleteProperty {\n    return (obj || new DeleteProperty()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  name(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startDeleteProperty(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} nameOffset\n   */\n  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, nameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endDeleteProperty(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class SetStyleRule {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {SetStyleRule}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): SetStyleRule {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {SetStyleRule=} obj\n   * @returns {SetStyleRule}\n   */\n  static getRootAsSetStyleRule(\n    bb: flatbuffers.ByteBuffer,\n    obj?: SetStyleRule\n  ): SetStyleRule {\n    return (obj || new SetStyleRule()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  name(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  value(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startSetStyleRule(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} nameOffset\n   */\n  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, nameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} valueOffset\n   */\n  static addValue(\n    builder: flatbuffers.Builder,\n    valueOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, valueOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endSetStyleRule(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class RemoveStyleRule {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {RemoveStyleRule}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): RemoveStyleRule {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {RemoveStyleRule=} obj\n   * @returns {RemoveStyleRule}\n   */\n  static getRootAsRemoveStyleRule(\n    bb: flatbuffers.ByteBuffer,\n    obj?: RemoveStyleRule\n  ): RemoveStyleRule {\n    return (obj || new RemoveStyleRule()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  name(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startRemoveStyleRule(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} nameOffset\n   */\n  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, nameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endRemoveStyleRule(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class SetAttribute {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {SetAttribute}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): SetAttribute {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {SetAttribute=} obj\n   * @returns {SetAttribute}\n   */\n  static getRootAsSetAttribute(\n    bb: flatbuffers.ByteBuffer,\n    obj?: SetAttribute\n  ): SetAttribute {\n    return (obj || new SetAttribute()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  namespaceURI(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  name(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  value(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 8)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startSetAttribute(builder: flatbuffers.Builder) {\n    builder.startObject(3)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} namespaceURIOffset\n   */\n  static addNamespaceURI(\n    builder: flatbuffers.Builder,\n    namespaceURIOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(0, namespaceURIOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} nameOffset\n   */\n  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(1, nameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} valueOffset\n   */\n  static addValue(\n    builder: flatbuffers.Builder,\n    valueOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(2, valueOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endSetAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class RemoveAttribute {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {RemoveAttribute}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): RemoveAttribute {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {RemoveAttribute=} obj\n   * @returns {RemoveAttribute}\n   */\n  static getRootAsRemoveAttribute(\n    bb: flatbuffers.ByteBuffer,\n    obj?: RemoveAttribute\n  ): RemoveAttribute {\n    return (obj || new RemoveAttribute()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  namespaceURI(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  name(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startRemoveAttribute(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} namespaceURIOffset\n   */\n  static addNamespaceURI(\n    builder: flatbuffers.Builder,\n    namespaceURIOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(0, namespaceURIOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} nameOffset\n   */\n  static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(1, nameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endRemoveAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class InsertText {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {InsertText}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): InsertText {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {InsertText=} obj\n   * @returns {InsertText}\n   */\n  static getRootAsInsertText(\n    bb: flatbuffers.ByteBuffer,\n    obj?: InsertText\n  ): InsertText {\n    return (obj || new InsertText()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  data(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startInsertText(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} dataOffset\n   */\n  static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, dataOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endInsertText(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class InsertComment {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {InsertComment}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): InsertComment {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {InsertComment=} obj\n   * @returns {InsertComment}\n   */\n  static getRootAsInsertComment(\n    bb: flatbuffers.ByteBuffer,\n    obj?: InsertComment\n  ): InsertComment {\n    return (obj || new InsertComment()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  data(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startInsertComment(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} dataOffset\n   */\n  static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, dataOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endInsertComment(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class InsertElement {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {InsertElement}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): InsertElement {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {InsertElement=} obj\n   * @returns {InsertElement}\n   */\n  static getRootAsInsertElement(\n    bb: flatbuffers.ByteBuffer,\n    obj?: InsertElement\n  ): InsertElement {\n    return (obj || new InsertElement()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  namespaceURI(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  localName(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startInsertElement(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} namespaceURIOffset\n   */\n  static addNamespaceURI(\n    builder: flatbuffers.Builder,\n    namespaceURIOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(0, namespaceURIOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} localNameOffset\n   */\n  static addLocalName(\n    builder: flatbuffers.Builder,\n    localNameOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, localNameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endInsertElement(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class InsertStashedNode {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {InsertStashedNode}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): InsertStashedNode {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {InsertStashedNode=} obj\n   * @returns {InsertStashedNode}\n   */\n  static getRootAsInsertStashedNode(\n    bb: flatbuffers.ByteBuffer,\n    obj?: InsertStashedNode\n  ): InsertStashedNode {\n    return (obj || new InsertStashedNode()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {number}\n   */\n  address(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startInsertStashedNode(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} address\n   */\n  static addAddress(builder: flatbuffers.Builder, address: number) {\n    builder.addFieldInt32(0, address, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endInsertStashedNode(\n    builder: flatbuffers.Builder\n  ): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class ReplaceWithText {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {ReplaceWithText}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): ReplaceWithText {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {ReplaceWithText=} obj\n   * @returns {ReplaceWithText}\n   */\n  static getRootAsReplaceWithText(\n    bb: flatbuffers.ByteBuffer,\n    obj?: ReplaceWithText\n  ): ReplaceWithText {\n    return (obj || new ReplaceWithText()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  data(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startReplaceWithText(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} dataOffset\n   */\n  static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, dataOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endReplaceWithText(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class ReplaceWithComment {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {ReplaceWithComment}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): ReplaceWithComment {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {ReplaceWithComment=} obj\n   * @returns {ReplaceWithComment}\n   */\n  static getRootAsReplaceWithComment(\n    bb: flatbuffers.ByteBuffer,\n    obj?: ReplaceWithComment\n  ): ReplaceWithComment {\n    return (obj || new ReplaceWithComment()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  data(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startReplaceWithComment(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} dataOffset\n   */\n  static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, dataOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endReplaceWithComment(\n    builder: flatbuffers.Builder\n  ): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class ReplaceWithElement {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {ReplaceWithElement}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): ReplaceWithElement {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {ReplaceWithElement=} obj\n   * @returns {ReplaceWithElement}\n   */\n  static getRootAsReplaceWithElement(\n    bb: flatbuffers.ByteBuffer,\n    obj?: ReplaceWithElement\n  ): ReplaceWithElement {\n    return (obj || new ReplaceWithElement()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  namespaceURI(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  localName(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startReplaceWithElement(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} namespaceURIOffset\n   */\n  static addNamespaceURI(\n    builder: flatbuffers.Builder,\n    namespaceURIOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(0, namespaceURIOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} localNameOffset\n   */\n  static addLocalName(\n    builder: flatbuffers.Builder,\n    localNameOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(1, localNameOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endReplaceWithElement(\n    builder: flatbuffers.Builder\n  ): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class ReplaceWithStashedNode {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {ReplaceWithStashedNode}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): ReplaceWithStashedNode {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {ReplaceWithStashedNode=} obj\n   * @returns {ReplaceWithStashedNode}\n   */\n  static getRootAsReplaceWithStashedNode(\n    bb: flatbuffers.ByteBuffer,\n    obj?: ReplaceWithStashedNode\n  ): ReplaceWithStashedNode {\n    return (obj || new ReplaceWithStashedNode()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {number}\n   */\n  address(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startReplaceWithStashedNode(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} address\n   */\n  static addAddress(builder: flatbuffers.Builder, address: number) {\n    builder.addFieldInt32(0, address, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endReplaceWithStashedNode(\n    builder: flatbuffers.Builder\n  ): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class SetTextData {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {SetTextData}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): SetTextData {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {SetTextData=} obj\n   * @returns {SetTextData}\n   */\n  static getRootAsSetTextData(\n    bb: flatbuffers.ByteBuffer,\n    obj?: SetTextData\n  ): SetTextData {\n    return (obj || new SetTextData()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  data(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startSetTextData(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} dataOffset\n   */\n  static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, dataOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endSetTextData(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class EditTextData {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {EditTextData}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): EditTextData {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {EditTextData=} obj\n   * @returns {EditTextData}\n   */\n  static getRootAsEditTextData(\n    bb: flatbuffers.ByteBuffer,\n    obj?: EditTextData\n  ): EditTextData {\n    return (obj || new EditTextData()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {number}\n   */\n  start(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0\n  }\n\n  /**\n   * @returns {number}\n   */\n  end(): number {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  prefix(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 8)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.EncodingValue=} optionalEncoding\n   * @returns {string|Uint8Array|null}\n   */\n  suffix(optionalEncoding?: flatbuffers.EncodingValue): string | null {\n    var offset = this.bb.__offset(this.bb_pos, 10)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startEditTextData(builder: flatbuffers.Builder) {\n    builder.startObject(4)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} start\n   */\n  static addStart(builder: flatbuffers.Builder, start: number) {\n    builder.addFieldInt32(0, start, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} end\n   */\n  static addEnd(builder: flatbuffers.Builder, end: number) {\n    builder.addFieldInt32(1, end, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} prefixOffset\n   */\n  static addPrefix(\n    builder: flatbuffers.Builder,\n    prefixOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(2, prefixOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} suffixOffset\n   */\n  static addSuffix(\n    builder: flatbuffers.Builder,\n    suffixOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(3, suffixOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endEditTextData(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class SelectChildren {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {SelectChildren}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): SelectChildren {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {SelectChildren=} obj\n   * @returns {SelectChildren}\n   */\n  static getRootAsSelectChildren(\n    bb: flatbuffers.ByteBuffer,\n    obj?: SelectChildren\n  ): SelectChildren {\n    return (obj || new SelectChildren()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startSelectChildren(builder: flatbuffers.Builder) {\n    builder.startObject(0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endSelectChildren(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class SelectSibling {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {SelectSibling}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): SelectSibling {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {SelectSibling=} obj\n   * @returns {SelectSibling}\n   */\n  static getRootAsSelectSibling(\n    bb: flatbuffers.ByteBuffer,\n    obj?: SelectSibling\n  ): SelectSibling {\n    return (obj || new SelectSibling()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {number}\n   */\n  offset(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startSelectSibling(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} offset\n   */\n  static addOffset(builder: flatbuffers.Builder, offset: number) {\n    builder.addFieldInt32(0, offset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endSelectSibling(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class SelectParent {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {SelectParent}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): SelectParent {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {SelectParent=} obj\n   * @returns {SelectParent}\n   */\n  static getRootAsSelectParent(\n    bb: flatbuffers.ByteBuffer,\n    obj?: SelectParent\n  ): SelectParent {\n    return (obj || new SelectParent()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startSelectParent(builder: flatbuffers.Builder) {\n    builder.startObject(0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endSelectParent(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class RemoveNextSibling {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {RemoveNextSibling}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): RemoveNextSibling {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {RemoveNextSibling=} obj\n   * @returns {RemoveNextSibling}\n   */\n  static getRootAsRemoveNextSibling(\n    bb: flatbuffers.ByteBuffer,\n    obj?: RemoveNextSibling\n  ): RemoveNextSibling {\n    return (obj || new RemoveNextSibling()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startRemoveNextSibling(builder: flatbuffers.Builder) {\n    builder.startObject(0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endRemoveNextSibling(\n    builder: flatbuffers.Builder\n  ): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n* @constructor\n*/\n// export namespace DOMinion{\nexport class AddEventListener {\n  /**\n  * @type {flatbuffers.ByteBuffer}\n  */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n  * @type {number}\n  */\n  bb_pos: number = 0\n  /**\n* @param {number} i\n* @param {flatbuffers.ByteBuffer} bb\n* @returns {AddEventListener}\n*/\n  __init(i: number, bb: flatbuffers.ByteBuffer): AddEventListener {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n* @param {flatbuffers.ByteBuffer} bb\n* @param {AddEventListener=} obj\n* @returns {AddEventListener}\n*/\n  static getRootAsAddEventListener(\n    bb: flatbuffers.ByteBuffer,\n    obj?: AddEventListener\n  ): AddEventListener {\n    return (obj || new AddEventListener()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n* @param {flatbuffers.Encoding=} optionalEncoding\n* @returns {string|Uint8Array|null}\n*/\n  type(optionalEncoding?: any): string | null {\n    // type(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\n    // type(optionalEncoding?:any):string|Uint8Array|null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n* @returns {boolean}\n*/\n  capture(): boolean {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false\n  }\n\n  /**\n* @returns {Decoder.Decoder}\n*/\n  decoderType(): Decoder.Decoder {\n    var offset = this.bb.__offset(this.bb_pos, 8)\n    return offset\n      ? /** @type {Decoder.Decoder} */ (((this.bb.readUint8(\n          this.bb_pos + offset\n        ): any): Decoder.Decoder))\n      : Decoder.decoder.NONE\n  }\n\n  /**\n* @param {flatbuffers.Table} obj\n* @returns {?flatbuffers.Table}\n*/\n  decoder<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 10)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n* @param {flatbuffers.Builder} builder\n*/\n  static startAddEventListener(builder: flatbuffers.Builder) {\n    builder.startObject(4)\n  }\n\n  /**\n* @param {flatbuffers.Builder} builder\n* @param {flatbuffers.Offset} typeOffset\n*/\n  static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, typeOffset, 0)\n  }\n\n  /**\n* @param {flatbuffers.Builder} builder\n* @param {boolean} capture\n*/\n  static addCapture(builder: flatbuffers.Builder, capture: boolean) {\n    builder.addFieldInt8(1, +capture, +false)\n  }\n\n  /**\n* @param {flatbuffers.Builder} builder\n* @param {Decoder.Decoder} decoderType\n*/\n  static addDecoderType(\n    builder: flatbuffers.Builder,\n    decoderType: Decoder.Decoder\n  ) {\n    builder.addFieldInt8(2, decoderType, Decoder.decoder.NONE)\n  }\n\n  /**\n* @param {flatbuffers.Builder} builder\n* @param {flatbuffers.Offset} decoderOffset\n*/\n  static addDecoder(\n    builder: flatbuffers.Builder,\n    decoderOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(3, decoderOffset, 0)\n  }\n\n  /**\n* @param {flatbuffers.Builder} builder\n* @returns {flatbuffers.Offset}\n*/\n  static endAddEventListener(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n// }\n/**\n* @constructor\n*/\n// export namespace DOMinion{\nexport class RemoveEventListener {\n  /**\n  * @type {flatbuffers.ByteBuffer}\n  */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n  * @type {number}\n  */\n  bb_pos: number = 0\n  /**\n* @param {number} i\n* @param {flatbuffers.ByteBuffer} bb\n* @returns {RemoveEventListener}\n*/\n  __init(i: number, bb: flatbuffers.ByteBuffer): RemoveEventListener {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n* @param {flatbuffers.ByteBuffer} bb\n* @param {RemoveEventListener=} obj\n* @returns {RemoveEventListener}\n*/\n  static getRootAsRemoveEventListener(\n    bb: flatbuffers.ByteBuffer,\n    obj?: RemoveEventListener\n  ): RemoveEventListener {\n    return (obj || new RemoveEventListener()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n* @param {flatbuffers.Encoding=} optionalEncoding\n* @returns {string|Uint8Array|null}\n*/\n  type(optionalEncoding?: any): string | null {\n    // type(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\n    // type(optionalEncoding?:any):string|Uint8Array|null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)\n      : null\n  }\n\n  /**\n* @returns {boolean}\n*/\n  capture(): boolean {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false\n  }\n\n  /**\n* @returns {Decoder.Decoder}\n*/\n  decoderType(): Decoder.Decoder {\n    var offset = this.bb.__offset(this.bb_pos, 8)\n    return offset\n      ? /** @type {Decoder.Decoder} */ (((this.bb.readUint8(\n          this.bb_pos + offset\n        ): any): Decoder.Decoder))\n      : Decoder.decoder.NONE\n  }\n\n  /**\n* @param {flatbuffers.Table} obj\n* @returns {?flatbuffers.Table}\n*/\n  decoder<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 10)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n* @param {flatbuffers.Builder} builder\n*/\n  static startRemoveEventListener(builder: flatbuffers.Builder) {\n    builder.startObject(4)\n  }\n\n  /**\n* @param {flatbuffers.Builder} builder\n* @param {flatbuffers.Offset} typeOffset\n*/\n  static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, typeOffset, 0)\n  }\n\n  /**\n* @param {flatbuffers.Builder} builder\n* @param {boolean} capture\n*/\n  static addCapture(builder: flatbuffers.Builder, capture: boolean) {\n    builder.addFieldInt8(1, +capture, +false)\n  }\n\n  /**\n* @param {flatbuffers.Builder} builder\n* @param {Decoder.Decoder} decoderType\n*/\n  static addDecoderType(\n    builder: flatbuffers.Builder,\n    decoderType: Decoder.Decoder\n  ) {\n    builder.addFieldInt8(2, decoderType, Decoder.decoder.NONE)\n  }\n\n  /**\n* @param {flatbuffers.Builder} builder\n* @param {flatbuffers.Offset} decoderOffset\n*/\n  static addDecoder(\n    builder: flatbuffers.Builder,\n    decoderOffset: flatbuffers.Offset\n  ) {\n    builder.addFieldOffset(3, decoderOffset, 0)\n  }\n\n  /**\n* @param {flatbuffers.Builder} builder\n* @returns {flatbuffers.Offset}\n*/\n  static endRemoveEventListener(\n    builder: flatbuffers.Builder\n  ): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n// }\n/**\n   * @constructor\n   */\nexport class Change {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {Change}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): Change {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {Change=} obj\n   * @returns {Change}\n   */\n  static getRootAsChange(bb: flatbuffers.ByteBuffer, obj?: Change): Change {\n    return (obj || new Change()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @returns {Op}\n   */\n  opType(): Op {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? (this.bb.readUint8(this.bb_pos + offset): any) : op.NONE\n  }\n\n  /**\n   * @param {flatbuffers.Table} obj\n   * @returns {?flatbuffers.Table}\n   */\n  op<T: flatbuffers.Table>(obj: T): T | null {\n    var offset = this.bb.__offset(this.bb_pos, 6)\n    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startChange(builder: flatbuffers.Builder) {\n    builder.startObject(2)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Op} opType\n   */\n  static addOpType(builder: flatbuffers.Builder, opType: Op) {\n    builder.addFieldInt8(0, opType, op.NONE)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} opOffset\n   */\n  static addOp(builder: flatbuffers.Builder, opOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(1, opOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endChange(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n}\n/**\n   * @constructor\n   */\nexport class ChangeLog {\n  /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n  bb: flatbuffers.ByteBuffer\n\n  /**\n     * @type {number}\n     */\n  bb_pos: number = 0\n  /**\n   * @param {number} i\n   * @param {flatbuffers.ByteBuffer} bb\n   * @returns {ChangeLog}\n   */\n  __init(i: number, bb: flatbuffers.ByteBuffer): ChangeLog {\n    this.bb_pos = i\n    this.bb = bb\n    return this\n  }\n\n  /**\n   * @param {flatbuffers.ByteBuffer} bb\n   * @param {ChangeLog=} obj\n   * @returns {ChangeLog}\n   */\n  static getRootAsChangeLog(\n    bb: flatbuffers.ByteBuffer,\n    obj?: ChangeLog\n  ): ChangeLog {\n    return (obj || new ChangeLog()).__init(\n      bb.readInt32(bb.position()) + bb.position(),\n      bb\n    )\n  }\n\n  /**\n   * @param {number} index\n   * @param {Change=} obj\n   * @returns {Change}\n   */\n  log(index: number, obj?: Change): Change | null {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset\n      ? (obj || new Change()).__init(\n          this.bb.__indirect(\n            this.bb.__vector(this.bb_pos + offset) + index * 4\n          ),\n          this.bb\n        )\n      : null\n  }\n\n  /**\n   * @returns {number}\n   */\n  logLength(): number {\n    var offset = this.bb.__offset(this.bb_pos, 4)\n    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   */\n  static startChangeLog(builder: flatbuffers.Builder) {\n    builder.startObject(1)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} logOffset\n   */\n  static addLog(builder: flatbuffers.Builder, logOffset: flatbuffers.Offset) {\n    builder.addFieldOffset(0, logOffset, 0)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {Array.<flatbuffers.Offset>} data\n   * @returns {flatbuffers.Offset}\n   */\n  static createLogVector(\n    builder: flatbuffers.Builder,\n    data: flatbuffers.Offset[]\n  ): flatbuffers.Offset {\n    builder.startVector(4, data.length, 4)\n    for (var i = data.length - 1; i >= 0; i--) {\n      builder.addOffset(data[i])\n    }\n    return builder.endVector()\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {number} numElems\n   */\n  static startLogVector(builder: flatbuffers.Builder, numElems: number) {\n    builder.startVector(4, numElems, 4)\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @returns {flatbuffers.Offset}\n   */\n  static endChangeLog(builder: flatbuffers.Builder): flatbuffers.Offset {\n    var offset = builder.endObject()\n    return offset\n  }\n\n  /**\n   * @param {flatbuffers.Builder} builder\n   * @param {flatbuffers.Offset} offset\n   */\n  static finishChangeLogBuffer(\n    builder: flatbuffers.Builder,\n    offset: flatbuffers.Offset\n  ) {\n    builder.finish(offset)\n  }\n}\n","/* @flow */\n\nimport type { float, integer } from \"decoder.flow\"\nimport type { Table } from \"flatbuffers\"\nimport type { Builder, Offset } from \"flatbuffers\"\nimport { DecoderError, FieldError, VariantError } from \"./Error\"\nimport * as JSONTable from \"./JSON.fbs/JSON\"\nimport unreachable from \"unreachable\"\n\nexport opaque type Encoded<type>: Offset = Offset\n\nexport type Value =\n  | null\n  | boolean\n  | number\n  | string\n  | Value[]\n  | { [string]: Value }\n\nexport class String extends JSONTable.String {\n  static encode(builder: Builder, value: string): Encoded<String> {\n    const offset = builder.createString(value)\n    String.startString(builder)\n    String.addValue(builder, offset)\n    return String.endString(builder)\n  }\n  static decode(table: String): string | FieldError<String> {\n    const value = table.value()\n    if (value) {\n      return value\n    } else {\n      return new FieldError(\"value\", String)\n    }\n  }\n  decode() {\n    return String.decode(this)\n  }\n}\n\nexport class Float extends JSONTable.Float {\n  static encode(builder: Builder, value: number): Encoded<Float> {\n    Float.startFloat(builder)\n    Float.addValue(builder, value)\n    return Float.endFloat(builder)\n  }\n  static decode(table: Float): float | FieldError<Float> {\n    const value = table.value()\n    if (value) {\n      return (value: any)\n    } else {\n      return new FieldError(\"value\", Float)\n    }\n  }\n  decode() {\n    return Float.decode(this)\n  }\n}\n\nexport class Integer extends JSONTable.Integer {\n  static encode(builder: Builder, value: integer): Encoded<Integer> {\n    Integer.startInteger(builder)\n    Integer.addValue(builder, value)\n    return Integer.endInteger(builder)\n  }\n  static decode(table: Integer): integer | FieldError<Integer> {\n    const value = table.value()\n    if (value) {\n      return (value: any)\n    } else {\n      return new FieldError(\"value\", Integer)\n    }\n  }\n  decode() {\n    return Integer.decode(this)\n  }\n}\n\nexport class Boolean extends JSONTable.Boolean {\n  static encode(builder: Builder, value: boolean): Encoded<Boolean> {\n    Boolean.startBoolean(builder)\n    Boolean.addValue(builder, value)\n    return Boolean.endBoolean(builder)\n  }\n  static decode(table: Boolean): boolean {\n    return table.value()\n  }\n  decode() {\n    return Boolean.decode(this)\n  }\n}\n\nexport class Element extends JSONTable.Element {\n  static encode(builder: Builder, value: Value): Encoded<Element> {\n    const type = JSON.typeOf(value)\n    const encodedValue =\n      type === JSONTable.JSONVariant.NONE ? null : JSON.encode(builder, value)\n    Element.startElement(builder)\n    Element.addValueType(builder, type)\n    if (encodedValue) {\n      Element.addValue(builder, encodedValue)\n    }\n    return Element.endElement(builder)\n  }\n  static decode(table: Element): Value | DecoderError {\n    return JSON.decode(table)\n  }\n  decode() {\n    return Element.decode(this)\n  }\n}\n\nexport class JSONArray extends JSONTable.JSONArray {\n  static element = new Element()\n  static encode(builder: Builder, array: Value[]): Encoded<self> {\n    const elements = []\n    for (let element of array) {\n      elements.push(Element.encode(builder, element))\n    }\n    const offset = JSONArray.createElementsVector(builder, elements)\n    JSONArray.startJSONArray(builder)\n    JSONArray.addElements(builder, offset)\n    return JSONArray.endJSONArray(builder)\n  }\n  static decode(table: JSONArray): Value[] | DecoderError {\n    const cursor = JSONArray.element\n    const length = table.elementsLength()\n    const elements = []\n    let index = 0\n    while (index < length) {\n      const element = table.elements(index, cursor)\n      if (element == null) {\n        return new FieldError(index.toString(), JSONArray)\n      } else {\n        const value = Element.decode(cursor)\n        if (value instanceof DecoderError) {\n          return value\n        } else {\n          elements[index] = value\n        }\n      }\n      index += 1\n    }\n    return elements\n  }\n  decode() {\n    return JSONArray.decode(this)\n  }\n}\n\nexport class Property extends JSONTable.Property {\n  static encode(builder: Builder, name: string, value: Value): Encoded<self> {\n    const encodedName = builder.createString(name)\n    const encodedValue = JSON.encode(builder, value)\n    Property.startProperty(builder)\n    Property.addName(builder, encodedName)\n    Property.addValueType(builder, JSON.typeOf(value))\n    if (encodedValue != null) {\n      Property.addValue(builder, encodedValue)\n    }\n    return Property.endProperty(builder)\n  }\n}\n\nexport class JSONObject extends JSONTable.JSONObject {\n  static property = new Property()\n  static encode(\n    builder: Builder,\n    object: { [string]: Value }\n  ): Encoded<JSONObject> {\n    const properties = []\n    for (const name of Object.keys(object)) {\n      const value = object[name]\n      properties.push(Property.encode(builder, name, value))\n    }\n    const offset = JSONTable.JSONObject.createPropertiesVector(\n      builder,\n      properties\n    )\n    JSONObject.startJSONObject(builder)\n    JSONObject.addProperties(builder, offset)\n\n    return JSONObject.endJSONObject(builder)\n  }\n  static decode(table: JSONObject): { [string]: Value } | DecoderError {\n    const object: { [string]: Value } = (Object.create(null): Object)\n\n    const cursor = JSONObject.property\n    const length = table.propertiesLength()\n    let index = 0\n    while (index < length) {\n      const property = table.properties(index, cursor)\n      if (property == null) {\n        return new FieldError(`property # ${index}`, Object)\n      } else {\n        const property = cursor\n        const name = property.name()\n        const value = JSON.decode(property)\n        if (value instanceof DecoderError) {\n          return value\n        } else if (name == null) {\n          return new FieldError(\"name\", Property)\n        } else {\n          object[name] = value\n        }\n      }\n      index += 1\n    }\n\n    return object\n  }\n  decode() {\n    return JSONObject.decode(this)\n  }\n}\n\nexport default class JSON {\n  static pool: { [JSONTable.JSONType]: JSONValue } = {\n    [JSONTable.JSONVariant.NONE]: null,\n    [JSONTable.JSONVariant.Boolean]: new Boolean(),\n    [JSONTable.JSONVariant.String]: new String(),\n    [JSONTable.JSONVariant.Float]: new Float(),\n    [JSONTable.JSONVariant.Integer]: new Integer(),\n    [JSONTable.JSONVariant.JSONArray]: new JSONArray(),\n    [JSONTable.JSONVariant.JSONObject]: new JSONObject()\n  }\n  static from<a>(value: mixed): Value {\n    return (value: any)\n  }\n  static typeOf(value: mixed): JSONTable.JSONType {\n    switch (typeof value) {\n      case \"string\":\n        return JSONTable.JSONVariant.String\n      case \"boolean\":\n        return JSONTable.JSONVariant.Boolean\n      case \"number\":\n        return JSONTable.JSONVariant.Float\n      default: {\n        if (value === null) {\n          return JSONTable.JSONVariant.NONE\n        } else {\n          return JSONTable.JSONVariant.JSONObject\n        }\n      }\n    }\n  }\n  static encode(builder: Builder, value: Value): EncodedJSON {\n    switch (typeof value) {\n      case \"string\": {\n        return String.encode(builder, value)\n      }\n      case \"number\": {\n        return Float.encode(builder, value)\n      }\n      case \"boolean\": {\n        return Boolean.encode(builder, value)\n      }\n      case \"object\": {\n        if (value === null) {\n          return null\n        } else if (Array.isArray(value)) {\n          return JSONArray.encode(builder, value)\n        } else {\n          return JSONObject.encode(builder, value)\n        }\n      }\n      default:\n        return unreachable(value)\n    }\n  }\n  static decode(table: {\n    valueType(): JSONTable.JSONType,\n    value<t: Table>(t): ?t\n  }): Value | DecoderError {\n    const type = table.valueType()\n    const variant = JSON.pool[type]\n    if (variant == null) {\n      return null\n    } else {\n      const value = table.value(variant)\n      if (value) {\n        return value.decode()\n      } else {\n        return new VariantError(JSON, JSONTable.JSONVariant, type)\n      }\n    }\n  }\n}\n\ntype JSONValue =\n  | null\n  | JSONArray\n  | JSONObject\n  | String\n  | Boolean\n  | Float\n  | Integer\n\ntype EncodedJSON =\n  | null\n  | Encoded<JSONArray>\n  | Encoded<JSONObject>\n  | Encoded<String>\n  | Encoded<Boolean>\n  | Encoded<Float>\n  | Encoded<Integer>\n","/* @flow */\n\nimport type { Table } from \"flatbuffers\"\nimport type { Value } from \"./JSON.fbs\"\nimport type { integer, float } from \"decoder.flow\"\nimport * as Decoder from \"decoder.flow\"\nimport * as DecoderTable from \"./Decoder.fbs/Decoder\"\nimport type { Builder, Offset } from \"flatbuffers\"\nimport { DecoderError, FieldError, VariantError } from \"./Error\"\nimport JSON from \"./JSON.fbs\"\nimport unreachable from \"unreachable\"\n\nexport opaque type Encoded<type>: Offset = Offset\n\nexport const decoderType = DecoderTable.decoder\nexport type DecoderType = DecoderTable.Decoder\n\ntype VariantType =\n  | Accessor\n  | Collection\n  | Dictionary\n  | Maybe\n  | Optional\n  | Either\n  | Null\n  | Undefined\n  | Field\n  | Index\n  | Ok\n  | Error\n  | Form\n  | Record\n  | Boolean\n  | Integer\n  | Float\n  | String\n  | Match\n  | And\n\ntype EncodedDecoder =\n  | Encoded<Accessor>\n  | Encoded<Collection>\n  | Encoded<Dictionary>\n  | Encoded<Maybe>\n  | Encoded<Optional>\n  | Encoded<Either>\n  | Encoded<Null>\n  | Encoded<Undefined>\n  | Encoded<Field>\n  | Encoded<Index>\n  | Encoded<Ok>\n  | Encoded<Error>\n  | Encoded<Form>\n  | Encoded<Record>\n  | Encoded<Boolean>\n  | Encoded<String>\n  | Encoded<Float>\n  | Encoded<Integer>\n  | Encoded<Match>\n  | Encoded<And>\n\nclass Accessor extends DecoderTable.Accessor {\n  static encode<a>(\n    builder: Builder,\n    name: string,\n    decoder: Decoder.Decoder<a>\n  ): Encoded<Accessor> {\n    const nameOffset = builder.createString(name)\n    const decoderOffset = Variant.encode(builder, decoder)\n    Accessor.startAccessor(builder)\n    Accessor.addName(builder, nameOffset)\n    Accessor.addDecoderType(builder, Variant.typeOf(decoder))\n    Accessor.addDecoder(builder, decoderOffset)\n    return Accessor.endAccessor(builder)\n  }\n  static decode<a>(\n    name: string,\n    decoder: Decoder.Decoder<a>\n  ): Decoder.Decoder<a> {\n    return Decoder.accessor(name, decoder)\n  }\n  decode<a>(): Decoder.Decoder<a> | DecoderError {\n    const name = this.name()\n    if (!name) {\n      return new FieldError(\"name\", Accessor)\n    }\n    const decoder = Variant.decode(this)\n    if (decoder instanceof DecoderError) {\n      return decoder\n    } else {\n      return Accessor.decode(name, decoder)\n    }\n  }\n}\n\nclass Collection extends DecoderTable.Collection {\n  static encode<a>(\n    builder: Builder,\n    decoder: Decoder.Decoder<a>\n  ): Encoded<Collection> {\n    const encodedDecoder = Variant.encode(builder, decoder)\n    Collection.startCollection(builder)\n    Collection.addDecoderType(builder, Variant.typeOf(decoder))\n    Collection.addDecoder(builder, encodedDecoder)\n    return Collection.endCollection(builder)\n  }\n  static decode<a>(decoder: Decoder.Decoder<a>): Decoder.Decoder<a[]> {\n    return Decoder.array(decoder)\n  }\n  decode<a>(): Decoder.Decoder<a[]> | DecoderError {\n    const decoder = Variant.decode(this)\n    if (decoder instanceof DecoderError) {\n      return decoder\n    } else {\n      return Collection.decode(decoder)\n    }\n  }\n}\n\nclass Dictionary extends DecoderTable.Dictionary {\n  static encode<a>(\n    builder: Builder,\n    decoder: Decoder.Decoder<a>\n  ): Encoded<Dictionary> {\n    const encodedDecoder = Variant.encode(builder, decoder)\n    Dictionary.startDictionary(builder)\n    Dictionary.addDecoderType(builder, Variant.typeOf(decoder))\n    Dictionary.addDecoder(builder, encodedDecoder)\n    return Dictionary.endDictionary(builder)\n  }\n  static decode<a>(\n    decoder: Decoder.Decoder<a>\n  ): Decoder.Decoder<{ [string]: a }> {\n    return Decoder.dictionary(decoder)\n  }\n  decode<a>(): Decoder.Decoder<{ [string]: a }> | DecoderError {\n    const decoder = Variant.decode(this)\n    if (decoder instanceof DecoderError) {\n      return decoder\n    } else {\n      return Dictionary.decode(decoder)\n    }\n  }\n}\n\nclass Maybe extends DecoderTable.Maybe {\n  static encode<a>(\n    builder: Builder,\n    decoder: Decoder.Decoder<a>\n  ): Encoded<Maybe> {\n    const encodedDecoder = Variant.encode(builder, decoder)\n    Maybe.startMaybe(builder)\n    Maybe.addDecoderType(builder, Variant.typeOf(decoder))\n    Maybe.addDecoder(builder, encodedDecoder)\n    return Maybe.endMaybe(builder)\n  }\n  static decode<a>(decoder: Decoder.Decoder<a>): Decoder.Decoder<?a> {\n    return Decoder.maybe(decoder)\n  }\n  decode<a>(): Decoder.Decoder<?a> | DecoderError {\n    const decoder = Variant.decode(this)\n    if (decoder instanceof DecoderError) {\n      return decoder\n    } else {\n      return Maybe.decode(decoder)\n    }\n  }\n}\n\nclass Optional extends DecoderTable.Optional {\n  static encode<a>(\n    builder: Builder,\n    decoder: Decoder.Decoder<a>\n  ): Encoded<Optional> {\n    const encodedDecoder = Variant.encode(builder, decoder)\n    Optional.startOptional(builder)\n    Optional.addDecoderType(builder, Variant.typeOf(decoder))\n    Optional.addDecoder(builder, encodedDecoder)\n    return Optional.endOptional(builder)\n  }\n  static decode<a>(decoder: Decoder.Decoder<a>): Decoder.Decoder<?a> {\n    return Decoder.optional(decoder)\n  }\n  decode<a>(): Decoder.Decoder<?a> | DecoderError {\n    const decoder = Variant.decode(this)\n    if (decoder instanceof DecoderError) {\n      return decoder\n    } else {\n      return Optional.decode(decoder)\n    }\n  }\n}\n\nclass Either extends DecoderTable.Either {\n  static variant = new DecoderTable.Variant()\n  static encode<a>(\n    builder: Builder,\n    decoders: Decoder.Decoder<a>[]\n  ): Encoded<Either> {\n    const variants = []\n    for (const decoder of decoders) {\n      const encodedDecoder = Variant.encode(builder, decoder)\n      Variant.startVariant(builder)\n      Variant.addDecoderType(builder, Variant.typeOf(decoder))\n      Variant.addDecoder(builder, encodedDecoder)\n      const encodedVariant = Variant.endVariant(builder)\n      variants.push(encodedVariant)\n    }\n\n    const encodedVariants = Either.createVariantsVector(builder, variants)\n\n    Either.startEither(builder)\n    Either.addVariants(builder, encodedVariants)\n\n    return Either.endEither(builder)\n  }\n  static decode<a>(decoders: Decoder.Decoder<a>[]): Decoder.Decoder<a> {\n    return Decoder.either(...decoders)\n  }\n  decode<a>(): Decoder.Decoder<a> | DecoderError {\n    const cursor = Either.variant\n    const length = this.variantsLength()\n    const variants = []\n    let index = 0\n    while (index < length) {\n      const variant = this.variants(index, cursor)\n      if (variant == null) {\n        return new FieldError(index.toString(), Either)\n      } else {\n        const decoder = Variant.decode(variant)\n        if (decoder instanceof DecoderError) {\n          return decoder\n        } else {\n          variants[index] = decoder\n        }\n      }\n      index += 1\n    }\n    return Either.decode(variants)\n  }\n}\n\nclass Undefined extends DecoderTable.Undefined {\n  static encode(builder: Builder, value: Value): Encoded<Undefined> {\n    const encodedValue = JSON.encode(builder, value)\n    Undefined.startUndefined(builder)\n    Undefined.addValueType(builder, JSON.typeOf(value))\n    if (encodedValue) {\n      Undefined.addValue(builder, encodedValue)\n    }\n    return Undefined.endUndefined(builder)\n  }\n  static decode(value: Value): Decoder.Decoder<Value> {\n    return Decoder.avoid(value)\n  }\n  decode(): Decoder.Decoder<Value> | DecoderError {\n    const value = JSON.decode(this)\n    if (value instanceof DecoderError) {\n      return new FieldError(\"value\", Undefined)\n    } else {\n      return Undefined.decode(value)\n    }\n  }\n}\n\nclass Null extends DecoderTable.Null {\n  static encode(builder: Builder, value: Value): Encoded<Null> {\n    const encodedValue = JSON.encode(builder, value)\n    Null.startNull(builder)\n    Null.addValueType(builder, JSON.typeOf(value))\n    if (encodedValue) {\n      Null.addValue(builder, encodedValue)\n    }\n    return Null.endNull(builder)\n  }\n  static decode(value: Value): Decoder.Decoder<Value> {\n    return Decoder.annul(value)\n  }\n  decode(): Decoder.Decoder<Value> | DecoderError {\n    const value = JSON.decode(this)\n    if (value instanceof DecoderError) {\n      return new FieldError(\"value\", Null)\n    } else {\n      return Null.decode(value)\n    }\n  }\n}\n\nclass Boolean extends DecoderTable.Boolean {\n  static encode(builder: Builder): Encoded<Boolean> {\n    Boolean.startBoolean(builder)\n    return Boolean.endBoolean(builder)\n  }\n  static decode(): Decoder.Decoder<boolean> {\n    return Decoder.Boolean\n  }\n  decode(): Decoder.Decoder<boolean> {\n    return Decoder.Boolean\n  }\n}\n\nclass Integer extends DecoderTable.Integer {\n  static encode(builder: Builder): Encoded<Integer> {\n    Integer.startInteger(builder)\n    return Integer.endInteger(builder)\n  }\n  static decode(): Decoder.Decoder<integer> {\n    return Decoder.Integer\n  }\n  decode(): Decoder.Decoder<integer> {\n    return Decoder.Integer\n  }\n}\n\nclass Float extends DecoderTable.Float {\n  static encode(builder: Builder): Encoded<Float> {\n    Float.startFloat(builder)\n    return Float.endFloat(builder)\n  }\n  static decode(): Decoder.Decoder<float> {\n    return Decoder.Float\n  }\n  decode(): Decoder.Decoder<float> {\n    return Decoder.Float\n  }\n}\n\nclass String extends DecoderTable.String {\n  static encode(builder: Builder): Encoded<String> {\n    String.startString(builder)\n    return String.endString(builder)\n  }\n  static decode(): Decoder.Decoder<string> {\n    return Decoder.String\n  }\n  static decode(): Decoder.Decoder<string> {\n    return Decoder.String\n  }\n  decode(): Decoder.Decoder<string> {\n    return Decoder.String\n  }\n}\n\nclass Field extends DecoderTable.Field {\n  static encode<a>(\n    builder: Builder,\n    name: string,\n    decoder: Decoder.Decoder<a>\n  ): Encoded<Field> {\n    const encodedName = builder.createString(name)\n    const encodedVariant = Variant.encode(builder, decoder)\n    Field.startField(builder)\n    Field.addName(builder, encodedName)\n    Field.addDecoderType(builder, Variant.typeOf(decoder))\n    Field.addDecoder(builder, encodedVariant)\n    return Field.endField(builder)\n  }\n  static decode<a>(\n    name: string,\n    decoder: Decoder.Decoder<a>\n  ): Decoder.Decoder<a> {\n    return Decoder.field(name, decoder)\n  }\n  decode<a>(): Decoder.Decoder<a> | DecoderError {\n    const name = this.name()\n    if (!name) {\n      return new FieldError(\"name\", Field)\n    }\n    const decoder = Variant.decode(this)\n    if (decoder instanceof DecoderError) {\n      return decoder\n    } else {\n      return Decoder.field(name, decoder)\n    }\n  }\n}\n\nclass Index extends DecoderTable.Index {\n  static encode<a>(\n    builder: Builder,\n    index: number,\n    decoder: Decoder.Decoder<a>\n  ): Encoded<Index> {\n    const encodedVariant = Variant.encode(builder, decoder)\n    Index.startIndex(builder)\n    Index.addIndex(builder, index)\n    Index.addDecoderType(builder, Variant.typeOf(decoder))\n    Index.addDecoder(builder, encodedVariant)\n    return Index.endIndex(builder)\n  }\n  static decode<a>(\n    index: number,\n    decoder: Decoder.Decoder<a>\n  ): Decoder.Decoder<a> {\n    return Decoder.index(index, decoder)\n  }\n  decode<a>(): Decoder.Decoder<a> | DecoderError {\n    const index = this.index()\n    const decoder = Variant.decode(this)\n    if (decoder instanceof DecoderError) {\n      return decoder\n    } else {\n      return Decoder.index(index, decoder)\n    }\n  }\n}\n\nclass Ok extends DecoderTable.Ok {\n  static encode(builder: Builder, value: Value): Encoded<Ok> {\n    const encodedValue = JSON.encode(builder, value)\n    Ok.startOk(builder)\n    Ok.addValueType(builder, JSON.typeOf(value))\n    if (encodedValue) {\n      Ok.addValue(builder, encodedValue)\n    }\n    return Ok.endOk(builder)\n  }\n  static decode(value: Value): Decoder.Decoder<Value> {\n    return Decoder.ok(value)\n  }\n  decode(): Decoder.Decoder<Value> | DecoderError {\n    const value = JSON.decode(this)\n    if (value instanceof DecoderError) {\n      return value\n    } else {\n      return Ok.decode(value)\n    }\n  }\n}\n\nclass Match extends DecoderTable.Match {\n  static encode(builder: Builder, value: Value): Encoded<Match> {\n    const encodedValue = JSON.encode(builder, value)\n    Match.startMatch(builder)\n    Match.addValueType(builder, JSON.typeOf(value))\n    if (encodedValue) {\n      Match.addValue(builder, encodedValue)\n    }\n    return Match.endMatch(builder)\n  }\n  static decode(value: Value): Decoder.Decoder<Value> {\n    return Decoder.match(value)\n  }\n  decode(): Decoder.Decoder<Value> | DecoderError {\n    const value = JSON.decode(this)\n    if (value instanceof DecoderError) {\n      return value\n    } else {\n      return Match.decode(value)\n    }\n  }\n}\n\nclass Left {\n  source: And\n  reset(source: And): Left {\n    this.source = source\n    return this\n  }\n  decoderType(): DecoderType {\n    return this.source.leftType()\n  }\n  decoder<t: Table>(table: t): ?t {\n    return this.source.left(table)\n  }\n}\n\nclass Right {\n  source: And\n  reset(source: And): Right {\n    this.source = source\n    return this\n  }\n  decoderType(): DecoderType {\n    return this.source.rightType()\n  }\n  decoder<t: Table>(table: t): ?t {\n    return this.source.right(table)\n  }\n}\n\nclass And extends DecoderTable.And {\n  static left = new Left()\n  static right = new Right()\n  static encode<a, b>(\n    builder: Builder,\n    left: Decoder.Decoder<a>,\n    right: Decoder.Decoder<b>\n  ): Encoded<And> {\n    const encodedLeft = Variant.encode(builder, left)\n    const encodedRight = Variant.encode(builder, right)\n\n    And.startAnd(builder)\n    And.addLeftType(builder, Variant.typeOf(left))\n    And.addLeft(builder, encodedLeft)\n    And.addRightType(builder, Variant.typeOf(right))\n    And.addRight(builder, encodedRight)\n    return And.endAnd(builder)\n  }\n  static decode<a, b>(\n    left: Decoder.Decoder<a>,\n    right: Decoder.Decoder<b>\n  ): Decoder.Decoder<b> {\n    return Decoder.and(left, right)\n  }\n  decode<a, b>(): Decoder.Decoder<b> | DecoderError {\n    const left = Variant.decode(And.left.reset(this))\n    if (left instanceof DecoderError) {\n      return left\n    }\n    const right = Variant.decode(And.right.reset(this))\n    if (right instanceof DecoderError) {\n      return right\n    }\n    return And.decode(left, right)\n  }\n}\n\nclass Error extends DecoderTable.Error {\n  static encode(builder: Builder, message: string): Encoded<Error> {\n    const encodedMessage = builder.createString(message)\n    Error.startError(builder)\n    Error.addMessage(builder, encodedMessage)\n    return Error.endError(builder)\n  }\n  static decode<a>(message: string): Decoder.Decoder<a> {\n    return Decoder.error(message)\n  }\n  decode<a>(): Decoder.Decoder<a> | DecoderError {\n    const message = this.message()\n    if (message == null) {\n      return new FieldError(\"message\", Error)\n    } else {\n      return Error.decode(message)\n    }\n  }\n}\n\nclass Fields {\n  static field = new Field()\n  static encode<a>(\n    builder: Builder,\n    fields: { [string]: Decoder.Decoder<a> }\n  ): Offset[] {\n    const offsets = []\n    for (let name of Object.keys(fields)) {\n      const decoder = fields[name]\n      const nameOffset = builder.createString(name)\n      const valueOffset = Variant.encode(builder, decoder)\n      Field.startField(builder)\n      Field.addName(builder, nameOffset)\n      Field.addDecoderType(builder, Variant.typeOf(decoder))\n      Field.addDecoder(builder, valueOffset)\n      offsets.push(Field.endField(builder))\n    }\n    return offsets\n  }\n  static decode<a>(table: Record | Form): { [string]: Decoder.Decoder<a> } {\n    const fields = (Object.create(null): Object)\n    const cursor = Fields.field\n    const length = table.fieldsLength()\n    let index = 0\n    while (index < length) {\n      const field = table.fields(index, cursor)\n      if (field == null) {\n        return new FieldError(`field#${index}`, Form)\n      } else {\n        const name = cursor.name()\n        if (name == null) {\n          return new FieldError(`field#${index}.name`, Form)\n        }\n        const decoder = Variant.decode(cursor)\n        if (decoder instanceof DecoderError) {\n          return decoder\n        }\n        fields[name] = decoder\n      }\n      index += 1\n    }\n    return fields\n  }\n}\n\nclass Form extends DecoderTable.Form {\n  static cursor = new Field()\n  static encode<a>(builder: Builder, fields: Decoder.Fields<a>): Encoded<Form> {\n    const encodedFields = Form.createFormVector(\n      builder,\n      Fields.encode(builder, fields)\n    )\n\n    Form.startForm(builder)\n    Form.addFields(builder, encodedFields)\n    return Form.endForm(builder)\n  }\n  static decode<a: {}>(fields: Decoder.Fields<a>): Decoder.Decoder<a> {\n    return Decoder.form(fields)\n  }\n  decode<a: {}>(): Decoder.Decoder<a> | DecoderError {\n    const fields = Fields.decode(this)\n    if (fields instanceof DecoderError) {\n      return fields\n    } else {\n      return Form.decode(fields)\n    }\n  }\n}\n\nclass Record extends DecoderTable.Record {\n  static encode<a>(\n    builder: Builder,\n    fields: Decoder.Fields<a>\n  ): Encoded<Record> {\n    const encodedFields = Record.createFieldsVector(\n      builder,\n      Fields.encode(builder, fields)\n    )\n    Record.startRecord(builder)\n    Record.addFields(builder, encodedFields)\n    return Record.endRecord(builder)\n  }\n  static decode<a: {}>(fields: Decoder.Fields<a>): Decoder.Decoder<a> {\n    return Decoder.record(fields)\n  }\n  decode<a: {}>(): Decoder.Decoder<a> | DecoderError {\n    const fields = Fields.decode(this)\n    if (fields instanceof DecoderError) {\n      return fields\n    } else {\n      return Record.decode(fields)\n    }\n  }\n}\n\nexport default class Variant extends DecoderTable.Variant {\n  static pool: { [DecoderType]: VariantType } = {\n    [decoderType.Accessor]: new Accessor(),\n    [decoderType.Collection]: new Collection(),\n    [decoderType.Dictionary]: new Dictionary(),\n    [decoderType.Either]: new Either(),\n    [decoderType.Error]: new Error(),\n    [decoderType.Field]: new Field(),\n    [decoderType.Form]: new Form(),\n    [decoderType.Index]: new Index(),\n    [decoderType.Maybe]: new Maybe(),\n    [decoderType.Null]: new Null(),\n    [decoderType.Ok]: new Ok(),\n    [decoderType.Optional]: new Optional(),\n    [decoderType.Record]: new Record(),\n    [decoderType.Undefined]: new Undefined(),\n    [decoderType.Boolean]: new Boolean(),\n    [decoderType.Float]: new Float(),\n    [decoderType.Integer]: new Integer(),\n    [decoderType.String]: new String(),\n    [decoderType.Match]: new Match(),\n    [decoderType.And]: new And()\n  }\n  static typeOf<a>(decoder: Decoder.Decoder<a>): DecoderType {\n    const { type } = decoder\n    switch (type) {\n      case \"Array\":\n        return decoderType.Collection\n      default:\n        return decoderType[type]\n    }\n  }\n  static encode<a>(\n    builder: Builder,\n    decoder: Decoder.Decoder<a>\n  ): EncodedDecoder {\n    switch (decoder.type) {\n      case \"Accessor\": {\n        return Accessor.encode(builder, decoder.name, decoder.accessor)\n      }\n      case \"Array\": {\n        return Collection.encode(builder, decoder.array)\n      }\n      case \"Boolean\": {\n        return Boolean.encode(builder)\n      }\n      case \"Integer\": {\n        return Integer.encode(builder)\n      }\n      case \"Float\": {\n        return Float.encode(builder)\n      }\n      case \"String\": {\n        return String.encode(builder)\n      }\n      case \"Dictionary\": {\n        return Dictionary.encode(builder, decoder.dictionary)\n      }\n      case \"Maybe\": {\n        return Maybe.encode(builder, decoder.maybe)\n      }\n      case \"Optional\": {\n        return Optional.encode(builder, decoder.optional)\n      }\n      case \"Either\": {\n        return Either.encode(builder, decoder.either)\n      }\n      case \"Null\": {\n        return Null.encode(builder, JSON.from(decoder.Null))\n      }\n      case \"Undefined\": {\n        return Undefined.encode(builder, JSON.from(decoder.Undefined))\n      }\n      case \"Field\": {\n        return Field.encode(builder, decoder.name, decoder.field)\n      }\n      case \"Index\": {\n        return Index.encode(builder, decoder.index, decoder.member)\n      }\n      case \"Ok\": {\n        return Ok.encode(builder, JSON.from(decoder.value))\n      }\n      case \"Error\": {\n        return Error.encode(builder, decoder.message)\n      }\n      case \"Record\": {\n        return Record.encode(builder, decoder.fields)\n      }\n      case \"Form\": {\n        return Form.encode(builder, decoder.form)\n      }\n      case \"And\": {\n        return And.encode(builder, decoder.left, decoder.right)\n      }\n      case \"Match\": {\n        return Match.encode(builder, JSON.from(decoder.match))\n      }\n      default:\n        return unreachable(decoder)\n    }\n  }\n  static cursor<a>(type: DecoderType): ?VariantType {\n    return Variant.pool[type]\n  }\n  static decode<a>(table: {\n    decoderType(): DecoderType,\n    decoder<t: Table>(t): ?t\n  }): Decoder.Decoder<a> | DecoderError {\n    const type = table.decoderType()\n    const cursor = Variant.cursor(type)\n    const variant = cursor && table.decoder(cursor)\n    const decoder = variant && variant.decode()\n\n    if (decoder == null) {\n      return new VariantError(Variant, decoderType, type)\n    } else if (decoder instanceof DecoderError) {\n      return decoder\n    } else {\n      return (decoder: any)\n    }\n  }\n}\n","/* @flow */\n\nimport { flatbuffers } from \"flatbuffers\"\nimport type { Builder, Offset } from \"flatbuffers\"\nimport type { Encoder, EventDecoder } from \"../../../Log\"\nimport * as FBS from \"./ChangeLog.js\"\nimport Decoder from \"../Decoder.fbs.js\"\nimport { DecoderError, FieldError } from \"../Error\"\n\nexport type OpType = FBS.Op\nconst opType = FBS.op\nexport opaque type Op: Offset = Offset\n\nexport class AssignBooleanProperty extends FBS.AssignBooleanProperty {\n  static opType = opType.AssignBooleanProperty\n  opType: typeof opType.AssignBooleanProperty = opType.AssignBooleanProperty\n  static encode(builder: Builder, name: string, value: boolean): Op {\n    const nameOffset = builder.createString(name)\n    AssignBooleanProperty.startAssignBooleanProperty(builder)\n    AssignBooleanProperty.addName(builder, nameOffset)\n    AssignBooleanProperty.addValue(builder, value)\n    return AssignBooleanProperty.endAssignBooleanProperty(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const name = this.name()\n    if (name == null) {\n      return new FieldError(\"name\", AssignBooleanProperty)\n    } else {\n      return changeLog.assignProperty(buffer, name, this.value())\n    }\n  }\n}\n\nexport class AssignNullProperty extends FBS.AssignNullProperty {\n  static opType = opType.AssignNullProperty\n  opType: typeof opType.AssignNullProperty = opType.AssignNullProperty\n  static encode(builder: Builder, name: string, value: null = null): Op {\n    const nameOffset = builder.createString(name)\n    AssignNullProperty.startAssignNullProperty(builder)\n    AssignNullProperty.addName(builder, nameOffset)\n    return AssignNullProperty.endAssignNullProperty(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const name = this.name()\n    if (name == null) {\n      return new FieldError(\"name\", AssignNullProperty)\n    } else {\n      return changeLog.assignProperty(buffer, name, null)\n    }\n  }\n}\n\nexport class AssignNumberProperty extends FBS.AssignNumberProperty {\n  static opType = opType.AssignNumberProperty\n  opType: typeof opType.AssignNumberProperty = opType.AssignNumberProperty\n  static encode(builder: Builder, name: string, value: number): Op {\n    const nameOffset = builder.createString(name)\n    AssignNumberProperty.startAssignNumberProperty(builder)\n    AssignNumberProperty.addName(builder, nameOffset)\n    AssignNumberProperty.addValue(builder, value)\n    return AssignNumberProperty.endAssignNumberProperty(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const name = this.name()\n    if (name == null) {\n      return new FieldError(\"name\", AssignNumberProperty)\n    } else {\n      return changeLog.assignProperty(buffer, name, this.value())\n    }\n  }\n}\n\nexport class AssignStringProperty extends FBS.AssignStringProperty {\n  static opType = opType.AssignStringProperty\n  opType: typeof opType.AssignStringProperty = opType.AssignStringProperty\n  static encode(builder: Builder, name: string, value: string): Op {\n    const nameOffset = builder.createString(name)\n    const valueOffset = builder.createString(value)\n    AssignStringProperty.startAssignStringProperty(builder)\n    AssignStringProperty.addName(builder, nameOffset)\n    AssignStringProperty.addValue(builder, valueOffset)\n    return AssignStringProperty.endAssignStringProperty(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const name = this.name()\n    if (name == null) {\n      return new FieldError(\"name\", AssignStringProperty)\n    } else {\n      return changeLog.assignProperty(buffer, name, this.value())\n    }\n  }\n}\n\nexport class DeleteProperty extends FBS.DeleteProperty {\n  static opType = opType.DeleteProperty\n  opType: typeof opType.DeleteProperty = opType.DeleteProperty\n  static encode(builder: Builder, name: string): Op {\n    const nameOffset = builder.createString(name)\n    DeleteProperty.startDeleteProperty(builder)\n    DeleteProperty.addName(builder, nameOffset)\n    return DeleteProperty.endDeleteProperty(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const name = this.name()\n    if (name == null) {\n      return new FieldError(\"name\", DeleteProperty)\n    } else {\n      return changeLog.deleteProperty(buffer, name)\n    }\n  }\n}\n\nexport class AddEventListener extends FBS.AddEventListener {\n  static opType = opType.AddEventListener\n  opType: typeof opType.AddEventListener = opType.AddEventListener\n  static encode(\n    builder: Builder,\n    type: string,\n    decoder: EventDecoder,\n    capture: boolean\n  ): Op {\n    const typeOffset = builder.createString(type)\n    const decoderOffset = Decoder.encode(builder, decoder)\n\n    AddEventListener.startAddEventListener(builder)\n    AddEventListener.addType(builder, typeOffset)\n    AddEventListener.addDecoderType(builder, Decoder.typeOf(decoder))\n    AddEventListener.addDecoder(builder, decoderOffset)\n    AddEventListener.addCapture(builder, capture)\n\n    return AddEventListener.endAddEventListener(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const capture = this.capture()\n    const type = this.type()\n    if (type == null) {\n      return new FieldError(\"type\", AddEventListener)\n    }\n    const decoder = Decoder.decode(this)\n    if (decoder instanceof DecoderError) {\n      return new FieldError(\"decoder\", AddEventListener)\n    } else {\n      return changeLog.addEventDecoder(buffer, type, decoder, capture)\n    }\n  }\n}\n\nexport class RemoveEventListener extends FBS.RemoveEventListener {\n  static opType = opType.RemoveEventListener\n  opType: typeof opType.RemoveEventListener = opType.RemoveEventListener\n  static encode(\n    builder: Builder,\n    type: string,\n    decoder: EventDecoder,\n    capture: boolean\n  ): Op {\n    const typeOffset = builder.createString(type)\n    const decoderOffset = Decoder.encode(builder, decoder)\n\n    RemoveEventListener.startRemoveEventListener(builder)\n    RemoveEventListener.addType(builder, typeOffset)\n    RemoveEventListener.addDecoderType(builder, Decoder.typeOf(decoder))\n    RemoveEventListener.addDecoder(builder, decoderOffset)\n    RemoveEventListener.addCapture(builder, capture)\n\n    return RemoveEventListener.endRemoveEventListener(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const capture = this.capture()\n    const type = this.type()\n    if (type == null) {\n      return new FieldError(\"type\", RemoveEventListener)\n    }\n\n    const decoder = Decoder.decode(this)\n    if (decoder instanceof DecoderError) {\n      return new FieldError(\"decoder\", RemoveEventListener)\n    } else {\n      return changeLog.removeEventDecoder(buffer, type, decoder, capture)\n    }\n  }\n}\n\nexport class DiscardStashed extends FBS.DiscardStashed {\n  static opType = opType.DiscardStashed\n  opType: typeof opType.DiscardStashed = opType.DiscardStashed\n  static encode(builder: Builder, address: number): Op {\n    DiscardStashed.startDiscardStashed(builder)\n    DiscardStashed.addAddress(builder, address)\n    return DiscardStashed.endDiscardStashed(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x {\n    return changeLog.discardStashedNode(buffer, this.address())\n  }\n}\n\nexport class ShiftSiblings extends FBS.ShiftSiblings {\n  static opType = opType.ShiftSiblings\n  opType: typeof opType.ShiftSiblings = opType.ShiftSiblings\n  static encode(builder: Builder, count: number): Op {\n    ShiftSiblings.startShiftSiblings(builder)\n    ShiftSiblings.addCount(builder, count)\n    return ShiftSiblings.endShiftSiblings(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x {\n    return changeLog.shiftSiblings(buffer, this.count())\n  }\n}\n\nexport class EditTextData extends FBS.EditTextData {\n  static opType = opType.EditTextData\n  opType: typeof opType.EditTextData = opType.EditTextData\n  static encode(\n    builder: Builder,\n    start: number,\n    end: number,\n    prefix: string,\n    suffix: string\n  ): Op {\n    const prefixOffset = builder.createString(prefix)\n    const suffixOffset = builder.createString(suffix)\n    EditTextData.startEditTextData(builder)\n    EditTextData.addStart(builder, start)\n    EditTextData.addEnd(builder, end)\n    EditTextData.addPrefix(builder, prefixOffset)\n    EditTextData.addSuffix(builder, suffixOffset)\n    return EditTextData.endEditTextData(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<EditTextData> {\n    const prefix = this.prefix()\n    if (prefix == null) {\n      return new FieldError(\"prefix\", EditTextData)\n    }\n\n    const suffix = this.suffix()\n    if (suffix == null) {\n      return new FieldError(\"suffix\", EditTextData)\n    }\n\n    return changeLog.editTextData(\n      buffer,\n      this.start(),\n      this.end(),\n      prefix,\n      suffix\n    )\n  }\n}\n\nexport class InsertComment extends FBS.InsertComment {\n  static opType = opType.InsertComment\n  opType: typeof opType.InsertComment = opType.InsertComment\n  static encode(builder: Builder, data: string): Op {\n    const dataOffset = builder.createString(data)\n    InsertComment.startInsertComment(builder)\n    InsertComment.addData(builder, dataOffset)\n    return InsertComment.endInsertComment(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<InsertComment> {\n    const data = this.data()\n    if (data == null) {\n      return new FieldError(\"data\", InsertComment)\n    } else {\n      return changeLog.insertComment(buffer, data)\n    }\n  }\n}\n\nexport class InsertElement extends FBS.InsertElement {\n  static opType = opType.InsertElement\n  opType: typeof opType.InsertElement = opType.InsertElement\n  static encode(\n    builder: Builder,\n    namespaceURI: ?string,\n    localName: string\n  ): Op {\n    const namespaceURIOffset =\n      namespaceURI == null ? null : builder.createString(namespaceURI)\n    const localNameOffset = builder.createString(localName)\n    InsertElement.startInsertElement(builder)\n    if (namespaceURIOffset != null) {\n      InsertElement.addNamespaceURI(builder, namespaceURIOffset)\n    }\n    InsertElement.addLocalName(builder, localNameOffset)\n    return InsertElement.endInsertElement(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const localName = this.localName()\n    if (localName == null) {\n      return new FieldError(\"localName\", InsertElement)\n    }\n\n    const namespaceURI = this.namespaceURI()\n    if (namespaceURI == null) {\n      return changeLog.insertElement(buffer, localName)\n    } else {\n      return changeLog.insertElementNS(buffer, namespaceURI, localName)\n    }\n  }\n}\n\nexport class InsertStashedNode extends FBS.InsertStashedNode {\n  static opType = opType.InsertStashedNode\n  opType: typeof opType.InsertStashedNode = opType.InsertStashedNode\n  static encode(builder: Builder, address: number): Op {\n    InsertStashedNode.startInsertStashedNode(builder)\n    InsertStashedNode.addAddress(builder, address)\n    return InsertStashedNode.endInsertStashedNode(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x {\n    return changeLog.insertStashedNode(buffer, this.address())\n  }\n}\n\nexport class InsertText extends FBS.InsertText {\n  static opType = opType.InsertText\n  opType: typeof opType.InsertText = opType.InsertText\n  static encode(builder: Builder, data: string): Op {\n    const dataOffset = builder.createString(data)\n    InsertText.startInsertText(builder)\n    InsertText.addData(builder, dataOffset)\n    return InsertText.endInsertText(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const data = this.data()\n    if (data == null) {\n      return new FieldError(\"data\", InsertText)\n    } else {\n      return changeLog.insertText(buffer, data)\n    }\n  }\n}\n\nexport class RemoveAttribute extends FBS.RemoveAttribute {\n  static opType = opType.RemoveAttribute\n  opType: typeof opType.RemoveAttribute = opType.RemoveAttribute\n  static encode(builder: Builder, namespaceURI: ?string, name: string): Op {\n    const namespaceURIOffset =\n      namespaceURI == null ? null : builder.createString(namespaceURI)\n    const nameOffset = builder.createString(name)\n    RemoveAttribute.startRemoveAttribute(builder)\n    if (namespaceURIOffset != null) {\n      RemoveAttribute.addNamespaceURI(builder, namespaceURIOffset)\n    }\n    RemoveAttribute.addName(builder, nameOffset)\n\n    return RemoveAttribute.endRemoveAttribute(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const name = this.name()\n    if (name == null) {\n      return new FieldError(\"name\", RemoveAttribute)\n    }\n    const namespaceURI = this.namespaceURI()\n    if (namespaceURI == null) {\n      return changeLog.removeAttribute(buffer, name)\n    } else {\n      return changeLog.removeAttributeNS(buffer, namespaceURI, name)\n    }\n  }\n}\n\nexport class RemoveNextSibling extends FBS.RemoveNextSibling {\n  static opType = opType.RemoveNextSibling\n  opType: typeof opType.RemoveNextSibling = opType.RemoveNextSibling\n  static encode(builder: Builder): Op {\n    RemoveNextSibling.startRemoveNextSibling(builder)\n    return RemoveNextSibling.endRemoveNextSibling(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x {\n    return changeLog.removeNextSibling(buffer)\n  }\n}\n\nexport class RemoveStyleRule extends FBS.RemoveStyleRule {\n  static opType = opType.RemoveStyleRule\n  opType: typeof opType.RemoveStyleRule = opType.RemoveStyleRule\n  static encode(builder: Builder, name: string): Op {\n    const nameOffset = builder.createString(name)\n    RemoveStyleRule.startRemoveStyleRule(builder)\n    RemoveStyleRule.addName(builder, nameOffset)\n    return RemoveStyleRule.endRemoveStyleRule(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const name = this.name()\n    if (name == null) {\n      return new FieldError(\"name\", RemoveStyleRule)\n    } else {\n      return changeLog.removeStyleRule(buffer, name)\n    }\n  }\n}\n\nexport class ReplaceWithComment extends FBS.ReplaceWithComment {\n  static opType = opType.ReplaceWithComment\n  opType: typeof opType.ReplaceWithComment = opType.ReplaceWithComment\n  static encode(builder: Builder, data: string): Op {\n    const dataOffset = builder.createString(data)\n    ReplaceWithComment.startReplaceWithComment(builder)\n    ReplaceWithComment.addData(builder, dataOffset)\n    return ReplaceWithComment.endReplaceWithComment(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const data = this.data()\n    if (data == null) {\n      return new FieldError(\"data\", ReplaceWithComment)\n    } else {\n      return changeLog.replaceWithComment(buffer, data)\n    }\n  }\n}\n\nexport class ReplaceWithElement extends FBS.ReplaceWithElement {\n  static opType = opType.ReplaceWithElement\n  opType: typeof opType.ReplaceWithElement = opType.ReplaceWithElement\n  static encode(\n    builder: Builder,\n    namespaceURI: ?string,\n    localName: string\n  ): Op {\n    const namespaceURIOffset =\n      namespaceURI == null ? null : builder.createString(namespaceURI)\n    const localNameOffset = builder.createString(localName)\n    ReplaceWithElement.startReplaceWithElement(builder)\n    if (namespaceURIOffset != null) {\n      ReplaceWithElement.addNamespaceURI(builder, namespaceURIOffset)\n    }\n    ReplaceWithElement.addLocalName(builder, localNameOffset)\n    return ReplaceWithElement.endReplaceWithElement(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const localName = this.localName()\n    if (localName == null) {\n      return new FieldError(\"localName\", ReplaceWithElement)\n    }\n\n    const namespaceURI = this.namespaceURI()\n    if (namespaceURI == null) {\n      return changeLog.replaceWithElement(buffer, localName)\n    } else {\n      return changeLog.replaceWithElementNS(buffer, namespaceURI, localName)\n    }\n  }\n}\n\nexport class ReplaceWithStashedNode extends FBS.ReplaceWithStashedNode {\n  static opType = opType.ReplaceWithStashedNode\n  opType: typeof opType.ReplaceWithStashedNode = opType.ReplaceWithStashedNode\n  static encode(builder: Builder, address: number): Op {\n    ReplaceWithStashedNode.startReplaceWithStashedNode(builder)\n    ReplaceWithStashedNode.addAddress(builder, address)\n    return ReplaceWithStashedNode.endReplaceWithStashedNode(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x {\n    return changeLog.replaceWithStashedNode(buffer, this.address())\n  }\n}\n\nexport class ReplaceWithText extends FBS.ReplaceWithText {\n  static opType = opType.ReplaceWithText\n  opType: typeof opType.ReplaceWithText = opType.ReplaceWithText\n  static encode(builder: Builder, data: string): Op {\n    const dataOffset = builder.createString(data)\n    ReplaceWithText.startReplaceWithText(builder)\n    ReplaceWithText.addData(builder, dataOffset)\n    return ReplaceWithText.endReplaceWithText(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const data = this.data()\n    if (data == null) {\n      return new FieldError(\"data\", ReplaceWithText)\n    } else {\n      return changeLog.replaceWithText(buffer, data)\n    }\n  }\n}\n\nexport class SelectChildren extends FBS.SelectChildren {\n  static opType = opType.SelectChildren\n  opType: typeof opType.SelectChildren = opType.SelectChildren\n  static encode(builder: Builder): Op {\n    SelectChildren.startSelectChildren(builder)\n    return SelectChildren.endSelectChildren(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x {\n    return changeLog.selectChildren(buffer)\n  }\n}\n\nexport class SelectParent extends FBS.SelectParent {\n  static opType = opType.SelectParent\n  opType: typeof opType.SelectParent = opType.SelectParent\n  static encode(builder: Builder): Op {\n    SelectParent.startSelectParent(builder)\n    return SelectParent.endSelectParent(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x {\n    return changeLog.selectParent(buffer)\n  }\n}\n\nexport class SelectSibling extends FBS.SelectSibling {\n  static opType = opType.SelectSibling\n  opType: typeof opType.SelectSibling = opType.SelectSibling\n  static encode(builder: Builder, n: number): Op {\n    SelectSibling.startSelectSibling(builder)\n    SelectSibling.addOffset(builder, n)\n    return SelectSibling.endSelectSibling(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x {\n    return changeLog.selectSibling(buffer, this.offset())\n  }\n}\n\nexport class SetAttribute extends FBS.SetAttribute {\n  static opType = opType.SetAttribute\n  opType: typeof opType.SetAttribute = opType.SetAttribute\n  static encode(\n    builder: Builder,\n    namespaceURI: ?string,\n    name: string,\n    value: string\n  ): Op {\n    const namespaceURIOffset =\n      namespaceURI == null ? null : builder.createString(namespaceURI)\n    const nameOffset = builder.createString(name)\n    const valueOffset = builder.createString(value)\n    SetAttribute.startSetAttribute(builder)\n    if (namespaceURIOffset != null) {\n      SetAttribute.addNamespaceURI(builder, namespaceURIOffset)\n    }\n    SetAttribute.addName(builder, nameOffset)\n    SetAttribute.addValue(builder, valueOffset)\n\n    return SetAttribute.endSetAttribute(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const name = this.name()\n    if (name == null) {\n      return new FieldError(\"name\", SetAttribute)\n    }\n    const value = this.value()\n    if (value == null) {\n      return new FieldError(\"value\", SetAttribute)\n    }\n    const namespaceURI = this.namespaceURI()\n    if (namespaceURI == null) {\n      return changeLog.setAttribute(buffer, name, value)\n    } else {\n      return changeLog.setAttributeNS(buffer, namespaceURI, name, value)\n    }\n  }\n}\n\nexport class SetStyleRule extends FBS.SetStyleRule {\n  static opType = opType.SetStyleRule\n  opType: typeof opType.SetStyleRule = opType.SetStyleRule\n  static encode(builder: Builder, name: string, value: string): Op {\n    const nameOffset = builder.createString(name)\n    const valueOffset = builder.createString(value)\n\n    SetStyleRule.startSetStyleRule(builder)\n    SetStyleRule.addName(builder, nameOffset)\n    SetStyleRule.addValue(builder, valueOffset)\n\n    return SetStyleRule.endSetStyleRule(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const name = this.name()\n    if (name == null) {\n      return new FieldError(\"name\", SetStyleRule)\n    }\n\n    const value = this.value()\n    if (value == null) {\n      return new FieldError(\"value\", SetStyleRule)\n    }\n\n    return changeLog.setStyleRule(buffer, name, value)\n  }\n}\n\nexport class SetTextData extends FBS.SetTextData {\n  static opType = opType.SetTextData\n  opType: typeof opType.SetTextData = opType.SetTextData\n  static encode(builder: Builder, data: string): Op {\n    const dataOffset = builder.createString(data)\n    SetTextData.startSetTextData(builder)\n    SetTextData.addData(builder, dataOffset)\n    return SetTextData.endSetTextData(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    const data = this.data()\n    if (data == null) {\n      return new FieldError(\"data\", SetTextData)\n    } else {\n      return changeLog.setTextData(buffer, data)\n    }\n  }\n}\n\nexport class StashNextSibling extends FBS.StashNextSibling {\n  static opType = opType.StashNextSibling\n  opType: typeof opType.StashNextSibling = opType.StashNextSibling\n  static encode(builder: Builder, address: number): Op {\n    StashNextSibling.startStashNextSibling(builder)\n    StashNextSibling.addAddress(builder, address)\n    return StashNextSibling.endStashNextSibling(builder)\n  }\n  decode<x>(changeLog: Encoder<x>, buffer: x): x | FieldError<self> {\n    return changeLog.stashNextSibling(buffer, this.address())\n  }\n}\n\nexport type OpVariant =\n  | AssignBooleanProperty\n  | AssignNullProperty\n  | AssignNumberProperty\n  | AssignStringProperty\n  | DeleteProperty\n  | DiscardStashed\n  | EditTextData\n  | InsertComment\n  | InsertElement\n  | InsertStashedNode\n  | InsertText\n  | RemoveAttribute\n  | RemoveNextSibling\n  | RemoveStyleRule\n  | ReplaceWithComment\n  | ReplaceWithElement\n  | ReplaceWithStashedNode\n  | ReplaceWithText\n  | SelectChildren\n  | SelectParent\n  | SelectSibling\n  | SetAttribute\n  | SetStyleRule\n  | SetTextData\n  | StashNextSibling\n  | ShiftSiblings\n","/* @flow */\n\nimport type { Builder, Offset } from \"flatbuffers\"\nimport type { Encoder, Decode, Result } from \"../../../Log\"\nimport type { Op, OpType, OpVariant } from \"./Op\"\nimport { DecoderError } from \"../Error\"\nimport * as ChangeLogTable from \"./ChangeLog\"\nimport * as op from \"./Op\"\n\nimport {\n  AssignBooleanProperty,\n  AssignNullProperty,\n  AssignNumberProperty,\n  AssignStringProperty,\n  DeleteProperty,\n  DiscardStashed,\n  EditTextData,\n  InsertComment,\n  InsertElement,\n  InsertStashedNode,\n  InsertText,\n  RemoveAttribute,\n  RemoveNextSibling,\n  RemoveStyleRule,\n  ReplaceWithComment,\n  ReplaceWithElement,\n  ReplaceWithStashedNode,\n  ReplaceWithText,\n  SelectChildren,\n  SelectParent,\n  SelectSibling,\n  SetAttribute,\n  SetStyleRule,\n  SetTextData,\n  StashNextSibling,\n  ShiftSiblings,\n  AddEventListener,\n  RemoveEventListener\n} from \"./Op\"\n\nexport opaque type Encoded<type>: Offset = Offset\nexport type EncodedChange = Encoded<Change>\n\nclass UnknownOpType extends DecoderError {\n  opType: OpType\n  constructor(opType: OpType) {\n    super()\n    this.opType = opType\n  }\n  format(context?: string) {\n    const where = context == null ? \"\" : `at ${context}`\n    return `Encountered unknown opType:${this.opType.toString()} in \"Change\" table${where}`\n  }\n}\n\nclass OpError extends DecoderError {\n  kind: \"OpError\" = \"OpError\"\n  opName: string\n  constructor(opName: string) {\n    super()\n    this.opName = opName\n  }\n  format(context?: string) {\n    const where = context == null ? \"\" : `at ${context}`\n    return `Failed to decode op as ${this.opName} table${where}`\n  }\n}\n\nexport default class Change extends ChangeLogTable.Change {\n  static Table = ChangeLogTable.Change\n  static pool: { [OpType]: OpVariant } = {\n    [AssignStringProperty.opType]: new AssignStringProperty(),\n    [RemoveNextSibling.opType]: new RemoveNextSibling(),\n    [InsertText.opType]: new InsertText(),\n    [InsertComment.opType]: new InsertComment(),\n    [InsertElement.opType]: new InsertElement(),\n    [ReplaceWithComment.opType]: new ReplaceWithComment(),\n    [ReplaceWithText.opType]: new ReplaceWithText(),\n    [ReplaceWithElement.opType]: new ReplaceWithElement(),\n    [ReplaceWithStashedNode.opType]: new ReplaceWithStashedNode(),\n    [InsertStashedNode.opType]: new InsertStashedNode(),\n    [RemoveAttribute.opType]: new RemoveAttribute(),\n    [DeleteProperty.opType]: new DeleteProperty(),\n    [AssignBooleanProperty.opType]: new AssignBooleanProperty(),\n    [AssignNullProperty.opType]: new AssignNullProperty(),\n    [AssignNumberProperty.opType]: new AssignNumberProperty(),\n    [SetAttribute.opType]: new SetAttribute(),\n    [SetStyleRule.opType]: new SetStyleRule(),\n    [RemoveStyleRule.opType]: new RemoveStyleRule(),\n    [SelectChildren.opType]: new SelectChildren(),\n    [SelectSibling.opType]: new SelectSibling(),\n    [SelectParent.opType]: new SelectParent(),\n    [EditTextData.opType]: new EditTextData(),\n    [SetTextData.opType]: new SetTextData(),\n    [DiscardStashed.opType]: new DiscardStashed(),\n    [StashNextSibling.opType]: new StashNextSibling(),\n    [ShiftSiblings.opType]: new ShiftSiblings(),\n    [AddEventListener.opType]: new AddEventListener(),\n    [RemoveEventListener.opType]: new RemoveEventListener()\n  }\n  static decode<x>(\n    change: Change,\n    changeLog: Encoder<x>,\n    buffer: x\n  ): x | DecoderError {\n    const type = change.opType()\n    const variant = Change.pool[type]\n    if (variant == null) {\n      return new UnknownOpType(type)\n    } else {\n      const op = change.op(variant)\n      if (op == null) {\n        return new OpError(variant.constructor.name)\n      }\n      return op.decode(changeLog, buffer)\n    }\n  }\n  static encode(\n    builder: Builder,\n    opType: OpType,\n    opOffset: Op\n  ): Encoded<Change> {\n    Change.startChange(builder)\n    Change.addOp(builder, opOffset)\n    Change.addOpType(builder, opType)\n    return Change.endChange(builder)\n  }\n}\n","/* @flow */\n\nimport type { Encoder } from \"../../Log\"\nimport * as Log from \"../../Log\"\nimport type { Op, OpType, OpVariant } from \"./ChangeLog.fbs/Op\"\nimport type { Builder, Offset } from \"flatbuffers\"\nimport type { EncodedChange } from \"./ChangeLog.fbs/Change\"\nimport * as ChangeLogTable from \"./ChangeLog.fbs/ChangeLog\"\nimport Change from \"./ChangeLog.fbs/Change\"\nimport { DecoderError } from \"./Error\"\n\nclass IndexError extends DecoderError {\n  kind: \"IndexError\" = \"IndexError\"\n  index: number\n  constructor(index: number) {\n    super()\n    this.index = index\n  }\n  fromat(context: ?string): string {\n    const where = context == null ? \"\" : `at ${context}`\n    return `Failed to decode ${this.index}th element from a vector${where}`\n  }\n}\n\nclass ChangeError extends DecoderError {\n  index: number\n  reason: DecoderError\n  constructor(index: number, reason: DecoderError) {\n    super()\n    this.index = index\n    this.reason = reason\n  }\n  fromat(context: ?string): string {\n    const { index, reason } = this\n    return reason.format(`changeLog.log[${index}]`)\n  }\n}\n\nconst changePool = new Change()\n\nexport default class ChangeLog extends ChangeLogTable.ChangeLog {\n  static Table = ChangeLogTable.ChangeLog\n  static decode<x>(\n    table: ChangeLog,\n    changeLog: Encoder<x>,\n    buffer: x\n  ): Log.Result<x> {\n    const count = table.logLength()\n\n    let index = 0\n    while (index < count) {\n      const change = table.log(index, changePool)\n      if (change == null) {\n        console.error(`Decode: Change is null log[${index}]`)\n        return new IndexError(index)\n      }\n      const result = Change.decode(changePool, changeLog, buffer)\n      if (result instanceof DecoderError) {\n        return new ChangeError(index, result)\n      } else {\n        buffer = result\n      }\n      index++\n    }\n\n    return buffer\n  }\n  static encode(builder: Builder, changes: EncodedChange[]): Offset {\n    const logOffset = ChangeLog.createLogVector(builder, (changes: any))\n    ChangeLog.startChangeLog(builder)\n    ChangeLog.addLog(builder, logOffset)\n    return ChangeLog.endChangeLog(builder)\n  }\n}\n","/* @flow */\n\nimport type { ChangeList, EventDecoder, Result } from \"../../Log\"\nimport type { Builder, ByteBuffer } from \"flatbuffers\"\nimport type { OpType, Op } from \"./ChangeLog.fbs/Op\"\nimport unreachable from \"unreachable\"\nimport { flatbuffers } from \"flatbuffers\"\nimport type { EncodedChange } from \"./ChangeLog.fbs/Change\"\nimport { ok, error } from \"result.flow\"\nimport Change from \"./ChangeLog.fbs/Change\"\nimport Changes from \"./ChangeLog.fbs\"\nimport { DecoderError } from \"./Error\"\n\nimport {\n  AssignBooleanProperty,\n  AssignNullProperty,\n  AssignNumberProperty,\n  AssignStringProperty,\n  AddEventListener,\n  RemoveEventListener,\n  DeleteProperty,\n  DiscardStashed,\n  EditTextData,\n  InsertComment,\n  InsertElement,\n  InsertStashedNode,\n  InsertText,\n  RemoveAttribute,\n  RemoveNextSibling,\n  RemoveStyleRule,\n  ReplaceWithComment,\n  ReplaceWithElement,\n  ReplaceWithStashedNode,\n  ReplaceWithText,\n  SelectChildren,\n  SelectParent,\n  SelectSibling,\n  SetAttribute,\n  SetStyleRule,\n  SetTextData,\n  StashNextSibling,\n  ShiftSiblings\n} from \"./ChangeLog.fbs/Op\"\n\nconst push = <a>(item: a, items: a[]): a[] => (items.push(item), items)\n\nexport default class FlatBufferEncoder {\n  builder: Builder\n  log: EncodedChange[]\n  constructor(builder: Builder, log: EncodedChange[]) {\n    this.reset(builder, log)\n  }\n  reset(builder: Builder, log: EncodedChange[]): FlatBufferEncoder {\n    this.builder = builder\n    this.log = log\n\n    return this\n  }\n  change(opType: OpType, opOffset: Op): FlatBufferEncoder {\n    return this.reset(\n      this.builder,\n      push(Change.encode(this.builder, opType, opOffset), this.log)\n    )\n  }\n  static toUint8Array({ builder, log }: FlatBufferEncoder): Uint8Array {\n    builder.finish(Changes.encode(builder, log))\n    return builder.asUint8Array()\n  }\n\n  static encoder(size: number = 1024): FlatBufferEncoder {\n    return new FlatBufferEncoder(new flatbuffers.Builder(size), [])\n  }\n  static selectChildren(state: FlatBufferEncoder): FlatBufferEncoder {\n    return state.change(\n      SelectChildren.opType,\n      SelectChildren.encode(state.builder)\n    )\n  }\n  static selectSibling(\n    state: FlatBufferEncoder,\n    offset: number\n  ): FlatBufferEncoder {\n    return state.change(\n      SelectSibling.opType,\n      SelectSibling.encode(state.builder, offset)\n    )\n  }\n  static selectParent(state: FlatBufferEncoder): FlatBufferEncoder {\n    return state.change(SelectParent.opType, SelectParent.encode(state.builder))\n  }\n  static removeNextSibling(state: FlatBufferEncoder): FlatBufferEncoder {\n    return state.change(\n      RemoveNextSibling.opType,\n      RemoveNextSibling.encode(state.builder)\n    )\n  }\n\n  static insertText(state: FlatBufferEncoder, data: string): FlatBufferEncoder {\n    return state.change(\n      InsertText.opType,\n      InsertText.encode(state.builder, data)\n    )\n  }\n  static insertComment(\n    state: FlatBufferEncoder,\n    data: string\n  ): FlatBufferEncoder {\n    return state.change(\n      InsertComment.opType,\n      InsertComment.encode(state.builder, data)\n    )\n  }\n  static insertElement(\n    state: FlatBufferEncoder,\n    localName: string\n  ): FlatBufferEncoder {\n    return state.change(\n      InsertElement.opType,\n      InsertElement.encode(state.builder, null, localName)\n    )\n  }\n  static insertElementNS(\n    state: FlatBufferEncoder,\n    namespaceURI: string,\n    localName: string\n  ): FlatBufferEncoder {\n    return state.change(\n      InsertElement.opType,\n      InsertElement.encode(state.builder, namespaceURI, localName)\n    )\n  }\n  static insertStashedNode(\n    state: FlatBufferEncoder,\n    address: number\n  ): FlatBufferEncoder {\n    return state.change(\n      InsertStashedNode.opType,\n      InsertStashedNode.encode(state.builder, address)\n    )\n  }\n\n  static replaceWithText(\n    state: FlatBufferEncoder,\n    data: string\n  ): FlatBufferEncoder {\n    return state.change(\n      ReplaceWithText.opType,\n      ReplaceWithText.encode(state.builder, data)\n    )\n  }\n  static replaceWithComment(\n    state: FlatBufferEncoder,\n    data: string\n  ): FlatBufferEncoder {\n    return state.change(\n      ReplaceWithComment.opType,\n      ReplaceWithComment.encode(state.builder, data)\n    )\n  }\n  static replaceWithElement(\n    state: FlatBufferEncoder,\n    localName: string\n  ): FlatBufferEncoder {\n    return state.change(\n      ReplaceWithElement.opType,\n      ReplaceWithElement.encode(state.builder, null, localName)\n    )\n  }\n  static replaceWithElementNS(\n    state: FlatBufferEncoder,\n    namespaceURI: string,\n    localName: string\n  ): FlatBufferEncoder {\n    return state.change(\n      ReplaceWithElement.opType,\n      ReplaceWithElement.encode(state.builder, namespaceURI, localName)\n    )\n  }\n  static replaceWithStashedNode(\n    state: FlatBufferEncoder,\n    address: number\n  ): FlatBufferEncoder {\n    return state.change(\n      ReplaceWithStashedNode.opType,\n      ReplaceWithStashedNode.encode(state.builder, address)\n    )\n  }\n\n  static editTextData(\n    state: FlatBufferEncoder,\n    start: number,\n    end: number,\n    prefix: string,\n    suffix: string\n  ): FlatBufferEncoder {\n    return state.change(\n      EditTextData.opType,\n      EditTextData.encode(state.builder, start, end, prefix, suffix)\n    )\n  }\n  static setTextData(\n    state: FlatBufferEncoder,\n    data: string\n  ): FlatBufferEncoder {\n    return state.change(\n      SetTextData.opType,\n      SetTextData.encode(state.builder, data)\n    )\n  }\n  static setAttribute(\n    state: FlatBufferEncoder,\n    name: string,\n    value: string\n  ): FlatBufferEncoder {\n    return state.change(\n      SetAttribute.opType,\n      SetAttribute.encode(state.builder, null, name, value)\n    )\n  }\n  static removeAttribute(\n    state: FlatBufferEncoder,\n    name: string\n  ): FlatBufferEncoder {\n    return state.change(\n      RemoveAttribute.opType,\n      RemoveAttribute.encode(state.builder, null, name)\n    )\n  }\n  static setAttributeNS(\n    state: FlatBufferEncoder,\n    namespaceURI: string,\n    name: string,\n    value: string\n  ): FlatBufferEncoder {\n    return state.change(\n      SetAttribute.opType,\n      SetAttribute.encode(state.builder, namespaceURI, name, value)\n    )\n  }\n  static removeAttributeNS(\n    state: FlatBufferEncoder,\n    namespaceURI: string,\n    name: string\n  ): FlatBufferEncoder {\n    return state.change(\n      RemoveAttribute.opType,\n      RemoveAttribute.encode(state.builder, namespaceURI, name)\n    )\n  }\n  static assignProperty(\n    state: FlatBufferEncoder,\n    name: string,\n    value: string | number | boolean | null\n  ): FlatBufferEncoder {\n    switch (typeof value) {\n      case \"string\": {\n        return state.change(\n          AssignStringProperty.opType,\n          AssignStringProperty.encode(state.builder, name, value)\n        )\n      }\n      case \"number\": {\n        return state.change(\n          AssignNumberProperty.opType,\n          AssignNumberProperty.encode(state.builder, name, value)\n        )\n      }\n      case \"boolean\": {\n        return state.change(\n          AssignBooleanProperty.opType,\n          AssignBooleanProperty.encode(state.builder, name, value)\n        )\n      }\n      default: {\n        if (value === null) {\n          return state.change(\n            AssignNullProperty.opType,\n            AssignNullProperty.encode(state.builder, name, value)\n          )\n        } else {\n          return unreachable(value)\n        }\n      }\n    }\n  }\n  static deleteProperty(\n    state: FlatBufferEncoder,\n    name: string\n  ): FlatBufferEncoder {\n    return state.change(\n      DeleteProperty.opType,\n      DeleteProperty.encode(state.builder, name)\n    )\n  }\n  static setStyleRule(\n    state: FlatBufferEncoder,\n    name: string,\n    value: string\n  ): FlatBufferEncoder {\n    return state.change(\n      SetStyleRule.opType,\n      SetStyleRule.encode(state.builder, name, value)\n    )\n  }\n  static removeStyleRule(\n    state: FlatBufferEncoder,\n    name: string\n  ): FlatBufferEncoder {\n    return state.change(\n      RemoveStyleRule.opType,\n      RemoveStyleRule.encode(state.builder, name)\n    )\n  }\n  static addEventDecoder(\n    state: FlatBufferEncoder,\n    type: string,\n    decoder: EventDecoder,\n    capture: boolean\n  ): FlatBufferEncoder {\n    return state.change(\n      AddEventListener.opType,\n      AddEventListener.encode(state.builder, type, decoder, capture)\n    )\n  }\n  static removeEventDecoder(\n    state: FlatBufferEncoder,\n    type: string,\n    decoder: EventDecoder,\n    capture: boolean\n  ): FlatBufferEncoder {\n    return state.change(\n      RemoveEventListener.opType,\n      RemoveEventListener.encode(state.builder, type, decoder, capture)\n    )\n  }\n\n  static stashNextSibling(\n    state: FlatBufferEncoder,\n    address: number\n  ): FlatBufferEncoder {\n    return state.change(\n      StashNextSibling.opType,\n      StashNextSibling.encode(state.builder, address)\n    )\n  }\n  static discardStashedNode(\n    state: FlatBufferEncoder,\n    address: number\n  ): FlatBufferEncoder {\n    return state.change(\n      DiscardStashed.opType,\n      DiscardStashed.encode(state.builder, address)\n    )\n  }\n  static shiftSiblings(\n    state: FlatBufferEncoder,\n    count: number\n  ): FlatBufferEncoder {\n    return state.change(\n      ShiftSiblings.opType,\n      ShiftSiblings.encode(state.builder, count)\n    )\n  }\n\n  static encode(changeList: ChangeList): Result<Uint8Array> {\n    const result = changeList.encode(\n      FlatBufferEncoder,\n      FlatBufferEncoder.encoder()\n    )\n    if (result instanceof FlatBufferEncoder) {\n      return FlatBufferEncoder.toUint8Array(result)\n    } else {\n      return result\n    }\n  }\n}\n","/* @flow */\n\nimport type { Encoder, Decode, Result, ChangeList } from \"../../Log\"\nimport * as Log from \"../../Log\"\nimport unreachable from \"unreachable\"\nimport { flatbuffers } from \"flatbuffers\"\nimport type { Builder, ByteBuffer } from \"flatbuffers\"\nimport ChangeLog from \"./ChangeLog.fbs\"\nimport { DecoderError } from \"./Error\"\n\nimport {\n  type Op,\n  type OpVariant,\n  AssignBooleanProperty,\n  AssignNullProperty,\n  AssignNumberProperty,\n  AssignStringProperty,\n  DeleteProperty,\n  DiscardStashed,\n  EditTextData,\n  InsertComment,\n  InsertElement,\n  InsertStashedNode,\n  InsertText,\n  RemoveAttribute,\n  RemoveNextSibling,\n  RemoveStyleRule,\n  ReplaceWithComment,\n  ReplaceWithElement,\n  ReplaceWithStashedNode,\n  ReplaceWithText,\n  SelectChildren,\n  SelectParent,\n  SelectSibling,\n  SetAttribute,\n  SetStyleRule,\n  SetTextData,\n  StashNextSibling\n} from \"./ChangeLog.fbs/Op\"\n\nexport default class FlatBufferDecoder implements ChangeList {\n  data: Uint8Array\n  constructor(data: Uint8Array) {\n    this.data = data\n  }\n  encode<buffer>(encoder: Encoder<buffer>, init: buffer): Result<buffer> {\n    const byteBuffer = new flatbuffers.ByteBuffer(this.data)\n    const chageLog = new ChangeLog()\n    ChangeLog.getRootAsChangeLog(byteBuffer, chageLog)\n    return ChangeLog.decode(chageLog, encoder, init)\n  }\n\n  static decode(data: Uint8Array): ChangeList {\n    return new FlatBufferDecoder(data)\n  }\n}\n","/* @flow */\n\nimport Encoder from \"./FlatBuffer/Encoder\"\nimport Decoder from \"./FlatBuffer/Decoder\"\n\nexport default class FlatBuffer {\n  static Encoder = Encoder\n  static Decoder = Decoder\n  static encoder = Encoder.encoder\n  static encode = Encoder.encode\n  static decode = Decoder.decode\n}\n","// @flow\n\nimport { DOMinion } from \"./DOM\"\nimport FlatBuffer from \"dominion/src/Format/FlatBuffer\"\nimport Log from \"dominion/src/Patch/Log\"\n\nconst indexOf = (child: Node, parent: Node): ?number => {\n  let index = 0\n  let node = parent.firstChild\n  while (node) {\n    if (node === child) {\n      return index\n    } else {\n      index++\n      node = node.nextSibling\n    }\n  }\n\n  return null\n}\n\nconst getPath = (from: Node, to: Node): ?(number[]) => {\n  let path = []\n  let node = from\n  while (node !== to) {\n    const { parentNode } = node\n    if (parentNode) {\n      const n = indexOf(node, parentNode)\n      if (n == null) {\n        return null\n      } else {\n        path.unshift(n)\n        node = parentNode\n      }\n    } else {\n      return null\n    }\n  }\n  return path\n}\n\nexport default class Process {\n  target: HTMLElement\n  worker: Worker\n  mailbox: Uint8Array[]\n  host: DOMinion.Archive<HTMLElement>\n  static spawn(script: string, target: HTMLElement = window.document.body) {\n    const mailbox = []\n    const host = DOMinion.mount(target, (result, event) =>\n      process.handleUIEvent(result, event)\n    )\n    const worker = new Worker(script)\n\n    const process = new Process(target, worker, mailbox, host)\n    return process\n  }\n  constructor(\n    target: HTMLElement,\n    worker: Worker,\n    mailbox: Uint8Array[],\n    host: DOMinion.Archive<HTMLElement>\n  ) {\n    this.target = target\n    this.worker = worker\n    this.mailbox = mailbox\n    this.host = host\n    worker.addEventListener(\"message\", (this: any))\n  }\n  handleEvent(event: MessageEvent) {\n    const { buffer, byteOffset } = (event.data: any)\n    const changeList = new Uint8Array(buffer, byteOffset)\n    this.mailbox.unshift(changeList)\n  }\n  handleUIEvent(result: Object, event: Event) {\n    const { worker, target } = this\n    if (result.isOk) {\n      const { value } = result\n      if (value != null) {\n        const path = getPath((event.currentTarget: Object), target)\n        worker.postMessage({\n          message: value,\n          path\n        })\n      }\n    } else {\n      console.error(result.error)\n    }\n  }\n  tick(): boolean {\n    const { mailbox, host } = this\n    if (mailbox.length > 0) {\n      const changeList = mailbox.pop()\n      const result = DOMinion.patch(host, FlatBuffer.decode(changeList))\n      if (result.isError) {\n        console.error(result)\n      }\n    }\n    return mailbox.length > 0\n  }\n}\n","// @flow\n\nimport Process from \"../Process\"\n\nlet lastTime = 0\nlet frameCount = 0\nconst fps = document.getElementById(\"fps\") || document.createElement(\"div\")\nconst scene = document.querySelector(\"#container\") || window.document.body\nfunction updateFPS(time) {\n  frameCount++\n  if (lastTime + 1000.0 <= time) {\n    fps.textContent = `${frameCount}`\n    lastTime = time\n    frameCount = 0\n  }\n}\n\nconst triangle = Process.spawn(\"./Triangle.js\", scene)\nconst counter = Process.spawn(\"./Counter.js\", scene)\n\nconst update = now => {\n  triangle.tick()\n  updateFPS(now)\n  requestAnimationFrame(update)\n  requestIdleCallback(updateCounter)\n}\n\nconst updateCounter = () => {\n  counter.tick()\n}\nrequestAnimationFrame(update)\n"],"names":["unreachable","value","format","JSON","stringify","TypeError","nil","Object","freeze","empty","blank","create","patch","archive","changeList","Ok","isOk","f","next","result","fallback","Error","error","ok","anArticle","decode","decoder","input","message","description","name","type","context","where","defineProperties","prototype","describe","defineProperty","articleFor","word","test","serialize","String","toString","_","json","charAt","expect","actual","article","MissmatchError","ThrownError","exception","StringConstructor","constructor","Boolean","truncate","Integer","Number","isInteger","toFloat","Float","isFinite","Optional","Variant","optional","FieldError","field","problem","Field","RecordReader","fields","key","keys","Form","form","record","IndexError","index","Index","member","Array","isArray","length","array","element","AccessorError","accessor","Accessor","object","DictionaryReader","dictionary","EitherError","problems","descriptions","map","join","Either","decoders","either","push","Null","Undefined","undefined","And","left","right","matches","expected","count","isMatch","hasOwnProperty","call","Match","match","Dictionary","Maybe","maybe","Record","StringDecoder","BooleanDecoder","FloatDecoder","IntegerDecoder","reason","and","ArrayDecoder","DictionaryDecoder","RecordDecoder","annul","avoid","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","insertNode","target","childrenSelected","node","insertBefore","firstChild","parent","parentNode","nextSibling","removeNode","removeChild","replaceNode","state","replaceChild","getTextDataUpdateTarget","selectChildren","nodeType","getUpdateTargetElement","getTargetStyle","style","getStashedNode","stash","address","DOMPatch","mailbox","selectSibling","offset","select","childNodes","selectParent","removeNextSibling","insertText","data","ownerDocument","createTextNode","insertComment","createComment","insertElement","localName","createElement","insertElementNS","namespaceURI","createElementNS","insertStashedNode","replaceWithText","replaceWithComment","replaceWithElement","replaceWithElementNS","replaceWithStashedNode","editTextData","start","end","prefix","suffix","content","substring","setTextData","setAttribute","removeAttribute","setAttributeNS","removeAttributeNS","assignProperty","deleteProperty","setStyleRule","removeStyleRule","addEventDecoder","capture","host","DOMinion","removeEventDecoder","stashNextSibling","discardStashedNode","shiftSiblings","receive","DOMArchive","CAPTURING_PHASE","handleEvent","event","currentTarget","eventPhase","hash","handler","detail","Decoder","send","removeEventListener","addEventListener","cursor","reset","encode","mount","DecoderError","isError","fieldName","table","kind","VariantError","options","option","optionName","JSONVariant","JSONArray","bb_pos","i","bb","getRootAsJSONArray","obj","__init","readInt32","position","__offset","Element","__indirect","__vector","__vector_len","startJSONArray","builder","startObject","addElements","elementsOffset","addFieldOffset","createElementsVector","startVector","addOffset","endVector","startElementsVector","numElems","endJSONArray","endObject","JSONObject","getRootAsJSONObject","Property","startJSONObject","addProperties","propertiesOffset","createPropertiesVector","startPropertiesVector","endJSONObject","getRootAsProperty","optionalEncoding","__string","readUint8","NONE","__union","startProperty","addName","nameOffset","addValueType","valueType","addFieldInt8","addValue","valueOffset","endProperty","getRootAsElement","startElement","endElement","getRootAsBoolean","readInt8","startBoolean","endBoolean","getRootAsInteger","startInteger","addFieldInt32","endInteger","getRootAsString","startString","endString","getRootAsFloat","readFloat32","startFloat","addFieldFloat32","endFloat","getRootAsAccessor","startAccessor","addDecoderType","accessorType","addDecoder","accessorOffset","endAccessor","Collection","getRootAsCollection","startCollection","decoderType","decoderOffset","endCollection","getRootAsPrimitive","getRootAsDictionary","startDictionary","endDictionary","getRootAsEither","startEither","addVariants","variantsOffset","createVariantsVector","startVariantsVector","endEither","getRootAsVariant","startVariant","endVariant","getRootAsError","startError","addMessage","messageOffset","endError","getRootAsOk","startOk","endOk","getRootAsField","startField","endField","getRootAsIndex","startIndex","addIndex","endIndex","getRootAsForm","startForm","addFields","fieldsOffset","createFormVector","startFieldsVector","endForm","getRootAsRecord","startRecord","createFieldsVector","endRecord","getRootAsMaybe","startMaybe","endMaybe","getRootAsNull","startNull","endNull","getRootAsUndefined","startUndefined","endUndefined","getRootAsOptional","startOptional","endOptional","getRootAsAnd","startAnd","addLeftType","leftType","addLeft","leftOffset","addRightType","rightType","addRight","rightOffset","endAnd","getRootAsMatch","startMatch","endMatch","op","StashNextSibling","getRootAsStashNextSibling","startStashNextSibling","addAddress","endStashNextSibling","ShiftSiblings","getRootAsShiftSiblings","startShiftSiblings","addCount","endShiftSiblings","DiscardStashed","getRootAsDiscardStashed","startDiscardStashed","endDiscardStashed","AssignStringProperty","getRootAsAssignStringProperty","startAssignStringProperty","endAssignStringProperty","AssignBooleanProperty","getRootAsAssignBooleanProperty","startAssignBooleanProperty","endAssignBooleanProperty","AssignNumberProperty","getRootAsAssignNumberProperty","readFloat64","startAssignNumberProperty","addFieldFloat64","endAssignNumberProperty","AssignNullProperty","getRootAsAssignNullProperty","startAssignNullProperty","endAssignNullProperty","DeleteProperty","getRootAsDeleteProperty","startDeleteProperty","endDeleteProperty","SetStyleRule","getRootAsSetStyleRule","startSetStyleRule","endSetStyleRule","RemoveStyleRule","getRootAsRemoveStyleRule","startRemoveStyleRule","endRemoveStyleRule","SetAttribute","getRootAsSetAttribute","startSetAttribute","addNamespaceURI","namespaceURIOffset","endSetAttribute","RemoveAttribute","getRootAsRemoveAttribute","startRemoveAttribute","endRemoveAttribute","InsertText","getRootAsInsertText","startInsertText","addData","dataOffset","endInsertText","InsertComment","getRootAsInsertComment","startInsertComment","endInsertComment","InsertElement","getRootAsInsertElement","startInsertElement","addLocalName","localNameOffset","endInsertElement","InsertStashedNode","getRootAsInsertStashedNode","startInsertStashedNode","endInsertStashedNode","ReplaceWithText","getRootAsReplaceWithText","startReplaceWithText","endReplaceWithText","ReplaceWithComment","getRootAsReplaceWithComment","startReplaceWithComment","endReplaceWithComment","ReplaceWithElement","getRootAsReplaceWithElement","startReplaceWithElement","endReplaceWithElement","ReplaceWithStashedNode","getRootAsReplaceWithStashedNode","startReplaceWithStashedNode","endReplaceWithStashedNode","SetTextData","getRootAsSetTextData","startSetTextData","endSetTextData","EditTextData","getRootAsEditTextData","startEditTextData","addStart","addEnd","addPrefix","prefixOffset","addSuffix","suffixOffset","endEditTextData","SelectChildren","getRootAsSelectChildren","startSelectChildren","endSelectChildren","SelectSibling","getRootAsSelectSibling","startSelectSibling","endSelectSibling","SelectParent","getRootAsSelectParent","startSelectParent","endSelectParent","RemoveNextSibling","getRootAsRemoveNextSibling","startRemoveNextSibling","endRemoveNextSibling","AddEventListener","getRootAsAddEventListener","startAddEventListener","addType","typeOffset","addCapture","endAddEventListener","RemoveEventListener","getRootAsRemoveEventListener","startRemoveEventListener","endRemoveEventListener","Change","getRootAsChange","startChange","addOpType","opType","addOp","opOffset","endChange","ChangeLog","getRootAsChangeLog","startChangeLog","addLog","logOffset","createLogVector","startLogVector","endChangeLog","finishChangeLogBuffer","finish","JSONTable","createString","typeOf","encodedValue","elements","elementsLength","encodedName","properties","property","propertiesLength","from","variant","pool","DecoderTable","encodedDecoder","variants","encodedVariant","encodedVariants","variantsLength","Left","source","Right","encodedLeft","encodedRight","encodedMessage","Fields","offsets","fieldsLength","encodedFields","FBS","changeLog","buffer","n","UnknownOpType","OpError","opName","ChangeLogTable","change","Table","ChangeError","changePool","logLength","log","changes","item","items","FlatBufferEncoder","toUint8Array","Changes","asUint8Array","encoder","size","flatbuffers","Builder","FlatBufferDecoder","init","byteBuffer","ByteBuffer","chageLog","FlatBuffer","Encoder","indexOf","child","getPath","to","path","unshift","Process","spawn","script","window","document","body","process","handleUIEvent","worker","Worker","byteOffset","Uint8Array","postMessage","pop","lastTime","frameCount","fps","getElementById","scene","querySelector","updateFPS","time","textContent","triangle","counter","update","now","tick","updateCounter","requestAnimationFrame"],"mappings":"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"}